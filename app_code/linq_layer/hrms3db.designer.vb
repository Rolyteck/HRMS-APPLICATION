'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection

Namespace Hrms3
	
	<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="HRMS2DB_CHI")>  _
	Partial Public Class hrms3dbDataContext
		Inherits System.Data.Linq.DataContext
		
		Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub InsertAuditLog(instance As AuditLog)
    End Sub
    Partial Private Sub UpdateAuditLog(instance As AuditLog)
    End Sub
    Partial Private Sub DeleteAuditLog(instance As AuditLog)
    End Sub
    Partial Private Sub InsertAutoNumber(instance As AutoNumber)
    End Sub
    Partial Private Sub UpdateAutoNumber(instance As AutoNumber)
    End Sub
    Partial Private Sub DeleteAutoNumber(instance As AutoNumber)
    End Sub
    Partial Private Sub InsertBranch(instance As Branch)
    End Sub
    Partial Private Sub UpdateBranch(instance As Branch)
    End Sub
    Partial Private Sub DeleteBranch(instance As Branch)
    End Sub
    Partial Private Sub InsertCompany(instance As Company)
    End Sub
    Partial Private Sub UpdateCompany(instance As Company)
    End Sub
    Partial Private Sub DeleteCompany(instance As Company)
    End Sub
    Partial Private Sub InsertRegion(instance As Region)
    End Sub
    Partial Private Sub UpdateRegion(instance As Region)
    End Sub
    Partial Private Sub DeleteRegion(instance As Region)
    End Sub
    Partial Private Sub InsertRole(instance As Role)
    End Sub
    Partial Private Sub UpdateRole(instance As Role)
    End Sub
    Partial Private Sub DeleteRole(instance As Role)
    End Sub
    Partial Private Sub InsertState(instance As State)
    End Sub
    Partial Private Sub UpdateState(instance As State)
    End Sub
    Partial Private Sub DeleteState(instance As State)
    End Sub
    Partial Private Sub InsertHPayDept(instance As HPayDept)
    End Sub
    Partial Private Sub UpdateHPayDept(instance As HPayDept)
    End Sub
    Partial Private Sub DeleteHPayDept(instance As HPayDept)
    End Sub
    Partial Private Sub InsertHPaySection(instance As HPaySection)
    End Sub
    Partial Private Sub UpdateHPaySection(instance As HPaySection)
    End Sub
    Partial Private Sub DeleteHPaySection(instance As HPaySection)
    End Sub
    Partial Private Sub InsertHRAttendance(instance As HRAttendance)
    End Sub
    Partial Private Sub UpdateHRAttendance(instance As HRAttendance)
    End Sub
    Partial Private Sub DeleteHRAttendance(instance As HRAttendance)
    End Sub
    Partial Private Sub InsertHRCompensation(instance As HRCompensation)
    End Sub
    Partial Private Sub UpdateHRCompensation(instance As HRCompensation)
    End Sub
    Partial Private Sub DeleteHRCompensation(instance As HRCompensation)
    End Sub
    Partial Private Sub InsertHRCompVehicle(instance As HRCompVehicle)
    End Sub
    Partial Private Sub UpdateHRCompVehicle(instance As HRCompVehicle)
    End Sub
    Partial Private Sub DeleteHRCompVehicle(instance As HRCompVehicle)
    End Sub
    Partial Private Sub InsertHRDiscipline(instance As HRDiscipline)
    End Sub
    Partial Private Sub UpdateHRDiscipline(instance As HRDiscipline)
    End Sub
    Partial Private Sub DeleteHRDiscipline(instance As HRDiscipline)
    End Sub
    Partial Private Sub InsertHRDisciplineType(instance As HRDisciplineType)
    End Sub
    Partial Private Sub UpdateHRDisciplineType(instance As HRDisciplineType)
    End Sub
    Partial Private Sub DeleteHRDisciplineType(instance As HRDisciplineType)
    End Sub
    Partial Private Sub InsertHREducation(instance As HREducation)
    End Sub
    Partial Private Sub UpdateHREducation(instance As HREducation)
    End Sub
    Partial Private Sub DeleteHREducation(instance As HREducation)
    End Sub
    Partial Private Sub InsertHRExperience(instance As HRExperience)
    End Sub
    Partial Private Sub UpdateHRExperience(instance As HRExperience)
    End Sub
    Partial Private Sub DeleteHRExperience(instance As HRExperience)
    End Sub
    Partial Private Sub InsertHRHobby(instance As HRHobby)
    End Sub
    Partial Private Sub UpdateHRHobby(instance As HRHobby)
    End Sub
    Partial Private Sub DeleteHRHobby(instance As HRHobby)
    End Sub
    Partial Private Sub InsertHRProfQ(instance As HRProfQ)
    End Sub
    Partial Private Sub UpdateHRProfQ(instance As HRProfQ)
    End Sub
    Partial Private Sub DeleteHRProfQ(instance As HRProfQ)
    End Sub
    Partial Private Sub InsertHRProperty(instance As HRProperty)
    End Sub
    Partial Private Sub UpdateHRProperty(instance As HRProperty)
    End Sub
    Partial Private Sub DeleteHRProperty(instance As HRProperty)
    End Sub
    Partial Private Sub InsertHRStep(instance As HRStep)
    End Sub
    Partial Private Sub UpdateHRStep(instance As HRStep)
    End Sub
    Partial Private Sub DeleteHRStep(instance As HRStep)
    End Sub
    Partial Private Sub InsertHRTrainingNeed(instance As HRTrainingNeed)
    End Sub
    Partial Private Sub UpdateHRTrainingNeed(instance As HRTrainingNeed)
    End Sub
    Partial Private Sub DeleteHRTrainingNeed(instance As HRTrainingNeed)
    End Sub
    Partial Private Sub InsertPaySheet(instance As PaySheet)
    End Sub
    Partial Private Sub UpdatePaySheet(instance As PaySheet)
    End Sub
    Partial Private Sub DeletePaySheet(instance As PaySheet)
    End Sub
    Partial Private Sub InsertPurCategory(instance As PurCategory)
    End Sub
    Partial Private Sub UpdatePurCategory(instance As PurCategory)
    End Sub
    Partial Private Sub DeletePurCategory(instance As PurCategory)
    End Sub
    Partial Private Sub InsertPurFamily(instance As PurFamily)
    End Sub
    Partial Private Sub UpdatePurFamily(instance As PurFamily)
    End Sub
    Partial Private Sub DeletePurFamily(instance As PurFamily)
    End Sub
    Partial Private Sub InsertPurPartner(instance As PurPartner)
    End Sub
    Partial Private Sub UpdatePurPartner(instance As PurPartner)
    End Sub
    Partial Private Sub DeletePurPartner(instance As PurPartner)
    End Sub
    Partial Private Sub InsertPurProduct(instance As PurProduct)
    End Sub
    Partial Private Sub UpdatePurProduct(instance As PurProduct)
    End Sub
    Partial Private Sub DeletePurProduct(instance As PurProduct)
    End Sub
    Partial Private Sub InsertVPayAllowance(instance As VPayAllowance)
    End Sub
    Partial Private Sub UpdateVPayAllowance(instance As VPayAllowance)
    End Sub
    Partial Private Sub DeleteVPayAllowance(instance As VPayAllowance)
    End Sub
    Partial Private Sub InsertVPayDeduction(instance As VPayDeduction)
    End Sub
    Partial Private Sub UpdateVPayDeduction(instance As VPayDeduction)
    End Sub
    Partial Private Sub DeleteVPayDeduction(instance As VPayDeduction)
    End Sub
    Partial Private Sub InsertHRReferee(instance As HRReferee)
    End Sub
    Partial Private Sub UpdateHRReferee(instance As HRReferee)
    End Sub
    Partial Private Sub DeleteHRReferee(instance As HRReferee)
    End Sub
    Partial Private Sub InsertHRAppraisal(instance As HRAppraisal)
    End Sub
    Partial Private Sub UpdateHRAppraisal(instance As HRAppraisal)
    End Sub
    Partial Private Sub DeleteHRAppraisal(instance As HRAppraisal)
    End Sub
    Partial Private Sub InsertAllowanceID(instance As AllowanceID)
    End Sub
    Partial Private Sub UpdateAllowanceID(instance As AllowanceID)
    End Sub
    Partial Private Sub DeleteAllowanceID(instance As AllowanceID)
    End Sub
    Partial Private Sub InsertDeductionID(instance As DeductionID)
    End Sub
    Partial Private Sub UpdateDeductionID(instance As DeductionID)
    End Sub
    Partial Private Sub DeleteDeductionID(instance As DeductionID)
    End Sub
    Partial Private Sub InsertHRPromotion(instance As HRPromotion)
    End Sub
    Partial Private Sub UpdateHRPromotion(instance As HRPromotion)
    End Sub
    Partial Private Sub DeleteHRPromotion(instance As HRPromotion)
    End Sub
    Partial Private Sub InsertMktContact(instance As MktContact)
    End Sub
    Partial Private Sub UpdateMktContact(instance As MktContact)
    End Sub
    Partial Private Sub DeleteMktContact(instance As MktContact)
    End Sub
    Partial Private Sub InsertAppraisal(instance As Appraisal)
    End Sub
    Partial Private Sub UpdateAppraisal(instance As Appraisal)
    End Sub
    Partial Private Sub DeleteAppraisal(instance As Appraisal)
    End Sub
    Partial Private Sub InsertTransaction(instance As Transaction)
    End Sub
    Partial Private Sub UpdateTransaction(instance As Transaction)
    End Sub
    Partial Private Sub DeleteTransaction(instance As Transaction)
    End Sub
    Partial Private Sub InsertTransactionDetail(instance As TransactionDetail)
    End Sub
    Partial Private Sub UpdateTransactionDetail(instance As TransactionDetail)
    End Sub
    Partial Private Sub DeleteTransactionDetail(instance As TransactionDetail)
    End Sub
    Partial Private Sub InsertHPayAllowance(instance As HPayAllowance)
    End Sub
    Partial Private Sub UpdateHPayAllowance(instance As HPayAllowance)
    End Sub
    Partial Private Sub DeleteHPayAllowance(instance As HPayAllowance)
    End Sub
    Partial Private Sub InsertHPayDeduction(instance As HPayDeduction)
    End Sub
    Partial Private Sub UpdateHPayDeduction(instance As HPayDeduction)
    End Sub
    Partial Private Sub DeleteHPayDeduction(instance As HPayDeduction)
    End Sub
    Partial Private Sub InsertSetting(instance As Setting)
    End Sub
    Partial Private Sub UpdateSetting(instance As Setting)
    End Sub
    Partial Private Sub DeleteSetting(instance As Setting)
    End Sub
    Partial Private Sub InsertLoanAcct(instance As LoanAcct)
    End Sub
    Partial Private Sub UpdateLoanAcct(instance As LoanAcct)
    End Sub
    Partial Private Sub DeleteLoanAcct(instance As LoanAcct)
    End Sub
    Partial Private Sub InsertTrainingCadre(instance As TrainingCadre)
    End Sub
    Partial Private Sub UpdateTrainingCadre(instance As TrainingCadre)
    End Sub
    Partial Private Sub DeleteTrainingCadre(instance As TrainingCadre)
    End Sub
    Partial Private Sub InsertUser(instance As User)
    End Sub
    Partial Private Sub UpdateUser(instance As User)
    End Sub
    Partial Private Sub DeleteUser(instance As User)
    End Sub
    Partial Private Sub InsertHRMedical(instance As HRMedical)
    End Sub
    Partial Private Sub UpdateHRMedical(instance As HRMedical)
    End Sub
    Partial Private Sub DeleteHRMedical(instance As HRMedical)
    End Sub
    Partial Private Sub InsertHPayGrade(instance As HPayGrade)
    End Sub
    Partial Private Sub UpdateHPayGrade(instance As HPayGrade)
    End Sub
    Partial Private Sub DeleteHPayGrade(instance As HPayGrade)
    End Sub
    Partial Private Sub InsertHRMedDetail(instance As HRMedDetail)
    End Sub
    Partial Private Sub UpdateHRMedDetail(instance As HRMedDetail)
    End Sub
    Partial Private Sub DeleteHRMedDetail(instance As HRMedDetail)
    End Sub
    Partial Private Sub InsertUserPermission(instance As UserPermission)
    End Sub
    Partial Private Sub UpdateUserPermission(instance As UserPermission)
    End Sub
    Partial Private Sub DeleteUserPermission(instance As UserPermission)
    End Sub
    Partial Private Sub InsertHRLeave(instance As HRLeave)
    End Sub
    Partial Private Sub UpdateHRLeave(instance As HRLeave)
    End Sub
    Partial Private Sub DeleteHRLeave(instance As HRLeave)
    End Sub
    Partial Private Sub InsertPermission(instance As Permission)
    End Sub
    Partial Private Sub UpdatePermission(instance As Permission)
    End Sub
    Partial Private Sub DeletePermission(instance As Permission)
    End Sub
    Partial Private Sub InsertHRLGA(instance As HRLGA)
    End Sub
    Partial Private Sub UpdateHRLGA(instance As HRLGA)
    End Sub
    Partial Private Sub DeleteHRLGA(instance As HRLGA)
    End Sub
    Partial Private Sub InsertHRState(instance As HRState)
    End Sub
    Partial Private Sub UpdateHRState(instance As HRState)
    End Sub
    Partial Private Sub DeleteHRState(instance As HRState)
    End Sub
    Partial Private Sub InsertHRTrainHistory(instance As HRTrainHistory)
    End Sub
    Partial Private Sub UpdateHRTrainHistory(instance As HRTrainHistory)
    End Sub
    Partial Private Sub DeleteHRTrainHistory(instance As HRTrainHistory)
    End Sub
    Partial Private Sub InsertLoanType(instance As LoanType)
    End Sub
    Partial Private Sub UpdateLoanType(instance As LoanType)
    End Sub
    Partial Private Sub DeleteLoanType(instance As LoanType)
    End Sub
    Partial Private Sub InsertPaySlip(instance As PaySlip)
    End Sub
    Partial Private Sub UpdatePaySlip(instance As PaySlip)
    End Sub
    Partial Private Sub DeletePaySlip(instance As PaySlip)
    End Sub
    Partial Private Sub InsertLoan(instance As Loan)
    End Sub
    Partial Private Sub UpdateLoan(instance As Loan)
    End Sub
    Partial Private Sub DeleteLoan(instance As Loan)
    End Sub
    Partial Private Sub InsertHREmployee(instance As HREmployee)
    End Sub
    Partial Private Sub UpdateHREmployee(instance As HREmployee)
    End Sub
    Partial Private Sub DeleteHREmployee(instance As HREmployee)
    End Sub
    Partial Private Sub InsertassPurchase(instance As assPurchase)
    End Sub
    Partial Private Sub UpdateassPurchase(instance As assPurchase)
    End Sub
    Partial Private Sub DeleteassPurchase(instance As assPurchase)
    End Sub
    #End Region
		
		Public Sub New()
            MyBase.New(Global.System.Configuration.ConfigurationManager.ConnectionStrings("HRMS2DBConnectionString").ConnectionString, mappingSource)
			OnCreated
		End Sub
		
		Public Sub New(ByVal connection As String)
			MyBase.New(connection, mappingSource)
			OnCreated
		End Sub
		
		Public Sub New(ByVal connection As System.Data.IDbConnection)
			MyBase.New(connection, mappingSource)
			OnCreated
		End Sub
		
		Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
			MyBase.New(connection, mappingSource)
			OnCreated
		End Sub
		
		Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
			MyBase.New(connection, mappingSource)
			OnCreated
		End Sub
		
		Public ReadOnly Property AuditLogs() As System.Data.Linq.Table(Of AuditLog)
			Get
				Return Me.GetTable(Of AuditLog)
			End Get
		End Property
		
		Public ReadOnly Property AutoNumbers() As System.Data.Linq.Table(Of AutoNumber)
			Get
				Return Me.GetTable(Of AutoNumber)
			End Get
		End Property
		
		Public ReadOnly Property Branches() As System.Data.Linq.Table(Of Branch)
			Get
				Return Me.GetTable(Of Branch)
			End Get
		End Property
		
		Public ReadOnly Property Companies() As System.Data.Linq.Table(Of Company)
			Get
				Return Me.GetTable(Of Company)
			End Get
		End Property
		
		Public ReadOnly Property Regions() As System.Data.Linq.Table(Of Region)
			Get
				Return Me.GetTable(Of Region)
			End Get
		End Property
		
		Public ReadOnly Property RolePermissions() As System.Data.Linq.Table(Of RolePermission)
			Get
				Return Me.GetTable(Of RolePermission)
			End Get
		End Property
		
		Public ReadOnly Property Roles() As System.Data.Linq.Table(Of Role)
			Get
				Return Me.GetTable(Of Role)
			End Get
		End Property
		
		Public ReadOnly Property States() As System.Data.Linq.Table(Of State)
			Get
				Return Me.GetTable(Of State)
			End Get
		End Property
		
		Public ReadOnly Property UserBranches() As System.Data.Linq.Table(Of UserBranch)
			Get
				Return Me.GetTable(Of UserBranch)
			End Get
		End Property
		
		Public ReadOnly Property UserRoles() As System.Data.Linq.Table(Of UserRole)
			Get
				Return Me.GetTable(Of UserRole)
			End Get
		End Property
		
		Public ReadOnly Property HPayDepts() As System.Data.Linq.Table(Of HPayDept)
			Get
				Return Me.GetTable(Of HPayDept)
			End Get
		End Property
		
		Public ReadOnly Property HPaySections() As System.Data.Linq.Table(Of HPaySection)
			Get
				Return Me.GetTable(Of HPaySection)
			End Get
		End Property
		
		Public ReadOnly Property HRAttendances() As System.Data.Linq.Table(Of HRAttendance)
			Get
				Return Me.GetTable(Of HRAttendance)
			End Get
		End Property
		
		Public ReadOnly Property HRCompensations() As System.Data.Linq.Table(Of HRCompensation)
			Get
				Return Me.GetTable(Of HRCompensation)
			End Get
		End Property
		
		Public ReadOnly Property HRCompVehicles() As System.Data.Linq.Table(Of HRCompVehicle)
			Get
				Return Me.GetTable(Of HRCompVehicle)
			End Get
		End Property
		
		Public ReadOnly Property HRDisciplines() As System.Data.Linq.Table(Of HRDiscipline)
			Get
				Return Me.GetTable(Of HRDiscipline)
			End Get
		End Property
		
		Public ReadOnly Property HRDisciplineTypes() As System.Data.Linq.Table(Of HRDisciplineType)
			Get
				Return Me.GetTable(Of HRDisciplineType)
			End Get
		End Property
		
		Public ReadOnly Property HREducations() As System.Data.Linq.Table(Of HREducation)
			Get
				Return Me.GetTable(Of HREducation)
			End Get
		End Property
		
		Public ReadOnly Property HRExperiences() As System.Data.Linq.Table(Of HRExperience)
			Get
				Return Me.GetTable(Of HRExperience)
			End Get
		End Property
		
		Public ReadOnly Property HRHobbies() As System.Data.Linq.Table(Of HRHobby)
			Get
				Return Me.GetTable(Of HRHobby)
			End Get
		End Property
		
		Public ReadOnly Property HRLangs() As System.Data.Linq.Table(Of HRLang)
			Get
				Return Me.GetTable(Of HRLang)
			End Get
		End Property
		
		Public ReadOnly Property HRProfQs() As System.Data.Linq.Table(Of HRProfQ)
			Get
				Return Me.GetTable(Of HRProfQ)
			End Get
		End Property
		
		Public ReadOnly Property HRProperties() As System.Data.Linq.Table(Of HRProperty)
			Get
				Return Me.GetTable(Of HRProperty)
			End Get
		End Property
		
		Public ReadOnly Property HRSteps() As System.Data.Linq.Table(Of HRStep)
			Get
				Return Me.GetTable(Of HRStep)
			End Get
		End Property
		
		Public ReadOnly Property HRTrainingNeeds() As System.Data.Linq.Table(Of HRTrainingNeed)
			Get
				Return Me.GetTable(Of HRTrainingNeed)
			End Get
		End Property
		
		Public ReadOnly Property LeaveTypes() As System.Data.Linq.Table(Of LeaveType)
			Get
				Return Me.GetTable(Of LeaveType)
			End Get
		End Property
		
		Public ReadOnly Property PaySheets() As System.Data.Linq.Table(Of PaySheet)
			Get
				Return Me.GetTable(Of PaySheet)
			End Get
		End Property
		
		Public ReadOnly Property PurCategories() As System.Data.Linq.Table(Of PurCategory)
			Get
				Return Me.GetTable(Of PurCategory)
			End Get
		End Property
		
		Public ReadOnly Property PurFamilies() As System.Data.Linq.Table(Of PurFamily)
			Get
				Return Me.GetTable(Of PurFamily)
			End Get
		End Property
		
		Public ReadOnly Property PurPartners() As System.Data.Linq.Table(Of PurPartner)
			Get
				Return Me.GetTable(Of PurPartner)
			End Get
		End Property
		
		Public ReadOnly Property PurProducts() As System.Data.Linq.Table(Of PurProduct)
			Get
				Return Me.GetTable(Of PurProduct)
			End Get
		End Property
		
		Public ReadOnly Property VPayAllowances() As System.Data.Linq.Table(Of VPayAllowance)
			Get
				Return Me.GetTable(Of VPayAllowance)
			End Get
		End Property
		
		Public ReadOnly Property VPayDeductions() As System.Data.Linq.Table(Of VPayDeduction)
			Get
				Return Me.GetTable(Of VPayDeduction)
			End Get
		End Property
		
		Public ReadOnly Property HRReferees() As System.Data.Linq.Table(Of HRReferee)
			Get
				Return Me.GetTable(Of HRReferee)
			End Get
		End Property
		
		Public ReadOnly Property HRAppraisals() As System.Data.Linq.Table(Of HRAppraisal)
			Get
				Return Me.GetTable(Of HRAppraisal)
			End Get
		End Property
		
		Public ReadOnly Property PromotionView1s() As System.Data.Linq.Table(Of PromotionView1)
			Get
				Return Me.GetTable(Of PromotionView1)
			End Get
		End Property
		
		Public ReadOnly Property AllowanceIDs() As System.Data.Linq.Table(Of AllowanceID)
			Get
				Return Me.GetTable(Of AllowanceID)
			End Get
		End Property
		
		Public ReadOnly Property DeductionIDs() As System.Data.Linq.Table(Of DeductionID)
			Get
				Return Me.GetTable(Of DeductionID)
			End Get
		End Property
		
		Public ReadOnly Property HRPromotions() As System.Data.Linq.Table(Of HRPromotion)
			Get
				Return Me.GetTable(Of HRPromotion)
			End Get
		End Property
		
		Public ReadOnly Property MktContacts() As System.Data.Linq.Table(Of MktContact)
			Get
				Return Me.GetTable(Of MktContact)
			End Get
		End Property
		
		Public ReadOnly Property Appraisals() As System.Data.Linq.Table(Of Appraisal)
			Get
				Return Me.GetTable(Of Appraisal)
			End Get
		End Property
		
		Public ReadOnly Property Transactions() As System.Data.Linq.Table(Of Transaction)
			Get
				Return Me.GetTable(Of Transaction)
			End Get
		End Property
		
		Public ReadOnly Property TransactionDetails() As System.Data.Linq.Table(Of TransactionDetail)
			Get
				Return Me.GetTable(Of TransactionDetail)
			End Get
		End Property
		
		Public ReadOnly Property HPayAllowances() As System.Data.Linq.Table(Of HPayAllowance)
			Get
				Return Me.GetTable(Of HPayAllowance)
			End Get
		End Property
		
		Public ReadOnly Property HPayDeductions() As System.Data.Linq.Table(Of HPayDeduction)
			Get
				Return Me.GetTable(Of HPayDeduction)
			End Get
		End Property
		
		Public ReadOnly Property Settings() As System.Data.Linq.Table(Of Setting)
			Get
				Return Me.GetTable(Of Setting)
			End Get
		End Property
		
		Public ReadOnly Property LoanAccts() As System.Data.Linq.Table(Of LoanAcct)
			Get
				Return Me.GetTable(Of LoanAcct)
			End Get
		End Property
		
		Public ReadOnly Property TrainingCadres() As System.Data.Linq.Table(Of TrainingCadre)
			Get
				Return Me.GetTable(Of TrainingCadre)
			End Get
		End Property
		
		Public ReadOnly Property Users() As System.Data.Linq.Table(Of User)
			Get
				Return Me.GetTable(Of User)
			End Get
		End Property
		
		Public ReadOnly Property HRMedicals() As System.Data.Linq.Table(Of HRMedical)
			Get
				Return Me.GetTable(Of HRMedical)
			End Get
		End Property
		
		Public ReadOnly Property HPayGrades() As System.Data.Linq.Table(Of HPayGrade)
			Get
				Return Me.GetTable(Of HPayGrade)
			End Get
		End Property
		
		Public ReadOnly Property HRMedDetails() As System.Data.Linq.Table(Of HRMedDetail)
			Get
				Return Me.GetTable(Of HRMedDetail)
			End Get
		End Property
		
		Public ReadOnly Property UserPermissions() As System.Data.Linq.Table(Of UserPermission)
			Get
				Return Me.GetTable(Of UserPermission)
			End Get
		End Property
		
		Public ReadOnly Property HRLeaves() As System.Data.Linq.Table(Of HRLeave)
			Get
				Return Me.GetTable(Of HRLeave)
			End Get
		End Property
		
		Public ReadOnly Property Permissions() As System.Data.Linq.Table(Of Permission)
			Get
				Return Me.GetTable(Of Permission)
			End Get
		End Property
		
		Public ReadOnly Property HRLGAs() As System.Data.Linq.Table(Of HRLGA)
			Get
				Return Me.GetTable(Of HRLGA)
			End Get
		End Property
		
		Public ReadOnly Property HRStates() As System.Data.Linq.Table(Of HRState)
			Get
				Return Me.GetTable(Of HRState)
			End Get
		End Property
		
		Public ReadOnly Property HRTrainHistories() As System.Data.Linq.Table(Of HRTrainHistory)
			Get
				Return Me.GetTable(Of HRTrainHistory)
			End Get
		End Property
		
		Public ReadOnly Property LoanTypes() As System.Data.Linq.Table(Of LoanType)
			Get
				Return Me.GetTable(Of LoanType)
			End Get
		End Property
		
		Public ReadOnly Property PaySlips() As System.Data.Linq.Table(Of PaySlip)
			Get
				Return Me.GetTable(Of PaySlip)
			End Get
		End Property
		
		Public ReadOnly Property Loans() As System.Data.Linq.Table(Of Loan)
			Get
				Return Me.GetTable(Of Loan)
			End Get
		End Property
		
		Public ReadOnly Property HREmployees() As System.Data.Linq.Table(Of HREmployee)
			Get
				Return Me.GetTable(Of HREmployee)
			End Get
		End Property
		
		Public ReadOnly Property assPurchases() As System.Data.Linq.Table(Of assPurchase)
			Get
				Return Me.GetTable(Of assPurchase)
			End Get
		End Property
		
		<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.GetEmployeePreviousBillCummulative")>  _
		Public Function GetEmployeePreviousBillCummulative(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="EmployeeID", DbType:="VarChar(32)")> ByVal employeeID As String) As ISingleResult(Of GetEmployeePreviousBillCummulativeResult)
			Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), employeeID)
			Return CType(result.ReturnValue,ISingleResult(Of GetEmployeePreviousBillCummulativeResult))
		End Function
		
		<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.RunNextMonthPayrollDetails")>  _
		Public Function RunNextMonthPayrollDetails(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Month_1", DbType:="VarChar(50)")> ByVal month_1 As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="SheetID", DbType:="Int")> ByVal sheetID As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="NextMonth_1", DbType:="VarChar(50)")> ByVal nextMonth_1 As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="SubmittedBy", DbType:="VarChar(50)")> ByVal submittedBy As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="BatchGuid", DbType:="VarChar(50)")> ByVal batchGuid As String) As Integer
			Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), month_1, sheetID, nextMonth_1, submittedBy, batchGuid)
			Return CType(result.ReturnValue,Integer)
		End Function
		
		<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.HRGetEmployeeLastPromotion")>  _
		Public Function HRGetEmployeeLastPromotion(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="EmployeeID", DbType:="VarChar(50)")> ByVal employeeID As String) As ISingleResult(Of HRGetEmployeeLastPromotionResult)
			Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), employeeID)
			Return CType(result.ReturnValue,ISingleResult(Of HRGetEmployeeLastPromotionResult))
		End Function
		
		<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.GetEmployeeIDSummary")>  _
		Public Function GetEmployeeIDSummary(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="PaidID", DbType:="VarChar(50)")> ByVal paidID As String) As ISingleResult(Of GetEmployeeIDSummaryResult)
			Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), paidID)
			Return CType(result.ReturnValue,ISingleResult(Of GetEmployeeIDSummaryResult))
		End Function
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.AuditLogs")>  _
	Partial Public Class AuditLog
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _AuditLogID As Long
		
		Private _LogType As String
		
		Private _UserID As System.Nullable(Of Long)
		
		Private _Source As String
		
		Private _Category As String
		
		Private _Description As String
		
		Private _SubmittedBy As String
		
		Private _SubmittedOn As System.Nullable(Of Date)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnAuditLogIDChanging(value As Long)
    End Sub
    Partial Private Sub OnAuditLogIDChanged()
    End Sub
    Partial Private Sub OnLogTypeChanging(value As String)
    End Sub
    Partial Private Sub OnLogTypeChanged()
    End Sub
    Partial Private Sub OnUserIDChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnUserIDChanged()
    End Sub
    Partial Private Sub OnSourceChanging(value As String)
    End Sub
    Partial Private Sub OnSourceChanged()
    End Sub
    Partial Private Sub OnCategoryChanging(value As String)
    End Sub
    Partial Private Sub OnCategoryChanged()
    End Sub
    Partial Private Sub OnDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnDescriptionChanged()
    End Sub
    Partial Private Sub OnSubmittedByChanging(value As String)
    End Sub
    Partial Private Sub OnSubmittedByChanged()
    End Sub
    Partial Private Sub OnSubmittedOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSubmittedOnChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AuditLogID", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property AuditLogID() As Long
			Get
				Return Me._AuditLogID
			End Get
			Set
				If ((Me._AuditLogID = value)  _
							= false) Then
					Me.OnAuditLogIDChanging(value)
					Me.SendPropertyChanging
					Me._AuditLogID = value
					Me.SendPropertyChanged("AuditLogID")
					Me.OnAuditLogIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LogType", DbType:="VarChar(32)")>  _
		Public Property LogType() As String
			Get
				Return Me._LogType
			End Get
			Set
				If (String.Equals(Me._LogType, value) = false) Then
					Me.OnLogTypeChanging(value)
					Me.SendPropertyChanging
					Me._LogType = value
					Me.SendPropertyChanged("LogType")
					Me.OnLogTypeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserID", DbType:="BigInt")>  _
		Public Property UserID() As System.Nullable(Of Long)
			Get
				Return Me._UserID
			End Get
			Set
				If (Me._UserID.Equals(value) = false) Then
					Me.OnUserIDChanging(value)
					Me.SendPropertyChanging
					Me._UserID = value
					Me.SendPropertyChanged("UserID")
					Me.OnUserIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Source", DbType:="VarChar(64)")>  _
		Public Property Source() As String
			Get
				Return Me._Source
			End Get
			Set
				If (String.Equals(Me._Source, value) = false) Then
					Me.OnSourceChanging(value)
					Me.SendPropertyChanging
					Me._Source = value
					Me.SendPropertyChanged("Source")
					Me.OnSourceChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Category", DbType:="VarChar(64)")>  _
		Public Property Category() As String
			Get
				Return Me._Category
			End Get
			Set
				If (String.Equals(Me._Category, value) = false) Then
					Me.OnCategoryChanging(value)
					Me.SendPropertyChanging
					Me._Category = value
					Me.SendPropertyChanged("Category")
					Me.OnCategoryChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="Text", UpdateCheck:=UpdateCheck.Never)>  _
		Public Property Description() As String
			Get
				Return Me._Description
			End Get
			Set
				If (String.Equals(Me._Description, value) = false) Then
					Me.OnDescriptionChanging(value)
					Me.SendPropertyChanging
					Me._Description = value
					Me.SendPropertyChanged("Description")
					Me.OnDescriptionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubmittedBy", DbType:="VarChar(64)")>  _
		Public Property SubmittedBy() As String
			Get
				Return Me._SubmittedBy
			End Get
			Set
				If (String.Equals(Me._SubmittedBy, value) = false) Then
					Me.OnSubmittedByChanging(value)
					Me.SendPropertyChanging
					Me._SubmittedBy = value
					Me.SendPropertyChanged("SubmittedBy")
					Me.OnSubmittedByChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubmittedOn", DbType:="SmallDateTime")>  _
		Public Property SubmittedOn() As System.Nullable(Of Date)
			Get
				Return Me._SubmittedOn
			End Get
			Set
				If (Me._SubmittedOn.Equals(value) = false) Then
					Me.OnSubmittedOnChanging(value)
					Me.SendPropertyChanging
					Me._SubmittedOn = value
					Me.SendPropertyChanged("SubmittedOn")
					Me.OnSubmittedOnChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.AutoNumbers")>  _
	Partial Public Class AutoNumber
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _NumType As String
		
		Private _BranchID As String
		
		Private _NextValue As System.Nullable(Of Long)
		
		Private _LastUpdated As System.Nullable(Of Date)
		
		Private _Format As String
		
		Private _Sample As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnNumTypeChanging(value As String)
    End Sub
    Partial Private Sub OnNumTypeChanged()
    End Sub
    Partial Private Sub OnBranchIDChanging(value As String)
    End Sub
    Partial Private Sub OnBranchIDChanged()
    End Sub
    Partial Private Sub OnNextValueChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnNextValueChanged()
    End Sub
    Partial Private Sub OnLastUpdatedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnLastUpdatedChanged()
    End Sub
    Partial Private Sub OnFormatChanging(value As String)
    End Sub
    Partial Private Sub OnFormatChanged()
    End Sub
    Partial Private Sub OnSampleChanging(value As String)
    End Sub
    Partial Private Sub OnSampleChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NumType", DbType:="VarChar(32) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property NumType() As String
			Get
				Return Me._NumType
			End Get
			Set
				If (String.Equals(Me._NumType, value) = false) Then
					Me.OnNumTypeChanging(value)
					Me.SendPropertyChanging
					Me._NumType = value
					Me.SendPropertyChanged("NumType")
					Me.OnNumTypeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BranchID", DbType:="VarChar(32) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property BranchID() As String
			Get
				Return Me._BranchID
			End Get
			Set
				If (String.Equals(Me._BranchID, value) = false) Then
					Me.OnBranchIDChanging(value)
					Me.SendPropertyChanging
					Me._BranchID = value
					Me.SendPropertyChanged("BranchID")
					Me.OnBranchIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NextValue", DbType:="BigInt")>  _
		Public Property NextValue() As System.Nullable(Of Long)
			Get
				Return Me._NextValue
			End Get
			Set
				If (Me._NextValue.Equals(value) = false) Then
					Me.OnNextValueChanging(value)
					Me.SendPropertyChanging
					Me._NextValue = value
					Me.SendPropertyChanged("NextValue")
					Me.OnNextValueChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastUpdated", DbType:="SmallDateTime")>  _
		Public Property LastUpdated() As System.Nullable(Of Date)
			Get
				Return Me._LastUpdated
			End Get
			Set
				If (Me._LastUpdated.Equals(value) = false) Then
					Me.OnLastUpdatedChanging(value)
					Me.SendPropertyChanging
					Me._LastUpdated = value
					Me.SendPropertyChanged("LastUpdated")
					Me.OnLastUpdatedChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Format", DbType:="VarChar(64)")>  _
		Public Property Format() As String
			Get
				Return Me._Format
			End Get
			Set
				If (String.Equals(Me._Format, value) = false) Then
					Me.OnFormatChanging(value)
					Me.SendPropertyChanging
					Me._Format = value
					Me.SendPropertyChanged("Format")
					Me.OnFormatChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Sample", DbType:="VarChar(64)")>  _
		Public Property Sample() As String
			Get
				Return Me._Sample
			End Get
			Set
				If (String.Equals(Me._Sample, value) = false) Then
					Me.OnSampleChanging(value)
					Me.SendPropertyChanging
					Me._Sample = value
					Me.SendPropertyChanged("Sample")
					Me.OnSampleChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Branches")>  _
	Partial Public Class Branch
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _BranchID As String
		
		Private _RegionID As String
		
		Private _StateID As String
		
		Private _BranchID2 As String
		
		Private _Description As String
		
		Private _Manager As String
		
		Private _Address As String
		
		Private _MobilePhone As String
		
		Private _LandPhone As String
		
		Private _Email As String
		
		Private _Fax As String
		
		Private _Deleted As System.Nullable(Of Byte)
		
		Private _Active As System.Nullable(Of Byte)
		
		Private _Remarks As String
		
		Private _SubmittedBy As String
		
		Private _SubmittedOn As System.Nullable(Of Date)
		
		Private _ModifiedBy As String
		
		Private _ModifiedOn As System.Nullable(Of Date)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnBranchIDChanging(value As String)
    End Sub
    Partial Private Sub OnBranchIDChanged()
    End Sub
    Partial Private Sub OnRegionIDChanging(value As String)
    End Sub
    Partial Private Sub OnRegionIDChanged()
    End Sub
    Partial Private Sub OnStateIDChanging(value As String)
    End Sub
    Partial Private Sub OnStateIDChanged()
    End Sub
    Partial Private Sub OnBranchID2Changing(value As String)
    End Sub
    Partial Private Sub OnBranchID2Changed()
    End Sub
    Partial Private Sub OnDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnDescriptionChanged()
    End Sub
    Partial Private Sub OnManagerChanging(value As String)
    End Sub
    Partial Private Sub OnManagerChanged()
    End Sub
    Partial Private Sub OnAddressChanging(value As String)
    End Sub
    Partial Private Sub OnAddressChanged()
    End Sub
    Partial Private Sub OnMobilePhoneChanging(value As String)
    End Sub
    Partial Private Sub OnMobilePhoneChanged()
    End Sub
    Partial Private Sub OnLandPhoneChanging(value As String)
    End Sub
    Partial Private Sub OnLandPhoneChanged()
    End Sub
    Partial Private Sub OnEmailChanging(value As String)
    End Sub
    Partial Private Sub OnEmailChanged()
    End Sub
    Partial Private Sub OnFaxChanging(value As String)
    End Sub
    Partial Private Sub OnFaxChanged()
    End Sub
    Partial Private Sub OnDeletedChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnDeletedChanged()
    End Sub
    Partial Private Sub OnActiveChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnActiveChanged()
    End Sub
    Partial Private Sub OnRemarksChanging(value As String)
    End Sub
    Partial Private Sub OnRemarksChanged()
    End Sub
    Partial Private Sub OnSubmittedByChanging(value As String)
    End Sub
    Partial Private Sub OnSubmittedByChanged()
    End Sub
    Partial Private Sub OnSubmittedOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSubmittedOnChanged()
    End Sub
    Partial Private Sub OnModifiedByChanging(value As String)
    End Sub
    Partial Private Sub OnModifiedByChanged()
    End Sub
    Partial Private Sub OnModifiedOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnModifiedOnChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BranchID", DbType:="VarChar(32) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property BranchID() As String
			Get
				Return Me._BranchID
			End Get
			Set
				If (String.Equals(Me._BranchID, value) = false) Then
					Me.OnBranchIDChanging(value)
					Me.SendPropertyChanging
					Me._BranchID = value
					Me.SendPropertyChanged("BranchID")
					Me.OnBranchIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RegionID", DbType:="VarChar(32)")>  _
		Public Property RegionID() As String
			Get
				Return Me._RegionID
			End Get
			Set
				If (String.Equals(Me._RegionID, value) = false) Then
					Me.OnRegionIDChanging(value)
					Me.SendPropertyChanging
					Me._RegionID = value
					Me.SendPropertyChanged("RegionID")
					Me.OnRegionIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StateID", DbType:="VarChar(32)")>  _
		Public Property StateID() As String
			Get
				Return Me._StateID
			End Get
			Set
				If (String.Equals(Me._StateID, value) = false) Then
					Me.OnStateIDChanging(value)
					Me.SendPropertyChanging
					Me._StateID = value
					Me.SendPropertyChanged("StateID")
					Me.OnStateIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BranchID2", DbType:="VarChar(32)")>  _
		Public Property BranchID2() As String
			Get
				Return Me._BranchID2
			End Get
			Set
				If (String.Equals(Me._BranchID2, value) = false) Then
					Me.OnBranchID2Changing(value)
					Me.SendPropertyChanging
					Me._BranchID2 = value
					Me.SendPropertyChanged("BranchID2")
					Me.OnBranchID2Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="VarChar(512)")>  _
		Public Property Description() As String
			Get
				Return Me._Description
			End Get
			Set
				If (String.Equals(Me._Description, value) = false) Then
					Me.OnDescriptionChanging(value)
					Me.SendPropertyChanging
					Me._Description = value
					Me.SendPropertyChanged("Description")
					Me.OnDescriptionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Manager", DbType:="VarChar(128)")>  _
		Public Property Manager() As String
			Get
				Return Me._Manager
			End Get
			Set
				If (String.Equals(Me._Manager, value) = false) Then
					Me.OnManagerChanging(value)
					Me.SendPropertyChanging
					Me._Manager = value
					Me.SendPropertyChanged("Manager")
					Me.OnManagerChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address", DbType:="VarChar(256)")>  _
		Public Property Address() As String
			Get
				Return Me._Address
			End Get
			Set
				If (String.Equals(Me._Address, value) = false) Then
					Me.OnAddressChanging(value)
					Me.SendPropertyChanging
					Me._Address = value
					Me.SendPropertyChanged("Address")
					Me.OnAddressChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MobilePhone", DbType:="VarChar(32)")>  _
		Public Property MobilePhone() As String
			Get
				Return Me._MobilePhone
			End Get
			Set
				If (String.Equals(Me._MobilePhone, value) = false) Then
					Me.OnMobilePhoneChanging(value)
					Me.SendPropertyChanging
					Me._MobilePhone = value
					Me.SendPropertyChanged("MobilePhone")
					Me.OnMobilePhoneChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LandPhone", DbType:="VarChar(32)")>  _
		Public Property LandPhone() As String
			Get
				Return Me._LandPhone
			End Get
			Set
				If (String.Equals(Me._LandPhone, value) = false) Then
					Me.OnLandPhoneChanging(value)
					Me.SendPropertyChanging
					Me._LandPhone = value
					Me.SendPropertyChanged("LandPhone")
					Me.OnLandPhoneChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Email", DbType:="VarChar(32)")>  _
		Public Property Email() As String
			Get
				Return Me._Email
			End Get
			Set
				If (String.Equals(Me._Email, value) = false) Then
					Me.OnEmailChanging(value)
					Me.SendPropertyChanging
					Me._Email = value
					Me.SendPropertyChanged("Email")
					Me.OnEmailChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fax", DbType:="VarChar(32)")>  _
		Public Property Fax() As String
			Get
				Return Me._Fax
			End Get
			Set
				If (String.Equals(Me._Fax, value) = false) Then
					Me.OnFaxChanging(value)
					Me.SendPropertyChanging
					Me._Fax = value
					Me.SendPropertyChanged("Fax")
					Me.OnFaxChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Deleted", DbType:="TinyInt")>  _
		Public Property Deleted() As System.Nullable(Of Byte)
			Get
				Return Me._Deleted
			End Get
			Set
				If (Me._Deleted.Equals(value) = false) Then
					Me.OnDeletedChanging(value)
					Me.SendPropertyChanging
					Me._Deleted = value
					Me.SendPropertyChanged("Deleted")
					Me.OnDeletedChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Active", DbType:="TinyInt")>  _
		Public Property Active() As System.Nullable(Of Byte)
			Get
				Return Me._Active
			End Get
			Set
				If (Me._Active.Equals(value) = false) Then
					Me.OnActiveChanging(value)
					Me.SendPropertyChanging
					Me._Active = value
					Me.SendPropertyChanged("Active")
					Me.OnActiveChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Remarks", DbType:="VarChar(256)")>  _
		Public Property Remarks() As String
			Get
				Return Me._Remarks
			End Get
			Set
				If (String.Equals(Me._Remarks, value) = false) Then
					Me.OnRemarksChanging(value)
					Me.SendPropertyChanging
					Me._Remarks = value
					Me.SendPropertyChanged("Remarks")
					Me.OnRemarksChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubmittedBy", DbType:="VarChar(128)")>  _
		Public Property SubmittedBy() As String
			Get
				Return Me._SubmittedBy
			End Get
			Set
				If (String.Equals(Me._SubmittedBy, value) = false) Then
					Me.OnSubmittedByChanging(value)
					Me.SendPropertyChanging
					Me._SubmittedBy = value
					Me.SendPropertyChanged("SubmittedBy")
					Me.OnSubmittedByChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubmittedOn", DbType:="SmallDateTime")>  _
		Public Property SubmittedOn() As System.Nullable(Of Date)
			Get
				Return Me._SubmittedOn
			End Get
			Set
				If (Me._SubmittedOn.Equals(value) = false) Then
					Me.OnSubmittedOnChanging(value)
					Me.SendPropertyChanging
					Me._SubmittedOn = value
					Me.SendPropertyChanged("SubmittedOn")
					Me.OnSubmittedOnChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedBy", DbType:="VarChar(128)")>  _
		Public Property ModifiedBy() As String
			Get
				Return Me._ModifiedBy
			End Get
			Set
				If (String.Equals(Me._ModifiedBy, value) = false) Then
					Me.OnModifiedByChanging(value)
					Me.SendPropertyChanging
					Me._ModifiedBy = value
					Me.SendPropertyChanged("ModifiedBy")
					Me.OnModifiedByChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedOn", DbType:="SmallDateTime")>  _
		Public Property ModifiedOn() As System.Nullable(Of Date)
			Get
				Return Me._ModifiedOn
			End Get
			Set
				If (Me._ModifiedOn.Equals(value) = false) Then
					Me.OnModifiedOnChanging(value)
					Me.SendPropertyChanging
					Me._ModifiedOn = value
					Me.SendPropertyChanged("ModifiedOn")
					Me.OnModifiedOnChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Companies")>  _
	Partial Public Class Company
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _CompanyID As String
		
		Private _Company As String
		
		Private _CompanyType As String
		
		Private _Address As String
		
		Private _MobilePhone As String
		
		Private _LandPhone As String
		
		Private _Email As String
		
		Private _Fax As String
		
		Private _Remarks As String
		
		Private _Deleted As System.Nullable(Of Byte)
		
		Private _Active As System.Nullable(Of Byte)
		
		Private _SubmittedBy As String
		
		Private _SubmittedOn As System.Nullable(Of Date)
		
		Private _Modifiedby As String
		
		Private _ModifiedOn As System.Nullable(Of Date)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCompanyIDChanging(value As String)
    End Sub
    Partial Private Sub OnCompanyIDChanged()
    End Sub
    Partial Private Sub OnCompanyChanging(value As String)
    End Sub
    Partial Private Sub OnCompanyChanged()
    End Sub
    Partial Private Sub OnCompanyTypeChanging(value As String)
    End Sub
    Partial Private Sub OnCompanyTypeChanged()
    End Sub
    Partial Private Sub OnAddressChanging(value As String)
    End Sub
    Partial Private Sub OnAddressChanged()
    End Sub
    Partial Private Sub OnMobilePhoneChanging(value As String)
    End Sub
    Partial Private Sub OnMobilePhoneChanged()
    End Sub
    Partial Private Sub OnLandPhoneChanging(value As String)
    End Sub
    Partial Private Sub OnLandPhoneChanged()
    End Sub
    Partial Private Sub OnEmailChanging(value As String)
    End Sub
    Partial Private Sub OnEmailChanged()
    End Sub
    Partial Private Sub OnFaxChanging(value As String)
    End Sub
    Partial Private Sub OnFaxChanged()
    End Sub
    Partial Private Sub OnRemarksChanging(value As String)
    End Sub
    Partial Private Sub OnRemarksChanged()
    End Sub
    Partial Private Sub OnDeletedChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnDeletedChanged()
    End Sub
    Partial Private Sub OnActiveChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnActiveChanged()
    End Sub
    Partial Private Sub OnSubmittedByChanging(value As String)
    End Sub
    Partial Private Sub OnSubmittedByChanged()
    End Sub
    Partial Private Sub OnSubmittedOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSubmittedOnChanged()
    End Sub
    Partial Private Sub OnModifiedbyChanging(value As String)
    End Sub
    Partial Private Sub OnModifiedbyChanged()
    End Sub
    Partial Private Sub OnModifiedOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnModifiedOnChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CompanyID", DbType:="VarChar(32) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property CompanyID() As String
			Get
				Return Me._CompanyID
			End Get
			Set
				If (String.Equals(Me._CompanyID, value) = false) Then
					Me.OnCompanyIDChanging(value)
					Me.SendPropertyChanging
					Me._CompanyID = value
					Me.SendPropertyChanged("CompanyID")
					Me.OnCompanyIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Company", DbType:="VarChar(256)")>  _
		Public Property Company() As String
			Get
				Return Me._Company
			End Get
			Set
				If (String.Equals(Me._Company, value) = false) Then
					Me.OnCompanyChanging(value)
					Me.SendPropertyChanging
					Me._Company = value
					Me.SendPropertyChanged("Company")
					Me.OnCompanyChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CompanyType", DbType:="VarChar(32)")>  _
		Public Property CompanyType() As String
			Get
				Return Me._CompanyType
			End Get
			Set
				If (String.Equals(Me._CompanyType, value) = false) Then
					Me.OnCompanyTypeChanging(value)
					Me.SendPropertyChanging
					Me._CompanyType = value
					Me.SendPropertyChanged("CompanyType")
					Me.OnCompanyTypeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address", DbType:="VarChar(256)")>  _
		Public Property Address() As String
			Get
				Return Me._Address
			End Get
			Set
				If (String.Equals(Me._Address, value) = false) Then
					Me.OnAddressChanging(value)
					Me.SendPropertyChanging
					Me._Address = value
					Me.SendPropertyChanged("Address")
					Me.OnAddressChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MobilePhone", DbType:="VarChar(32)")>  _
		Public Property MobilePhone() As String
			Get
				Return Me._MobilePhone
			End Get
			Set
				If (String.Equals(Me._MobilePhone, value) = false) Then
					Me.OnMobilePhoneChanging(value)
					Me.SendPropertyChanging
					Me._MobilePhone = value
					Me.SendPropertyChanged("MobilePhone")
					Me.OnMobilePhoneChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LandPhone", DbType:="VarChar(32)")>  _
		Public Property LandPhone() As String
			Get
				Return Me._LandPhone
			End Get
			Set
				If (String.Equals(Me._LandPhone, value) = false) Then
					Me.OnLandPhoneChanging(value)
					Me.SendPropertyChanging
					Me._LandPhone = value
					Me.SendPropertyChanged("LandPhone")
					Me.OnLandPhoneChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Email", DbType:="VarChar(32)")>  _
		Public Property Email() As String
			Get
				Return Me._Email
			End Get
			Set
				If (String.Equals(Me._Email, value) = false) Then
					Me.OnEmailChanging(value)
					Me.SendPropertyChanging
					Me._Email = value
					Me.SendPropertyChanged("Email")
					Me.OnEmailChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fax", DbType:="VarChar(32)")>  _
		Public Property Fax() As String
			Get
				Return Me._Fax
			End Get
			Set
				If (String.Equals(Me._Fax, value) = false) Then
					Me.OnFaxChanging(value)
					Me.SendPropertyChanging
					Me._Fax = value
					Me.SendPropertyChanged("Fax")
					Me.OnFaxChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Remarks", DbType:="VarChar(256)")>  _
		Public Property Remarks() As String
			Get
				Return Me._Remarks
			End Get
			Set
				If (String.Equals(Me._Remarks, value) = false) Then
					Me.OnRemarksChanging(value)
					Me.SendPropertyChanging
					Me._Remarks = value
					Me.SendPropertyChanged("Remarks")
					Me.OnRemarksChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Deleted", DbType:="TinyInt")>  _
		Public Property Deleted() As System.Nullable(Of Byte)
			Get
				Return Me._Deleted
			End Get
			Set
				If (Me._Deleted.Equals(value) = false) Then
					Me.OnDeletedChanging(value)
					Me.SendPropertyChanging
					Me._Deleted = value
					Me.SendPropertyChanged("Deleted")
					Me.OnDeletedChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Active", DbType:="TinyInt")>  _
		Public Property Active() As System.Nullable(Of Byte)
			Get
				Return Me._Active
			End Get
			Set
				If (Me._Active.Equals(value) = false) Then
					Me.OnActiveChanging(value)
					Me.SendPropertyChanging
					Me._Active = value
					Me.SendPropertyChanged("Active")
					Me.OnActiveChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubmittedBy", DbType:="VarChar(128)")>  _
		Public Property SubmittedBy() As String
			Get
				Return Me._SubmittedBy
			End Get
			Set
				If (String.Equals(Me._SubmittedBy, value) = false) Then
					Me.OnSubmittedByChanging(value)
					Me.SendPropertyChanging
					Me._SubmittedBy = value
					Me.SendPropertyChanged("SubmittedBy")
					Me.OnSubmittedByChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubmittedOn", DbType:="SmallDateTime")>  _
		Public Property SubmittedOn() As System.Nullable(Of Date)
			Get
				Return Me._SubmittedOn
			End Get
			Set
				If (Me._SubmittedOn.Equals(value) = false) Then
					Me.OnSubmittedOnChanging(value)
					Me.SendPropertyChanging
					Me._SubmittedOn = value
					Me.SendPropertyChanged("SubmittedOn")
					Me.OnSubmittedOnChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Modifiedby", DbType:="VarChar(128)")>  _
		Public Property Modifiedby() As String
			Get
				Return Me._Modifiedby
			End Get
			Set
				If (String.Equals(Me._Modifiedby, value) = false) Then
					Me.OnModifiedbyChanging(value)
					Me.SendPropertyChanging
					Me._Modifiedby = value
					Me.SendPropertyChanged("Modifiedby")
					Me.OnModifiedbyChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedOn", DbType:="SmallDateTime")>  _
		Public Property ModifiedOn() As System.Nullable(Of Date)
			Get
				Return Me._ModifiedOn
			End Get
			Set
				If (Me._ModifiedOn.Equals(value) = false) Then
					Me.OnModifiedOnChanging(value)
					Me.SendPropertyChanging
					Me._ModifiedOn = value
					Me.SendPropertyChanged("ModifiedOn")
					Me.OnModifiedOnChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Regions")>  _
	Partial Public Class Region
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _RegionID As String
		
		Private _Region As String
		
		Private _Manager As String
		
		Private _Address As String
		
		Private _MobilePhone As String
		
		Private _LandPhone As String
		
		Private _Email As String
		
		Private _Fax As String
		
		Private _Remarks As String
		
		Private _Deleted As System.Nullable(Of Byte)
		
		Private _Active As System.Nullable(Of Byte)
		
		Private _SubmittedBy As String
		
		Private _SubmittedOn As System.Nullable(Of Date)
		
		Private _Modifiedby As String
		
		Private _ModifiedOn As System.Nullable(Of Date)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnRegionIDChanging(value As String)
    End Sub
    Partial Private Sub OnRegionIDChanged()
    End Sub
    Partial Private Sub OnRegionChanging(value As String)
    End Sub
    Partial Private Sub OnRegionChanged()
    End Sub
    Partial Private Sub OnManagerChanging(value As String)
    End Sub
    Partial Private Sub OnManagerChanged()
    End Sub
    Partial Private Sub OnAddressChanging(value As String)
    End Sub
    Partial Private Sub OnAddressChanged()
    End Sub
    Partial Private Sub OnMobilePhoneChanging(value As String)
    End Sub
    Partial Private Sub OnMobilePhoneChanged()
    End Sub
    Partial Private Sub OnLandPhoneChanging(value As String)
    End Sub
    Partial Private Sub OnLandPhoneChanged()
    End Sub
    Partial Private Sub OnEmailChanging(value As String)
    End Sub
    Partial Private Sub OnEmailChanged()
    End Sub
    Partial Private Sub OnFaxChanging(value As String)
    End Sub
    Partial Private Sub OnFaxChanged()
    End Sub
    Partial Private Sub OnRemarksChanging(value As String)
    End Sub
    Partial Private Sub OnRemarksChanged()
    End Sub
    Partial Private Sub OnDeletedChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnDeletedChanged()
    End Sub
    Partial Private Sub OnActiveChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnActiveChanged()
    End Sub
    Partial Private Sub OnSubmittedByChanging(value As String)
    End Sub
    Partial Private Sub OnSubmittedByChanged()
    End Sub
    Partial Private Sub OnSubmittedOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSubmittedOnChanged()
    End Sub
    Partial Private Sub OnModifiedbyChanging(value As String)
    End Sub
    Partial Private Sub OnModifiedbyChanged()
    End Sub
    Partial Private Sub OnModifiedOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnModifiedOnChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RegionID", DbType:="VarChar(32) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property RegionID() As String
			Get
				Return Me._RegionID
			End Get
			Set
				If (String.Equals(Me._RegionID, value) = false) Then
					Me.OnRegionIDChanging(value)
					Me.SendPropertyChanging
					Me._RegionID = value
					Me.SendPropertyChanged("RegionID")
					Me.OnRegionIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Region", DbType:="VarChar(128)")>  _
		Public Property Region() As String
			Get
				Return Me._Region
			End Get
			Set
				If (String.Equals(Me._Region, value) = false) Then
					Me.OnRegionChanging(value)
					Me.SendPropertyChanging
					Me._Region = value
					Me.SendPropertyChanged("Region")
					Me.OnRegionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Manager", DbType:="VarChar(256)")>  _
		Public Property Manager() As String
			Get
				Return Me._Manager
			End Get
			Set
				If (String.Equals(Me._Manager, value) = false) Then
					Me.OnManagerChanging(value)
					Me.SendPropertyChanging
					Me._Manager = value
					Me.SendPropertyChanged("Manager")
					Me.OnManagerChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address", DbType:="VarChar(256)")>  _
		Public Property Address() As String
			Get
				Return Me._Address
			End Get
			Set
				If (String.Equals(Me._Address, value) = false) Then
					Me.OnAddressChanging(value)
					Me.SendPropertyChanging
					Me._Address = value
					Me.SendPropertyChanged("Address")
					Me.OnAddressChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MobilePhone", DbType:="VarChar(32)")>  _
		Public Property MobilePhone() As String
			Get
				Return Me._MobilePhone
			End Get
			Set
				If (String.Equals(Me._MobilePhone, value) = false) Then
					Me.OnMobilePhoneChanging(value)
					Me.SendPropertyChanging
					Me._MobilePhone = value
					Me.SendPropertyChanged("MobilePhone")
					Me.OnMobilePhoneChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LandPhone", DbType:="VarChar(32)")>  _
		Public Property LandPhone() As String
			Get
				Return Me._LandPhone
			End Get
			Set
				If (String.Equals(Me._LandPhone, value) = false) Then
					Me.OnLandPhoneChanging(value)
					Me.SendPropertyChanging
					Me._LandPhone = value
					Me.SendPropertyChanged("LandPhone")
					Me.OnLandPhoneChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Email", DbType:="VarChar(32)")>  _
		Public Property Email() As String
			Get
				Return Me._Email
			End Get
			Set
				If (String.Equals(Me._Email, value) = false) Then
					Me.OnEmailChanging(value)
					Me.SendPropertyChanging
					Me._Email = value
					Me.SendPropertyChanged("Email")
					Me.OnEmailChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fax", DbType:="VarChar(32)")>  _
		Public Property Fax() As String
			Get
				Return Me._Fax
			End Get
			Set
				If (String.Equals(Me._Fax, value) = false) Then
					Me.OnFaxChanging(value)
					Me.SendPropertyChanging
					Me._Fax = value
					Me.SendPropertyChanged("Fax")
					Me.OnFaxChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Remarks", DbType:="VarChar(256)")>  _
		Public Property Remarks() As String
			Get
				Return Me._Remarks
			End Get
			Set
				If (String.Equals(Me._Remarks, value) = false) Then
					Me.OnRemarksChanging(value)
					Me.SendPropertyChanging
					Me._Remarks = value
					Me.SendPropertyChanged("Remarks")
					Me.OnRemarksChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Deleted", DbType:="TinyInt")>  _
		Public Property Deleted() As System.Nullable(Of Byte)
			Get
				Return Me._Deleted
			End Get
			Set
				If (Me._Deleted.Equals(value) = false) Then
					Me.OnDeletedChanging(value)
					Me.SendPropertyChanging
					Me._Deleted = value
					Me.SendPropertyChanged("Deleted")
					Me.OnDeletedChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Active", DbType:="TinyInt")>  _
		Public Property Active() As System.Nullable(Of Byte)
			Get
				Return Me._Active
			End Get
			Set
				If (Me._Active.Equals(value) = false) Then
					Me.OnActiveChanging(value)
					Me.SendPropertyChanging
					Me._Active = value
					Me.SendPropertyChanged("Active")
					Me.OnActiveChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubmittedBy", DbType:="VarChar(128)")>  _
		Public Property SubmittedBy() As String
			Get
				Return Me._SubmittedBy
			End Get
			Set
				If (String.Equals(Me._SubmittedBy, value) = false) Then
					Me.OnSubmittedByChanging(value)
					Me.SendPropertyChanging
					Me._SubmittedBy = value
					Me.SendPropertyChanged("SubmittedBy")
					Me.OnSubmittedByChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubmittedOn", DbType:="SmallDateTime")>  _
		Public Property SubmittedOn() As System.Nullable(Of Date)
			Get
				Return Me._SubmittedOn
			End Get
			Set
				If (Me._SubmittedOn.Equals(value) = false) Then
					Me.OnSubmittedOnChanging(value)
					Me.SendPropertyChanging
					Me._SubmittedOn = value
					Me.SendPropertyChanged("SubmittedOn")
					Me.OnSubmittedOnChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Modifiedby", DbType:="VarChar(128)")>  _
		Public Property Modifiedby() As String
			Get
				Return Me._Modifiedby
			End Get
			Set
				If (String.Equals(Me._Modifiedby, value) = false) Then
					Me.OnModifiedbyChanging(value)
					Me.SendPropertyChanging
					Me._Modifiedby = value
					Me.SendPropertyChanged("Modifiedby")
					Me.OnModifiedbyChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedOn", DbType:="SmallDateTime")>  _
		Public Property ModifiedOn() As System.Nullable(Of Date)
			Get
				Return Me._ModifiedOn
			End Get
			Set
				If (Me._ModifiedOn.Equals(value) = false) Then
					Me.OnModifiedOnChanging(value)
					Me.SendPropertyChanging
					Me._ModifiedOn = value
					Me.SendPropertyChanged("ModifiedOn")
					Me.OnModifiedOnChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.RolePermissions")>  _
	Partial Public Class RolePermission
		
		Private _RoleID As Long
		
		Private _PermissionID As Long
		
		Private _SubmittedBy As String
		
		Private _SubmittedOn As System.Nullable(Of Date)
		
		Private _ModifiedBy As String
		
		Private _ModifiedOn As System.Nullable(Of Date)
		
		Public Sub New()
			MyBase.New
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RoleID", DbType:="BigInt NOT NULL")>  _
		Public Property RoleID() As Long
			Get
				Return Me._RoleID
			End Get
			Set
				If ((Me._RoleID = value)  _
							= false) Then
					Me._RoleID = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PermissionID", DbType:="BigInt NOT NULL")>  _
		Public Property PermissionID() As Long
			Get
				Return Me._PermissionID
			End Get
			Set
				If ((Me._PermissionID = value)  _
							= false) Then
					Me._PermissionID = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubmittedBy", DbType:="VarChar(128)")>  _
		Public Property SubmittedBy() As String
			Get
				Return Me._SubmittedBy
			End Get
			Set
				If (String.Equals(Me._SubmittedBy, value) = false) Then
					Me._SubmittedBy = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubmittedOn", DbType:="DateTime")>  _
		Public Property SubmittedOn() As System.Nullable(Of Date)
			Get
				Return Me._SubmittedOn
			End Get
			Set
				If (Me._SubmittedOn.Equals(value) = false) Then
					Me._SubmittedOn = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedBy", DbType:="VarChar(128)")>  _
		Public Property ModifiedBy() As String
			Get
				Return Me._ModifiedBy
			End Get
			Set
				If (String.Equals(Me._ModifiedBy, value) = false) Then
					Me._ModifiedBy = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedOn", DbType:="DateTime")>  _
		Public Property ModifiedOn() As System.Nullable(Of Date)
			Get
				Return Me._ModifiedOn
			End Get
			Set
				If (Me._ModifiedOn.Equals(value) = false) Then
					Me._ModifiedOn = value
				End If
			End Set
		End Property
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Roles")>  _
	Partial Public Class Role
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _RoleID As Long
		
		Private _RoleName As String
		
		Private _RoleDescription As String
		
		Private _SubmittedBy As String
		
		Private _SubmittedOn As System.Nullable(Of Date)
		
		Private _ModifiedBy As String
		
		Private _ModifiedOn As System.Nullable(Of Date)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnRoleIDChanging(value As Long)
    End Sub
    Partial Private Sub OnRoleIDChanged()
    End Sub
    Partial Private Sub OnRoleNameChanging(value As String)
    End Sub
    Partial Private Sub OnRoleNameChanged()
    End Sub
    Partial Private Sub OnRoleDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnRoleDescriptionChanged()
    End Sub
    Partial Private Sub OnSubmittedByChanging(value As String)
    End Sub
    Partial Private Sub OnSubmittedByChanged()
    End Sub
    Partial Private Sub OnSubmittedOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSubmittedOnChanged()
    End Sub
    Partial Private Sub OnModifiedByChanging(value As String)
    End Sub
    Partial Private Sub OnModifiedByChanged()
    End Sub
    Partial Private Sub OnModifiedOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnModifiedOnChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RoleID", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property RoleID() As Long
			Get
				Return Me._RoleID
			End Get
			Set
				If ((Me._RoleID = value)  _
							= false) Then
					Me.OnRoleIDChanging(value)
					Me.SendPropertyChanging
					Me._RoleID = value
					Me.SendPropertyChanged("RoleID")
					Me.OnRoleIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RoleName", DbType:="VarChar(64) NOT NULL", CanBeNull:=false)>  _
		Public Property RoleName() As String
			Get
				Return Me._RoleName
			End Get
			Set
				If (String.Equals(Me._RoleName, value) = false) Then
					Me.OnRoleNameChanging(value)
					Me.SendPropertyChanging
					Me._RoleName = value
					Me.SendPropertyChanged("RoleName")
					Me.OnRoleNameChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RoleDescription", DbType:="VarChar(256) NOT NULL", CanBeNull:=false)>  _
		Public Property RoleDescription() As String
			Get
				Return Me._RoleDescription
			End Get
			Set
				If (String.Equals(Me._RoleDescription, value) = false) Then
					Me.OnRoleDescriptionChanging(value)
					Me.SendPropertyChanging
					Me._RoleDescription = value
					Me.SendPropertyChanged("RoleDescription")
					Me.OnRoleDescriptionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubmittedBy", DbType:="VarChar(128)")>  _
		Public Property SubmittedBy() As String
			Get
				Return Me._SubmittedBy
			End Get
			Set
				If (String.Equals(Me._SubmittedBy, value) = false) Then
					Me.OnSubmittedByChanging(value)
					Me.SendPropertyChanging
					Me._SubmittedBy = value
					Me.SendPropertyChanged("SubmittedBy")
					Me.OnSubmittedByChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubmittedOn", DbType:="DateTime")>  _
		Public Property SubmittedOn() As System.Nullable(Of Date)
			Get
				Return Me._SubmittedOn
			End Get
			Set
				If (Me._SubmittedOn.Equals(value) = false) Then
					Me.OnSubmittedOnChanging(value)
					Me.SendPropertyChanging
					Me._SubmittedOn = value
					Me.SendPropertyChanged("SubmittedOn")
					Me.OnSubmittedOnChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedBy", DbType:="VarChar(128)")>  _
		Public Property ModifiedBy() As String
			Get
				Return Me._ModifiedBy
			End Get
			Set
				If (String.Equals(Me._ModifiedBy, value) = false) Then
					Me.OnModifiedByChanging(value)
					Me.SendPropertyChanging
					Me._ModifiedBy = value
					Me.SendPropertyChanged("ModifiedBy")
					Me.OnModifiedByChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedOn", DbType:="DateTime")>  _
		Public Property ModifiedOn() As System.Nullable(Of Date)
			Get
				Return Me._ModifiedOn
			End Get
			Set
				If (Me._ModifiedOn.Equals(value) = false) Then
					Me.OnModifiedOnChanging(value)
					Me.SendPropertyChanging
					Me._ModifiedOn = value
					Me.SendPropertyChanged("ModifiedOn")
					Me.OnModifiedOnChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.States")>  _
	Partial Public Class State
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _StateID As Long
		
		Private _State As String
		
		Private _Country As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnStateIDChanging(value As Long)
    End Sub
    Partial Private Sub OnStateIDChanged()
    End Sub
    Partial Private Sub OnStateChanging(value As String)
    End Sub
    Partial Private Sub OnStateChanged()
    End Sub
    Partial Private Sub OnCountryChanging(value As String)
    End Sub
    Partial Private Sub OnCountryChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StateID", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property StateID() As Long
			Get
				Return Me._StateID
			End Get
			Set
				If ((Me._StateID = value)  _
							= false) Then
					Me.OnStateIDChanging(value)
					Me.SendPropertyChanging
					Me._StateID = value
					Me.SendPropertyChanged("StateID")
					Me.OnStateIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_State", DbType:="VarChar(64) NOT NULL", CanBeNull:=false)>  _
		Public Property State() As String
			Get
				Return Me._State
			End Get
			Set
				If (String.Equals(Me._State, value) = false) Then
					Me.OnStateChanging(value)
					Me.SendPropertyChanging
					Me._State = value
					Me.SendPropertyChanged("State")
					Me.OnStateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Country", DbType:="VarChar(64)")>  _
		Public Property Country() As String
			Get
				Return Me._Country
			End Get
			Set
				If (String.Equals(Me._Country, value) = false) Then
					Me.OnCountryChanging(value)
					Me.SendPropertyChanging
					Me._Country = value
					Me.SendPropertyChanged("Country")
					Me.OnCountryChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.UserBranches")>  _
	Partial Public Class UserBranch
		
		Private _UserID As Long
		
		Private _BranchID As String
		
		Private _SubmittedBy As String
		
		Private _SubmittedOn As System.Nullable(Of Date)
		
		Private _ModifiedBy As String
		
		Private _ModifiedOn As System.Nullable(Of Date)
		
		Public Sub New()
			MyBase.New
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserID", DbType:="BigInt NOT NULL")>  _
		Public Property UserID() As Long
			Get
				Return Me._UserID
			End Get
			Set
				If ((Me._UserID = value)  _
							= false) Then
					Me._UserID = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BranchID", DbType:="VarChar(32) NOT NULL", CanBeNull:=false)>  _
		Public Property BranchID() As String
			Get
				Return Me._BranchID
			End Get
			Set
				If (String.Equals(Me._BranchID, value) = false) Then
					Me._BranchID = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubmittedBy", DbType:="VarChar(128)")>  _
		Public Property SubmittedBy() As String
			Get
				Return Me._SubmittedBy
			End Get
			Set
				If (String.Equals(Me._SubmittedBy, value) = false) Then
					Me._SubmittedBy = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubmittedOn", DbType:="DateTime")>  _
		Public Property SubmittedOn() As System.Nullable(Of Date)
			Get
				Return Me._SubmittedOn
			End Get
			Set
				If (Me._SubmittedOn.Equals(value) = false) Then
					Me._SubmittedOn = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedBy", DbType:="VarChar(128)")>  _
		Public Property ModifiedBy() As String
			Get
				Return Me._ModifiedBy
			End Get
			Set
				If (String.Equals(Me._ModifiedBy, value) = false) Then
					Me._ModifiedBy = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedOn", DbType:="DateTime")>  _
		Public Property ModifiedOn() As System.Nullable(Of Date)
			Get
				Return Me._ModifiedOn
			End Get
			Set
				If (Me._ModifiedOn.Equals(value) = false) Then
					Me._ModifiedOn = value
				End If
			End Set
		End Property
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.UserRoles")>  _
	Partial Public Class UserRole
		
		Private _UserID As Long
		
		Private _RoleID As Long
		
		Private _SubmittedBy As String
		
		Private _SubmittedOn As System.Nullable(Of Date)
		
		Private _ModifiedBy As String
		
		Private _ModifiedOn As System.Nullable(Of Date)
		
		Public Sub New()
			MyBase.New
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserID", DbType:="BigInt NOT NULL")>  _
		Public Property UserID() As Long
			Get
				Return Me._UserID
			End Get
			Set
				If ((Me._UserID = value)  _
							= false) Then
					Me._UserID = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RoleID", DbType:="BigInt NOT NULL")>  _
		Public Property RoleID() As Long
			Get
				Return Me._RoleID
			End Get
			Set
				If ((Me._RoleID = value)  _
							= false) Then
					Me._RoleID = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubmittedBy", DbType:="VarChar(128)")>  _
		Public Property SubmittedBy() As String
			Get
				Return Me._SubmittedBy
			End Get
			Set
				If (String.Equals(Me._SubmittedBy, value) = false) Then
					Me._SubmittedBy = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubmittedOn", DbType:="DateTime")>  _
		Public Property SubmittedOn() As System.Nullable(Of Date)
			Get
				Return Me._SubmittedOn
			End Get
			Set
				If (Me._SubmittedOn.Equals(value) = false) Then
					Me._SubmittedOn = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedBy", DbType:="VarChar(128)")>  _
		Public Property ModifiedBy() As String
			Get
				Return Me._ModifiedBy
			End Get
			Set
				If (String.Equals(Me._ModifiedBy, value) = false) Then
					Me._ModifiedBy = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedOn", DbType:="DateTime")>  _
		Public Property ModifiedOn() As System.Nullable(Of Date)
			Get
				Return Me._ModifiedOn
			End Get
			Set
				If (Me._ModifiedOn.Equals(value) = false) Then
					Me._ModifiedOn = value
				End If
			End Set
		End Property
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.HPayDept")>  _
	Partial Public Class HPayDept
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _Code As String
		
		Private _Name As String
		
		Private _Remark As String
		
		Private _Tag As String
		
		Private _Deleted As System.Nullable(Of Byte)
		
		Private _Active As System.Nullable(Of Byte)
		
		Private _Submitby As String
		
		Private _SubmitOn As System.Nullable(Of Date)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCodeChanging(value As String)
    End Sub
    Partial Private Sub OnCodeChanged()
    End Sub
    Partial Private Sub OnNameChanging(value As String)
    End Sub
    Partial Private Sub OnNameChanged()
    End Sub
    Partial Private Sub OnRemarkChanging(value As String)
    End Sub
    Partial Private Sub OnRemarkChanged()
    End Sub
    Partial Private Sub OnTagChanging(value As String)
    End Sub
    Partial Private Sub OnTagChanged()
    End Sub
    Partial Private Sub OnDeletedChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnDeletedChanged()
    End Sub
    Partial Private Sub OnActiveChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnActiveChanged()
    End Sub
    Partial Private Sub OnSubmitbyChanging(value As String)
    End Sub
    Partial Private Sub OnSubmitbyChanged()
    End Sub
    Partial Private Sub OnSubmitOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSubmitOnChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Code", DbType:="VarChar(50) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property Code() As String
			Get
				Return Me._Code
			End Get
			Set
				If (String.Equals(Me._Code, value) = false) Then
					Me.OnCodeChanging(value)
					Me.SendPropertyChanging
					Me._Code = value
					Me.SendPropertyChanged("Code")
					Me.OnCodeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="VarChar(110)")>  _
		Public Property Name() As String
			Get
				Return Me._Name
			End Get
			Set
				If (String.Equals(Me._Name, value) = false) Then
					Me.OnNameChanging(value)
					Me.SendPropertyChanging
					Me._Name = value
					Me.SendPropertyChanged("Name")
					Me.OnNameChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Remark", DbType:="VarChar(255)")>  _
		Public Property Remark() As String
			Get
				Return Me._Remark
			End Get
			Set
				If (String.Equals(Me._Remark, value) = false) Then
					Me.OnRemarkChanging(value)
					Me.SendPropertyChanging
					Me._Remark = value
					Me.SendPropertyChanged("Remark")
					Me.OnRemarkChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tag", DbType:="VarChar(50)")>  _
		Public Property Tag() As String
			Get
				Return Me._Tag
			End Get
			Set
				If (String.Equals(Me._Tag, value) = false) Then
					Me.OnTagChanging(value)
					Me.SendPropertyChanging
					Me._Tag = value
					Me.SendPropertyChanged("Tag")
					Me.OnTagChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Deleted", DbType:="TinyInt")>  _
		Public Property Deleted() As System.Nullable(Of Byte)
			Get
				Return Me._Deleted
			End Get
			Set
				If (Me._Deleted.Equals(value) = false) Then
					Me.OnDeletedChanging(value)
					Me.SendPropertyChanging
					Me._Deleted = value
					Me.SendPropertyChanged("Deleted")
					Me.OnDeletedChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Active", DbType:="TinyInt")>  _
		Public Property Active() As System.Nullable(Of Byte)
			Get
				Return Me._Active
			End Get
			Set
				If (Me._Active.Equals(value) = false) Then
					Me.OnActiveChanging(value)
					Me.SendPropertyChanging
					Me._Active = value
					Me.SendPropertyChanged("Active")
					Me.OnActiveChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Submitby", DbType:="VarChar(50)")>  _
		Public Property Submitby() As String
			Get
				Return Me._Submitby
			End Get
			Set
				If (String.Equals(Me._Submitby, value) = false) Then
					Me.OnSubmitbyChanging(value)
					Me.SendPropertyChanging
					Me._Submitby = value
					Me.SendPropertyChanged("Submitby")
					Me.OnSubmitbyChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubmitOn", DbType:="DateTime")>  _
		Public Property SubmitOn() As System.Nullable(Of Date)
			Get
				Return Me._SubmitOn
			End Get
			Set
				If (Me._SubmitOn.Equals(value) = false) Then
					Me.OnSubmitOnChanging(value)
					Me.SendPropertyChanging
					Me._SubmitOn = value
					Me.SendPropertyChanged("SubmitOn")
					Me.OnSubmitOnChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.HPaySection")>  _
	Partial Public Class HPaySection
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _Code As String
		
		Private _Section As String
		
		Private _Description As String
		
		Private _Tag As String
		
		Private _Deleted As System.Nullable(Of Byte)
		
		Private _Active As System.Nullable(Of Byte)
		
		Private _Submitby As String
		
		Private _SubmitOn As System.Nullable(Of Date)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCodeChanging(value As String)
    End Sub
    Partial Private Sub OnCodeChanged()
    End Sub
    Partial Private Sub OnSectionChanging(value As String)
    End Sub
    Partial Private Sub OnSectionChanged()
    End Sub
    Partial Private Sub OnDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnDescriptionChanged()
    End Sub
    Partial Private Sub OnTagChanging(value As String)
    End Sub
    Partial Private Sub OnTagChanged()
    End Sub
    Partial Private Sub OnDeletedChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnDeletedChanged()
    End Sub
    Partial Private Sub OnActiveChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnActiveChanged()
    End Sub
    Partial Private Sub OnSubmitbyChanging(value As String)
    End Sub
    Partial Private Sub OnSubmitbyChanged()
    End Sub
    Partial Private Sub OnSubmitOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSubmitOnChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Code", DbType:="VarChar(20) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property Code() As String
			Get
				Return Me._Code
			End Get
			Set
				If (String.Equals(Me._Code, value) = false) Then
					Me.OnCodeChanging(value)
					Me.SendPropertyChanging
					Me._Code = value
					Me.SendPropertyChanged("Code")
					Me.OnCodeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Section", DbType:="VarChar(50)")>  _
		Public Property Section() As String
			Get
				Return Me._Section
			End Get
			Set
				If (String.Equals(Me._Section, value) = false) Then
					Me.OnSectionChanging(value)
					Me.SendPropertyChanging
					Me._Section = value
					Me.SendPropertyChanged("Section")
					Me.OnSectionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="VarChar(255)")>  _
		Public Property Description() As String
			Get
				Return Me._Description
			End Get
			Set
				If (String.Equals(Me._Description, value) = false) Then
					Me.OnDescriptionChanging(value)
					Me.SendPropertyChanging
					Me._Description = value
					Me.SendPropertyChanged("Description")
					Me.OnDescriptionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tag", DbType:="VarChar(255)")>  _
		Public Property Tag() As String
			Get
				Return Me._Tag
			End Get
			Set
				If (String.Equals(Me._Tag, value) = false) Then
					Me.OnTagChanging(value)
					Me.SendPropertyChanging
					Me._Tag = value
					Me.SendPropertyChanged("Tag")
					Me.OnTagChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Deleted", DbType:="TinyInt")>  _
		Public Property Deleted() As System.Nullable(Of Byte)
			Get
				Return Me._Deleted
			End Get
			Set
				If (Me._Deleted.Equals(value) = false) Then
					Me.OnDeletedChanging(value)
					Me.SendPropertyChanging
					Me._Deleted = value
					Me.SendPropertyChanged("Deleted")
					Me.OnDeletedChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Active", DbType:="TinyInt")>  _
		Public Property Active() As System.Nullable(Of Byte)
			Get
				Return Me._Active
			End Get
			Set
				If (Me._Active.Equals(value) = false) Then
					Me.OnActiveChanging(value)
					Me.SendPropertyChanging
					Me._Active = value
					Me.SendPropertyChanged("Active")
					Me.OnActiveChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Submitby", DbType:="VarChar(50)")>  _
		Public Property Submitby() As String
			Get
				Return Me._Submitby
			End Get
			Set
				If (String.Equals(Me._Submitby, value) = false) Then
					Me.OnSubmitbyChanging(value)
					Me.SendPropertyChanging
					Me._Submitby = value
					Me.SendPropertyChanged("Submitby")
					Me.OnSubmitbyChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubmitOn", DbType:="DateTime")>  _
		Public Property SubmitOn() As System.Nullable(Of Date)
			Get
				Return Me._SubmitOn
			End Get
			Set
				If (Me._SubmitOn.Equals(value) = false) Then
					Me.OnSubmitOnChanging(value)
					Me.SendPropertyChanging
					Me._SubmitOn = value
					Me.SendPropertyChanged("SubmitOn")
					Me.OnSubmitOnChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.HRAttendance")>  _
	Partial Public Class HRAttendance
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _AttendID As Integer
		
		Private _EmployeeID As System.Nullable(Of Integer)
		
		Private _AbsentDate As System.Nullable(Of Date)
		
		Private _Reasons As String
		
		Private _Remark As String
		
		Private _Tag As String
		
		Private _Deleted As System.Nullable(Of Byte)
		
		Private _Active As System.Nullable(Of Byte)
		
		Private _Submitby As String
		
		Private _SubmitOn As System.Nullable(Of Date)
		
		Private _ModifiedBy As String
		
		Private _ModifiedOn As System.Nullable(Of Date)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnAttendIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnAttendIDChanged()
    End Sub
    Partial Private Sub OnEmployeeIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnEmployeeIDChanged()
    End Sub
    Partial Private Sub OnAbsentDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnAbsentDateChanged()
    End Sub
    Partial Private Sub OnReasonsChanging(value As String)
    End Sub
    Partial Private Sub OnReasonsChanged()
    End Sub
    Partial Private Sub OnRemarkChanging(value As String)
    End Sub
    Partial Private Sub OnRemarkChanged()
    End Sub
    Partial Private Sub OnTagChanging(value As String)
    End Sub
    Partial Private Sub OnTagChanged()
    End Sub
    Partial Private Sub OnDeletedChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnDeletedChanged()
    End Sub
    Partial Private Sub OnActiveChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnActiveChanged()
    End Sub
    Partial Private Sub OnSubmitbyChanging(value As String)
    End Sub
    Partial Private Sub OnSubmitbyChanged()
    End Sub
    Partial Private Sub OnSubmitOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSubmitOnChanged()
    End Sub
    Partial Private Sub OnModifiedByChanging(value As String)
    End Sub
    Partial Private Sub OnModifiedByChanged()
    End Sub
    Partial Private Sub OnModifiedOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnModifiedOnChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AttendID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property AttendID() As Integer
			Get
				Return Me._AttendID
			End Get
			Set
				If ((Me._AttendID = value)  _
							= false) Then
					Me.OnAttendIDChanging(value)
					Me.SendPropertyChanging
					Me._AttendID = value
					Me.SendPropertyChanged("AttendID")
					Me.OnAttendIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EmployeeID", DbType:="Int")>  _
		Public Property EmployeeID() As System.Nullable(Of Integer)
			Get
				Return Me._EmployeeID
			End Get
			Set
				If (Me._EmployeeID.Equals(value) = false) Then
					Me.OnEmployeeIDChanging(value)
					Me.SendPropertyChanging
					Me._EmployeeID = value
					Me.SendPropertyChanged("EmployeeID")
					Me.OnEmployeeIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AbsentDate", DbType:="SmallDateTime")>  _
		Public Property AbsentDate() As System.Nullable(Of Date)
			Get
				Return Me._AbsentDate
			End Get
			Set
				If (Me._AbsentDate.Equals(value) = false) Then
					Me.OnAbsentDateChanging(value)
					Me.SendPropertyChanging
					Me._AbsentDate = value
					Me.SendPropertyChanged("AbsentDate")
					Me.OnAbsentDateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Reasons", DbType:="VarChar(255)")>  _
		Public Property Reasons() As String
			Get
				Return Me._Reasons
			End Get
			Set
				If (String.Equals(Me._Reasons, value) = false) Then
					Me.OnReasonsChanging(value)
					Me.SendPropertyChanging
					Me._Reasons = value
					Me.SendPropertyChanged("Reasons")
					Me.OnReasonsChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Remark", DbType:="VarChar(255)")>  _
		Public Property Remark() As String
			Get
				Return Me._Remark
			End Get
			Set
				If (String.Equals(Me._Remark, value) = false) Then
					Me.OnRemarkChanging(value)
					Me.SendPropertyChanging
					Me._Remark = value
					Me.SendPropertyChanged("Remark")
					Me.OnRemarkChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tag", DbType:="VarChar(255)")>  _
		Public Property Tag() As String
			Get
				Return Me._Tag
			End Get
			Set
				If (String.Equals(Me._Tag, value) = false) Then
					Me.OnTagChanging(value)
					Me.SendPropertyChanging
					Me._Tag = value
					Me.SendPropertyChanged("Tag")
					Me.OnTagChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Deleted", DbType:="TinyInt")>  _
		Public Property Deleted() As System.Nullable(Of Byte)
			Get
				Return Me._Deleted
			End Get
			Set
				If (Me._Deleted.Equals(value) = false) Then
					Me.OnDeletedChanging(value)
					Me.SendPropertyChanging
					Me._Deleted = value
					Me.SendPropertyChanged("Deleted")
					Me.OnDeletedChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Active", DbType:="TinyInt")>  _
		Public Property Active() As System.Nullable(Of Byte)
			Get
				Return Me._Active
			End Get
			Set
				If (Me._Active.Equals(value) = false) Then
					Me.OnActiveChanging(value)
					Me.SendPropertyChanging
					Me._Active = value
					Me.SendPropertyChanged("Active")
					Me.OnActiveChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Submitby", DbType:="VarChar(50)")>  _
		Public Property Submitby() As String
			Get
				Return Me._Submitby
			End Get
			Set
				If (String.Equals(Me._Submitby, value) = false) Then
					Me.OnSubmitbyChanging(value)
					Me.SendPropertyChanging
					Me._Submitby = value
					Me.SendPropertyChanged("Submitby")
					Me.OnSubmitbyChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubmitOn", DbType:="DateTime")>  _
		Public Property SubmitOn() As System.Nullable(Of Date)
			Get
				Return Me._SubmitOn
			End Get
			Set
				If (Me._SubmitOn.Equals(value) = false) Then
					Me.OnSubmitOnChanging(value)
					Me.SendPropertyChanging
					Me._SubmitOn = value
					Me.SendPropertyChanged("SubmitOn")
					Me.OnSubmitOnChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedBy", DbType:="VarChar(50)")>  _
		Public Property ModifiedBy() As String
			Get
				Return Me._ModifiedBy
			End Get
			Set
				If (String.Equals(Me._ModifiedBy, value) = false) Then
					Me.OnModifiedByChanging(value)
					Me.SendPropertyChanging
					Me._ModifiedBy = value
					Me.SendPropertyChanged("ModifiedBy")
					Me.OnModifiedByChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedOn", DbType:="DateTime")>  _
		Public Property ModifiedOn() As System.Nullable(Of Date)
			Get
				Return Me._ModifiedOn
			End Get
			Set
				If (Me._ModifiedOn.Equals(value) = false) Then
					Me.OnModifiedOnChanging(value)
					Me.SendPropertyChanging
					Me._ModifiedOn = value
					Me.SendPropertyChanged("ModifiedOn")
					Me.OnModifiedOnChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.HRCompensation")>  _
	Partial Public Class HRCompensation
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _CaseID As Integer
		
		Private _EmployeeID As System.Nullable(Of Integer)
		
		Private _CaseDesc As String
		
		Private _IncidentDate As System.Nullable(Of Date)
		
		Private _IncidentTime As System.Nullable(Of Date)
		
		Private _NotifyDate As System.Nullable(Of Date)
		
		Private _Death As System.Nullable(Of Boolean)
		
		Private _DayAway As String
		
		Private _DayRestricted As String
		
		Private _MedCost As System.Nullable(Of Decimal)
		
		Private _OtherCost As System.Nullable(Of Decimal)
		
		Private _InjuryDetails As String
		
		Private _PartsDesc As String
		
		Private _Object As String
		
		Private _Premises As System.Nullable(Of Boolean)
		
		Private _LocDetails As String
		
		Private _Tag As String
		
		Private _Deleted As System.Nullable(Of Byte)
		
		Private _Active As System.Nullable(Of Byte)
		
		Private _Submitby As String
		
		Private _SubmitOn As System.Nullable(Of Date)
		
		Private _ModifiedBy As String
		
		Private _ModifiedOn As System.Nullable(Of Date)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCaseIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnCaseIDChanged()
    End Sub
    Partial Private Sub OnEmployeeIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnEmployeeIDChanged()
    End Sub
    Partial Private Sub OnCaseDescChanging(value As String)
    End Sub
    Partial Private Sub OnCaseDescChanged()
    End Sub
    Partial Private Sub OnIncidentDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnIncidentDateChanged()
    End Sub
    Partial Private Sub OnIncidentTimeChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnIncidentTimeChanged()
    End Sub
    Partial Private Sub OnNotifyDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnNotifyDateChanged()
    End Sub
    Partial Private Sub OnDeathChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnDeathChanged()
    End Sub
    Partial Private Sub OnDayAwayChanging(value As String)
    End Sub
    Partial Private Sub OnDayAwayChanged()
    End Sub
    Partial Private Sub OnDayRestrictedChanging(value As String)
    End Sub
    Partial Private Sub OnDayRestrictedChanged()
    End Sub
    Partial Private Sub OnMedCostChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnMedCostChanged()
    End Sub
    Partial Private Sub OnOtherCostChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnOtherCostChanged()
    End Sub
    Partial Private Sub OnInjuryDetailsChanging(value As String)
    End Sub
    Partial Private Sub OnInjuryDetailsChanged()
    End Sub
    Partial Private Sub OnPartsDescChanging(value As String)
    End Sub
    Partial Private Sub OnPartsDescChanged()
    End Sub
    Partial Private Sub OnObjectChanging(value As String)
    End Sub
    Partial Private Sub OnObjectChanged()
    End Sub
    Partial Private Sub OnPremisesChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnPremisesChanged()
    End Sub
    Partial Private Sub OnLocDetailsChanging(value As String)
    End Sub
    Partial Private Sub OnLocDetailsChanged()
    End Sub
    Partial Private Sub OnTagChanging(value As String)
    End Sub
    Partial Private Sub OnTagChanged()
    End Sub
    Partial Private Sub OnDeletedChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnDeletedChanged()
    End Sub
    Partial Private Sub OnActiveChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnActiveChanged()
    End Sub
    Partial Private Sub OnSubmitbyChanging(value As String)
    End Sub
    Partial Private Sub OnSubmitbyChanged()
    End Sub
    Partial Private Sub OnSubmitOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSubmitOnChanged()
    End Sub
    Partial Private Sub OnModifiedByChanging(value As String)
    End Sub
    Partial Private Sub OnModifiedByChanged()
    End Sub
    Partial Private Sub OnModifiedOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnModifiedOnChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CaseID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property CaseID() As Integer
			Get
				Return Me._CaseID
			End Get
			Set
				If ((Me._CaseID = value)  _
							= false) Then
					Me.OnCaseIDChanging(value)
					Me.SendPropertyChanging
					Me._CaseID = value
					Me.SendPropertyChanged("CaseID")
					Me.OnCaseIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EmployeeID", DbType:="Int")>  _
		Public Property EmployeeID() As System.Nullable(Of Integer)
			Get
				Return Me._EmployeeID
			End Get
			Set
				If (Me._EmployeeID.Equals(value) = false) Then
					Me.OnEmployeeIDChanging(value)
					Me.SendPropertyChanging
					Me._EmployeeID = value
					Me.SendPropertyChanged("EmployeeID")
					Me.OnEmployeeIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CaseDesc", DbType:="VarChar(110)")>  _
		Public Property CaseDesc() As String
			Get
				Return Me._CaseDesc
			End Get
			Set
				If (String.Equals(Me._CaseDesc, value) = false) Then
					Me.OnCaseDescChanging(value)
					Me.SendPropertyChanging
					Me._CaseDesc = value
					Me.SendPropertyChanged("CaseDesc")
					Me.OnCaseDescChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IncidentDate", DbType:="SmallDateTime")>  _
		Public Property IncidentDate() As System.Nullable(Of Date)
			Get
				Return Me._IncidentDate
			End Get
			Set
				If (Me._IncidentDate.Equals(value) = false) Then
					Me.OnIncidentDateChanging(value)
					Me.SendPropertyChanging
					Me._IncidentDate = value
					Me.SendPropertyChanged("IncidentDate")
					Me.OnIncidentDateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IncidentTime", DbType:="SmallDateTime")>  _
		Public Property IncidentTime() As System.Nullable(Of Date)
			Get
				Return Me._IncidentTime
			End Get
			Set
				If (Me._IncidentTime.Equals(value) = false) Then
					Me.OnIncidentTimeChanging(value)
					Me.SendPropertyChanging
					Me._IncidentTime = value
					Me.SendPropertyChanged("IncidentTime")
					Me.OnIncidentTimeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NotifyDate", DbType:="SmallDateTime")>  _
		Public Property NotifyDate() As System.Nullable(Of Date)
			Get
				Return Me._NotifyDate
			End Get
			Set
				If (Me._NotifyDate.Equals(value) = false) Then
					Me.OnNotifyDateChanging(value)
					Me.SendPropertyChanging
					Me._NotifyDate = value
					Me.SendPropertyChanged("NotifyDate")
					Me.OnNotifyDateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Death", DbType:="Bit")>  _
		Public Property Death() As System.Nullable(Of Boolean)
			Get
				Return Me._Death
			End Get
			Set
				If (Me._Death.Equals(value) = false) Then
					Me.OnDeathChanging(value)
					Me.SendPropertyChanging
					Me._Death = value
					Me.SendPropertyChanged("Death")
					Me.OnDeathChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DayAway", DbType:="VarChar(32)")>  _
		Public Property DayAway() As String
			Get
				Return Me._DayAway
			End Get
			Set
				If (String.Equals(Me._DayAway, value) = false) Then
					Me.OnDayAwayChanging(value)
					Me.SendPropertyChanging
					Me._DayAway = value
					Me.SendPropertyChanged("DayAway")
					Me.OnDayAwayChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DayRestricted", DbType:="VarChar(32)")>  _
		Public Property DayRestricted() As String
			Get
				Return Me._DayRestricted
			End Get
			Set
				If (String.Equals(Me._DayRestricted, value) = false) Then
					Me.OnDayRestrictedChanging(value)
					Me.SendPropertyChanging
					Me._DayRestricted = value
					Me.SendPropertyChanged("DayRestricted")
					Me.OnDayRestrictedChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MedCost", DbType:="Money")>  _
		Public Property MedCost() As System.Nullable(Of Decimal)
			Get
				Return Me._MedCost
			End Get
			Set
				If (Me._MedCost.Equals(value) = false) Then
					Me.OnMedCostChanging(value)
					Me.SendPropertyChanging
					Me._MedCost = value
					Me.SendPropertyChanged("MedCost")
					Me.OnMedCostChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OtherCost", DbType:="Money")>  _
		Public Property OtherCost() As System.Nullable(Of Decimal)
			Get
				Return Me._OtherCost
			End Get
			Set
				If (Me._OtherCost.Equals(value) = false) Then
					Me.OnOtherCostChanging(value)
					Me.SendPropertyChanging
					Me._OtherCost = value
					Me.SendPropertyChanged("OtherCost")
					Me.OnOtherCostChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InjuryDetails", DbType:="VarChar(256)")>  _
		Public Property InjuryDetails() As String
			Get
				Return Me._InjuryDetails
			End Get
			Set
				If (String.Equals(Me._InjuryDetails, value) = false) Then
					Me.OnInjuryDetailsChanging(value)
					Me.SendPropertyChanging
					Me._InjuryDetails = value
					Me.SendPropertyChanged("InjuryDetails")
					Me.OnInjuryDetailsChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PartsDesc", DbType:="VarChar(256)")>  _
		Public Property PartsDesc() As String
			Get
				Return Me._PartsDesc
			End Get
			Set
				If (String.Equals(Me._PartsDesc, value) = false) Then
					Me.OnPartsDescChanging(value)
					Me.SendPropertyChanging
					Me._PartsDesc = value
					Me.SendPropertyChanged("PartsDesc")
					Me.OnPartsDescChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="Object", Storage:="_Object", DbType:="VarChar(64)")>  _
		Public Property [Object]() As String
			Get
				Return Me._Object
			End Get
			Set
				If (String.Equals(Me._Object, value) = false) Then
					Me.OnObjectChanging(value)
					Me.SendPropertyChanging
					Me._Object = value
					Me.SendPropertyChanged("[Object]")
					Me.OnObjectChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Premises", DbType:="Bit")>  _
		Public Property Premises() As System.Nullable(Of Boolean)
			Get
				Return Me._Premises
			End Get
			Set
				If (Me._Premises.Equals(value) = false) Then
					Me.OnPremisesChanging(value)
					Me.SendPropertyChanging
					Me._Premises = value
					Me.SendPropertyChanged("Premises")
					Me.OnPremisesChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LocDetails", DbType:="VarChar(256)")>  _
		Public Property LocDetails() As String
			Get
				Return Me._LocDetails
			End Get
			Set
				If (String.Equals(Me._LocDetails, value) = false) Then
					Me.OnLocDetailsChanging(value)
					Me.SendPropertyChanging
					Me._LocDetails = value
					Me.SendPropertyChanged("LocDetails")
					Me.OnLocDetailsChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tag", DbType:="VarChar(256)")>  _
		Public Property Tag() As String
			Get
				Return Me._Tag
			End Get
			Set
				If (String.Equals(Me._Tag, value) = false) Then
					Me.OnTagChanging(value)
					Me.SendPropertyChanging
					Me._Tag = value
					Me.SendPropertyChanged("Tag")
					Me.OnTagChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Deleted", DbType:="TinyInt")>  _
		Public Property Deleted() As System.Nullable(Of Byte)
			Get
				Return Me._Deleted
			End Get
			Set
				If (Me._Deleted.Equals(value) = false) Then
					Me.OnDeletedChanging(value)
					Me.SendPropertyChanging
					Me._Deleted = value
					Me.SendPropertyChanged("Deleted")
					Me.OnDeletedChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Active", DbType:="TinyInt")>  _
		Public Property Active() As System.Nullable(Of Byte)
			Get
				Return Me._Active
			End Get
			Set
				If (Me._Active.Equals(value) = false) Then
					Me.OnActiveChanging(value)
					Me.SendPropertyChanging
					Me._Active = value
					Me.SendPropertyChanged("Active")
					Me.OnActiveChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Submitby", DbType:="VarChar(64)")>  _
		Public Property Submitby() As String
			Get
				Return Me._Submitby
			End Get
			Set
				If (String.Equals(Me._Submitby, value) = false) Then
					Me.OnSubmitbyChanging(value)
					Me.SendPropertyChanging
					Me._Submitby = value
					Me.SendPropertyChanged("Submitby")
					Me.OnSubmitbyChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubmitOn", DbType:="DateTime")>  _
		Public Property SubmitOn() As System.Nullable(Of Date)
			Get
				Return Me._SubmitOn
			End Get
			Set
				If (Me._SubmitOn.Equals(value) = false) Then
					Me.OnSubmitOnChanging(value)
					Me.SendPropertyChanging
					Me._SubmitOn = value
					Me.SendPropertyChanged("SubmitOn")
					Me.OnSubmitOnChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedBy", DbType:="VarChar(64)")>  _
		Public Property ModifiedBy() As String
			Get
				Return Me._ModifiedBy
			End Get
			Set
				If (String.Equals(Me._ModifiedBy, value) = false) Then
					Me.OnModifiedByChanging(value)
					Me.SendPropertyChanging
					Me._ModifiedBy = value
					Me.SendPropertyChanged("ModifiedBy")
					Me.OnModifiedByChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedOn", DbType:="DateTime")>  _
		Public Property ModifiedOn() As System.Nullable(Of Date)
			Get
				Return Me._ModifiedOn
			End Get
			Set
				If (Me._ModifiedOn.Equals(value) = false) Then
					Me.OnModifiedOnChanging(value)
					Me.SendPropertyChanging
					Me._ModifiedOn = value
					Me.SendPropertyChanged("ModifiedOn")
					Me.OnModifiedOnChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.HRCompVehicle")>  _
	Partial Public Class HRCompVehicle
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _VehicleID As Integer
		
		Private _EmployeeID As String
		
		Private _CompVehicle As String
		
		Private _Make As String
		
		Private _Model As String
		
		Private _DriverLicNo As String
		
		Private _LicExpDate As System.Nullable(Of Date)
		
		Private _AssignDate As System.Nullable(Of Date)
		
		Private _ExpReturnDate As System.Nullable(Of Date)
		
		Private _ActReturnDate As System.Nullable(Of Date)
		
		Private _Remarks As String
		
		Private _Tag As String
		
		Private _Deleted As System.Nullable(Of Byte)
		
		Private _Active As System.Nullable(Of Byte)
		
		Private _Submitby As String
		
		Private _SubmitOn As System.Nullable(Of Date)
		
		Private _ModifiedBy As String
		
		Private _ModifiedOn As System.Nullable(Of Date)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnVehicleIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnVehicleIDChanged()
    End Sub
    Partial Private Sub OnEmployeeIDChanging(value As String)
    End Sub
    Partial Private Sub OnEmployeeIDChanged()
    End Sub
    Partial Private Sub OnCompVehicleChanging(value As String)
    End Sub
    Partial Private Sub OnCompVehicleChanged()
    End Sub
    Partial Private Sub OnMakeChanging(value As String)
    End Sub
    Partial Private Sub OnMakeChanged()
    End Sub
    Partial Private Sub OnModelChanging(value As String)
    End Sub
    Partial Private Sub OnModelChanged()
    End Sub
    Partial Private Sub OnDriverLicNoChanging(value As String)
    End Sub
    Partial Private Sub OnDriverLicNoChanged()
    End Sub
    Partial Private Sub OnLicExpDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnLicExpDateChanged()
    End Sub
    Partial Private Sub OnAssignDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnAssignDateChanged()
    End Sub
    Partial Private Sub OnExpReturnDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnExpReturnDateChanged()
    End Sub
    Partial Private Sub OnActReturnDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnActReturnDateChanged()
    End Sub
    Partial Private Sub OnRemarksChanging(value As String)
    End Sub
    Partial Private Sub OnRemarksChanged()
    End Sub
    Partial Private Sub OnTagChanging(value As String)
    End Sub
    Partial Private Sub OnTagChanged()
    End Sub
    Partial Private Sub OnDeletedChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnDeletedChanged()
    End Sub
    Partial Private Sub OnActiveChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnActiveChanged()
    End Sub
    Partial Private Sub OnSubmitbyChanging(value As String)
    End Sub
    Partial Private Sub OnSubmitbyChanged()
    End Sub
    Partial Private Sub OnSubmitOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSubmitOnChanged()
    End Sub
    Partial Private Sub OnModifiedByChanging(value As String)
    End Sub
    Partial Private Sub OnModifiedByChanged()
    End Sub
    Partial Private Sub OnModifiedOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnModifiedOnChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VehicleID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property VehicleID() As Integer
			Get
				Return Me._VehicleID
			End Get
			Set
				If ((Me._VehicleID = value)  _
							= false) Then
					Me.OnVehicleIDChanging(value)
					Me.SendPropertyChanging
					Me._VehicleID = value
					Me.SendPropertyChanged("VehicleID")
					Me.OnVehicleIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EmployeeID", DbType:="VarChar(32)")>  _
		Public Property EmployeeID() As String
			Get
				Return Me._EmployeeID
			End Get
			Set
				If (String.Equals(Me._EmployeeID, value) = false) Then
					Me.OnEmployeeIDChanging(value)
					Me.SendPropertyChanging
					Me._EmployeeID = value
					Me.SendPropertyChanged("EmployeeID")
					Me.OnEmployeeIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CompVehicle", DbType:="VarChar(64)")>  _
		Public Property CompVehicle() As String
			Get
				Return Me._CompVehicle
			End Get
			Set
				If (String.Equals(Me._CompVehicle, value) = false) Then
					Me.OnCompVehicleChanging(value)
					Me.SendPropertyChanging
					Me._CompVehicle = value
					Me.SendPropertyChanged("CompVehicle")
					Me.OnCompVehicleChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Make", DbType:="VarChar(64)")>  _
		Public Property Make() As String
			Get
				Return Me._Make
			End Get
			Set
				If (String.Equals(Me._Make, value) = false) Then
					Me.OnMakeChanging(value)
					Me.SendPropertyChanging
					Me._Make = value
					Me.SendPropertyChanged("Make")
					Me.OnMakeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Model", DbType:="VarChar(64)")>  _
		Public Property Model() As String
			Get
				Return Me._Model
			End Get
			Set
				If (String.Equals(Me._Model, value) = false) Then
					Me.OnModelChanging(value)
					Me.SendPropertyChanging
					Me._Model = value
					Me.SendPropertyChanged("Model")
					Me.OnModelChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DriverLicNo", DbType:="VarChar(64)")>  _
		Public Property DriverLicNo() As String
			Get
				Return Me._DriverLicNo
			End Get
			Set
				If (String.Equals(Me._DriverLicNo, value) = false) Then
					Me.OnDriverLicNoChanging(value)
					Me.SendPropertyChanging
					Me._DriverLicNo = value
					Me.SendPropertyChanged("DriverLicNo")
					Me.OnDriverLicNoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LicExpDate", DbType:="SmallDateTime")>  _
		Public Property LicExpDate() As System.Nullable(Of Date)
			Get
				Return Me._LicExpDate
			End Get
			Set
				If (Me._LicExpDate.Equals(value) = false) Then
					Me.OnLicExpDateChanging(value)
					Me.SendPropertyChanging
					Me._LicExpDate = value
					Me.SendPropertyChanged("LicExpDate")
					Me.OnLicExpDateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AssignDate", DbType:="SmallDateTime")>  _
		Public Property AssignDate() As System.Nullable(Of Date)
			Get
				Return Me._AssignDate
			End Get
			Set
				If (Me._AssignDate.Equals(value) = false) Then
					Me.OnAssignDateChanging(value)
					Me.SendPropertyChanging
					Me._AssignDate = value
					Me.SendPropertyChanged("AssignDate")
					Me.OnAssignDateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ExpReturnDate", DbType:="SmallDateTime")>  _
		Public Property ExpReturnDate() As System.Nullable(Of Date)
			Get
				Return Me._ExpReturnDate
			End Get
			Set
				If (Me._ExpReturnDate.Equals(value) = false) Then
					Me.OnExpReturnDateChanging(value)
					Me.SendPropertyChanging
					Me._ExpReturnDate = value
					Me.SendPropertyChanged("ExpReturnDate")
					Me.OnExpReturnDateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ActReturnDate", DbType:="SmallDateTime")>  _
		Public Property ActReturnDate() As System.Nullable(Of Date)
			Get
				Return Me._ActReturnDate
			End Get
			Set
				If (Me._ActReturnDate.Equals(value) = false) Then
					Me.OnActReturnDateChanging(value)
					Me.SendPropertyChanging
					Me._ActReturnDate = value
					Me.SendPropertyChanged("ActReturnDate")
					Me.OnActReturnDateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Remarks", DbType:="VarChar(256)")>  _
		Public Property Remarks() As String
			Get
				Return Me._Remarks
			End Get
			Set
				If (String.Equals(Me._Remarks, value) = false) Then
					Me.OnRemarksChanging(value)
					Me.SendPropertyChanging
					Me._Remarks = value
					Me.SendPropertyChanged("Remarks")
					Me.OnRemarksChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tag", DbType:="VarChar(256)")>  _
		Public Property Tag() As String
			Get
				Return Me._Tag
			End Get
			Set
				If (String.Equals(Me._Tag, value) = false) Then
					Me.OnTagChanging(value)
					Me.SendPropertyChanging
					Me._Tag = value
					Me.SendPropertyChanged("Tag")
					Me.OnTagChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Deleted", DbType:="TinyInt")>  _
		Public Property Deleted() As System.Nullable(Of Byte)
			Get
				Return Me._Deleted
			End Get
			Set
				If (Me._Deleted.Equals(value) = false) Then
					Me.OnDeletedChanging(value)
					Me.SendPropertyChanging
					Me._Deleted = value
					Me.SendPropertyChanged("Deleted")
					Me.OnDeletedChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Active", DbType:="TinyInt")>  _
		Public Property Active() As System.Nullable(Of Byte)
			Get
				Return Me._Active
			End Get
			Set
				If (Me._Active.Equals(value) = false) Then
					Me.OnActiveChanging(value)
					Me.SendPropertyChanging
					Me._Active = value
					Me.SendPropertyChanged("Active")
					Me.OnActiveChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Submitby", DbType:="VarChar(32)")>  _
		Public Property Submitby() As String
			Get
				Return Me._Submitby
			End Get
			Set
				If (String.Equals(Me._Submitby, value) = false) Then
					Me.OnSubmitbyChanging(value)
					Me.SendPropertyChanging
					Me._Submitby = value
					Me.SendPropertyChanged("Submitby")
					Me.OnSubmitbyChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubmitOn", DbType:="DateTime")>  _
		Public Property SubmitOn() As System.Nullable(Of Date)
			Get
				Return Me._SubmitOn
			End Get
			Set
				If (Me._SubmitOn.Equals(value) = false) Then
					Me.OnSubmitOnChanging(value)
					Me.SendPropertyChanging
					Me._SubmitOn = value
					Me.SendPropertyChanged("SubmitOn")
					Me.OnSubmitOnChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedBy", DbType:="VarChar(32)")>  _
		Public Property ModifiedBy() As String
			Get
				Return Me._ModifiedBy
			End Get
			Set
				If (String.Equals(Me._ModifiedBy, value) = false) Then
					Me.OnModifiedByChanging(value)
					Me.SendPropertyChanging
					Me._ModifiedBy = value
					Me.SendPropertyChanged("ModifiedBy")
					Me.OnModifiedByChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedOn", DbType:="DateTime")>  _
		Public Property ModifiedOn() As System.Nullable(Of Date)
			Get
				Return Me._ModifiedOn
			End Get
			Set
				If (Me._ModifiedOn.Equals(value) = false) Then
					Me.OnModifiedOnChanging(value)
					Me.SendPropertyChanging
					Me._ModifiedOn = value
					Me.SendPropertyChanged("ModifiedOn")
					Me.OnModifiedOnChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.HRDiscipline")>  _
	Partial Public Class HRDiscipline
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _DisciplineID As Integer
		
		Private _EmployeeID As String
		
		Private _DisplineType As String
		
		Private _DisDate As System.Nullable(Of Date)
		
		Private _DisciplineOfficer As String
		
		Private _Remarks As String
		
		Private _Tag As String
		
		Private _Deleted As System.Nullable(Of Byte)
		
		Private _Active As System.Nullable(Of Byte)
		
		Private _Submitby As String
		
		Private _SubmitOn As System.Nullable(Of Date)
		
		Private _ModifiedBy As String
		
		Private _ModifiedOn As System.Nullable(Of Date)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnDisciplineIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnDisciplineIDChanged()
    End Sub
    Partial Private Sub OnEmployeeIDChanging(value As String)
    End Sub
    Partial Private Sub OnEmployeeIDChanged()
    End Sub
    Partial Private Sub OnDisplineTypeChanging(value As String)
    End Sub
    Partial Private Sub OnDisplineTypeChanged()
    End Sub
    Partial Private Sub OnDisDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDisDateChanged()
    End Sub
    Partial Private Sub OnDisciplineOfficerChanging(value As String)
    End Sub
    Partial Private Sub OnDisciplineOfficerChanged()
    End Sub
    Partial Private Sub OnRemarksChanging(value As String)
    End Sub
    Partial Private Sub OnRemarksChanged()
    End Sub
    Partial Private Sub OnTagChanging(value As String)
    End Sub
    Partial Private Sub OnTagChanged()
    End Sub
    Partial Private Sub OnDeletedChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnDeletedChanged()
    End Sub
    Partial Private Sub OnActiveChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnActiveChanged()
    End Sub
    Partial Private Sub OnSubmitbyChanging(value As String)
    End Sub
    Partial Private Sub OnSubmitbyChanged()
    End Sub
    Partial Private Sub OnSubmitOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSubmitOnChanged()
    End Sub
    Partial Private Sub OnModifiedByChanging(value As String)
    End Sub
    Partial Private Sub OnModifiedByChanged()
    End Sub
    Partial Private Sub OnModifiedOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnModifiedOnChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DisciplineID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property DisciplineID() As Integer
			Get
				Return Me._DisciplineID
			End Get
			Set
				If ((Me._DisciplineID = value)  _
							= false) Then
					Me.OnDisciplineIDChanging(value)
					Me.SendPropertyChanging
					Me._DisciplineID = value
					Me.SendPropertyChanged("DisciplineID")
					Me.OnDisciplineIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EmployeeID", DbType:="VarChar(110)")>  _
		Public Property EmployeeID() As String
			Get
				Return Me._EmployeeID
			End Get
			Set
				If (String.Equals(Me._EmployeeID, value) = false) Then
					Me.OnEmployeeIDChanging(value)
					Me.SendPropertyChanging
					Me._EmployeeID = value
					Me.SendPropertyChanged("EmployeeID")
					Me.OnEmployeeIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DisplineType", DbType:="VarChar(50)")>  _
		Public Property DisplineType() As String
			Get
				Return Me._DisplineType
			End Get
			Set
				If (String.Equals(Me._DisplineType, value) = false) Then
					Me.OnDisplineTypeChanging(value)
					Me.SendPropertyChanging
					Me._DisplineType = value
					Me.SendPropertyChanged("DisplineType")
					Me.OnDisplineTypeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DisDate", DbType:="SmallDateTime")>  _
		Public Property DisDate() As System.Nullable(Of Date)
			Get
				Return Me._DisDate
			End Get
			Set
				If (Me._DisDate.Equals(value) = false) Then
					Me.OnDisDateChanging(value)
					Me.SendPropertyChanging
					Me._DisDate = value
					Me.SendPropertyChanged("DisDate")
					Me.OnDisDateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DisciplineOfficer", DbType:="VarChar(50)")>  _
		Public Property DisciplineOfficer() As String
			Get
				Return Me._DisciplineOfficer
			End Get
			Set
				If (String.Equals(Me._DisciplineOfficer, value) = false) Then
					Me.OnDisciplineOfficerChanging(value)
					Me.SendPropertyChanging
					Me._DisciplineOfficer = value
					Me.SendPropertyChanged("DisciplineOfficer")
					Me.OnDisciplineOfficerChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Remarks", DbType:="VarChar(255)")>  _
		Public Property Remarks() As String
			Get
				Return Me._Remarks
			End Get
			Set
				If (String.Equals(Me._Remarks, value) = false) Then
					Me.OnRemarksChanging(value)
					Me.SendPropertyChanging
					Me._Remarks = value
					Me.SendPropertyChanged("Remarks")
					Me.OnRemarksChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tag", DbType:="VarChar(255)")>  _
		Public Property Tag() As String
			Get
				Return Me._Tag
			End Get
			Set
				If (String.Equals(Me._Tag, value) = false) Then
					Me.OnTagChanging(value)
					Me.SendPropertyChanging
					Me._Tag = value
					Me.SendPropertyChanged("Tag")
					Me.OnTagChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Deleted", DbType:="TinyInt")>  _
		Public Property Deleted() As System.Nullable(Of Byte)
			Get
				Return Me._Deleted
			End Get
			Set
				If (Me._Deleted.Equals(value) = false) Then
					Me.OnDeletedChanging(value)
					Me.SendPropertyChanging
					Me._Deleted = value
					Me.SendPropertyChanged("Deleted")
					Me.OnDeletedChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Active", DbType:="TinyInt")>  _
		Public Property Active() As System.Nullable(Of Byte)
			Get
				Return Me._Active
			End Get
			Set
				If (Me._Active.Equals(value) = false) Then
					Me.OnActiveChanging(value)
					Me.SendPropertyChanging
					Me._Active = value
					Me.SendPropertyChanged("Active")
					Me.OnActiveChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Submitby", DbType:="VarChar(50)")>  _
		Public Property Submitby() As String
			Get
				Return Me._Submitby
			End Get
			Set
				If (String.Equals(Me._Submitby, value) = false) Then
					Me.OnSubmitbyChanging(value)
					Me.SendPropertyChanging
					Me._Submitby = value
					Me.SendPropertyChanged("Submitby")
					Me.OnSubmitbyChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubmitOn", DbType:="DateTime")>  _
		Public Property SubmitOn() As System.Nullable(Of Date)
			Get
				Return Me._SubmitOn
			End Get
			Set
				If (Me._SubmitOn.Equals(value) = false) Then
					Me.OnSubmitOnChanging(value)
					Me.SendPropertyChanging
					Me._SubmitOn = value
					Me.SendPropertyChanged("SubmitOn")
					Me.OnSubmitOnChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedBy", DbType:="VarChar(50)")>  _
		Public Property ModifiedBy() As String
			Get
				Return Me._ModifiedBy
			End Get
			Set
				If (String.Equals(Me._ModifiedBy, value) = false) Then
					Me.OnModifiedByChanging(value)
					Me.SendPropertyChanging
					Me._ModifiedBy = value
					Me.SendPropertyChanged("ModifiedBy")
					Me.OnModifiedByChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedOn", DbType:="DateTime")>  _
		Public Property ModifiedOn() As System.Nullable(Of Date)
			Get
				Return Me._ModifiedOn
			End Get
			Set
				If (Me._ModifiedOn.Equals(value) = false) Then
					Me.OnModifiedOnChanging(value)
					Me.SendPropertyChanging
					Me._ModifiedOn = value
					Me.SendPropertyChanged("ModifiedOn")
					Me.OnModifiedOnChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.HRDisciplineType")>  _
	Partial Public Class HRDisciplineType
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _DisTypeID As Integer
		
		Private _DisType As String
		
		Private _Remarks As String
		
		Private _Tag As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnDisTypeIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnDisTypeIDChanged()
    End Sub
    Partial Private Sub OnDisTypeChanging(value As String)
    End Sub
    Partial Private Sub OnDisTypeChanged()
    End Sub
    Partial Private Sub OnRemarksChanging(value As String)
    End Sub
    Partial Private Sub OnRemarksChanged()
    End Sub
    Partial Private Sub OnTagChanging(value As String)
    End Sub
    Partial Private Sub OnTagChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DisTypeID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property DisTypeID() As Integer
			Get
				Return Me._DisTypeID
			End Get
			Set
				If ((Me._DisTypeID = value)  _
							= false) Then
					Me.OnDisTypeIDChanging(value)
					Me.SendPropertyChanging
					Me._DisTypeID = value
					Me.SendPropertyChanged("DisTypeID")
					Me.OnDisTypeIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DisType", DbType:="VarChar(50)")>  _
		Public Property DisType() As String
			Get
				Return Me._DisType
			End Get
			Set
				If (String.Equals(Me._DisType, value) = false) Then
					Me.OnDisTypeChanging(value)
					Me.SendPropertyChanging
					Me._DisType = value
					Me.SendPropertyChanged("DisType")
					Me.OnDisTypeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Remarks", DbType:="VarChar(255)")>  _
		Public Property Remarks() As String
			Get
				Return Me._Remarks
			End Get
			Set
				If (String.Equals(Me._Remarks, value) = false) Then
					Me.OnRemarksChanging(value)
					Me.SendPropertyChanging
					Me._Remarks = value
					Me.SendPropertyChanged("Remarks")
					Me.OnRemarksChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tag", DbType:="VarChar(255)")>  _
		Public Property Tag() As String
			Get
				Return Me._Tag
			End Get
			Set
				If (String.Equals(Me._Tag, value) = false) Then
					Me.OnTagChanging(value)
					Me.SendPropertyChanging
					Me._Tag = value
					Me.SendPropertyChanged("Tag")
					Me.OnTagChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.HREducation")>  _
	Partial Public Class HREducation
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _EducationID As Integer
		
		Private _EmployeeNo As String
		
		Private _SchoolAttend As String
		
		Private _Dfrom As System.Nullable(Of Date)
		
		Private _Dto As System.Nullable(Of Date)
		
		Private _CertObtained As String
		
		Private _Tag As String
		
		Private _Deleted As System.Nullable(Of Byte)
		
		Private _Active As System.Nullable(Of Byte)
		
		Private _Submitby As String
		
		Private _SubmitOn As System.Nullable(Of Date)
		
		Private _ModifiedBy As String
		
		Private _ModifiedOn As System.Nullable(Of Date)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnEducationIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnEducationIDChanged()
    End Sub
    Partial Private Sub OnEmployeeNoChanging(value As String)
    End Sub
    Partial Private Sub OnEmployeeNoChanged()
    End Sub
    Partial Private Sub OnSchoolAttendChanging(value As String)
    End Sub
    Partial Private Sub OnSchoolAttendChanged()
    End Sub
    Partial Private Sub OnDfromChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDfromChanged()
    End Sub
    Partial Private Sub OnDtoChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDtoChanged()
    End Sub
    Partial Private Sub OnCertObtainedChanging(value As String)
    End Sub
    Partial Private Sub OnCertObtainedChanged()
    End Sub
    Partial Private Sub OnTagChanging(value As String)
    End Sub
    Partial Private Sub OnTagChanged()
    End Sub
    Partial Private Sub OnDeletedChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnDeletedChanged()
    End Sub
    Partial Private Sub OnActiveChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnActiveChanged()
    End Sub
    Partial Private Sub OnSubmitbyChanging(value As String)
    End Sub
    Partial Private Sub OnSubmitbyChanged()
    End Sub
    Partial Private Sub OnSubmitOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSubmitOnChanged()
    End Sub
    Partial Private Sub OnModifiedByChanging(value As String)
    End Sub
    Partial Private Sub OnModifiedByChanged()
    End Sub
    Partial Private Sub OnModifiedOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnModifiedOnChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EducationID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property EducationID() As Integer
			Get
				Return Me._EducationID
			End Get
			Set
				If ((Me._EducationID = value)  _
							= false) Then
					Me.OnEducationIDChanging(value)
					Me.SendPropertyChanging
					Me._EducationID = value
					Me.SendPropertyChanged("EducationID")
					Me.OnEducationIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EmployeeNo", DbType:="VarChar(100)")>  _
		Public Property EmployeeNo() As String
			Get
				Return Me._EmployeeNo
			End Get
			Set
				If (String.Equals(Me._EmployeeNo, value) = false) Then
					Me.OnEmployeeNoChanging(value)
					Me.SendPropertyChanging
					Me._EmployeeNo = value
					Me.SendPropertyChanged("EmployeeNo")
					Me.OnEmployeeNoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SchoolAttend", DbType:="VarChar(150)")>  _
		Public Property SchoolAttend() As String
			Get
				Return Me._SchoolAttend
			End Get
			Set
				If (String.Equals(Me._SchoolAttend, value) = false) Then
					Me.OnSchoolAttendChanging(value)
					Me.SendPropertyChanging
					Me._SchoolAttend = value
					Me.SendPropertyChanged("SchoolAttend")
					Me.OnSchoolAttendChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Dfrom", DbType:="SmallDateTime")>  _
		Public Property Dfrom() As System.Nullable(Of Date)
			Get
				Return Me._Dfrom
			End Get
			Set
				If (Me._Dfrom.Equals(value) = false) Then
					Me.OnDfromChanging(value)
					Me.SendPropertyChanging
					Me._Dfrom = value
					Me.SendPropertyChanged("Dfrom")
					Me.OnDfromChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Dto", DbType:="SmallDateTime")>  _
		Public Property Dto() As System.Nullable(Of Date)
			Get
				Return Me._Dto
			End Get
			Set
				If (Me._Dto.Equals(value) = false) Then
					Me.OnDtoChanging(value)
					Me.SendPropertyChanging
					Me._Dto = value
					Me.SendPropertyChanged("Dto")
					Me.OnDtoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CertObtained", DbType:="VarChar(150)")>  _
		Public Property CertObtained() As String
			Get
				Return Me._CertObtained
			End Get
			Set
				If (String.Equals(Me._CertObtained, value) = false) Then
					Me.OnCertObtainedChanging(value)
					Me.SendPropertyChanging
					Me._CertObtained = value
					Me.SendPropertyChanged("CertObtained")
					Me.OnCertObtainedChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tag", DbType:="Char(255)")>  _
		Public Property Tag() As String
			Get
				Return Me._Tag
			End Get
			Set
				If (String.Equals(Me._Tag, value) = false) Then
					Me.OnTagChanging(value)
					Me.SendPropertyChanging
					Me._Tag = value
					Me.SendPropertyChanged("Tag")
					Me.OnTagChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Deleted", DbType:="TinyInt")>  _
		Public Property Deleted() As System.Nullable(Of Byte)
			Get
				Return Me._Deleted
			End Get
			Set
				If (Me._Deleted.Equals(value) = false) Then
					Me.OnDeletedChanging(value)
					Me.SendPropertyChanging
					Me._Deleted = value
					Me.SendPropertyChanged("Deleted")
					Me.OnDeletedChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Active", DbType:="TinyInt")>  _
		Public Property Active() As System.Nullable(Of Byte)
			Get
				Return Me._Active
			End Get
			Set
				If (Me._Active.Equals(value) = false) Then
					Me.OnActiveChanging(value)
					Me.SendPropertyChanging
					Me._Active = value
					Me.SendPropertyChanged("Active")
					Me.OnActiveChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Submitby", DbType:="VarChar(50)")>  _
		Public Property Submitby() As String
			Get
				Return Me._Submitby
			End Get
			Set
				If (String.Equals(Me._Submitby, value) = false) Then
					Me.OnSubmitbyChanging(value)
					Me.SendPropertyChanging
					Me._Submitby = value
					Me.SendPropertyChanged("Submitby")
					Me.OnSubmitbyChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubmitOn", DbType:="DateTime")>  _
		Public Property SubmitOn() As System.Nullable(Of Date)
			Get
				Return Me._SubmitOn
			End Get
			Set
				If (Me._SubmitOn.Equals(value) = false) Then
					Me.OnSubmitOnChanging(value)
					Me.SendPropertyChanging
					Me._SubmitOn = value
					Me.SendPropertyChanged("SubmitOn")
					Me.OnSubmitOnChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedBy", DbType:="VarChar(50)")>  _
		Public Property ModifiedBy() As String
			Get
				Return Me._ModifiedBy
			End Get
			Set
				If (String.Equals(Me._ModifiedBy, value) = false) Then
					Me.OnModifiedByChanging(value)
					Me.SendPropertyChanging
					Me._ModifiedBy = value
					Me.SendPropertyChanged("ModifiedBy")
					Me.OnModifiedByChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedOn", DbType:="DateTime")>  _
		Public Property ModifiedOn() As System.Nullable(Of Date)
			Get
				Return Me._ModifiedOn
			End Get
			Set
				If (Me._ModifiedOn.Equals(value) = false) Then
					Me.OnModifiedOnChanging(value)
					Me.SendPropertyChanging
					Me._ModifiedOn = value
					Me.SendPropertyChanged("ModifiedOn")
					Me.OnModifiedOnChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.HRExperience")>  _
	Partial Public Class HRExperience
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _ExperienceID As Integer
		
		Private _EmployeeID As String
		
		Private _OrgName As String
		
		Private _EDFrom As System.Nullable(Of Date)
		
		Private _EDTo As System.Nullable(Of Date)
		
		Private _PostHeld As String
		
		Private _Achievements As String
		
		Private _Tag As String
		
		Private _Deleted As System.Nullable(Of Byte)
		
		Private _Active As System.Nullable(Of Byte)
		
		Private _Submitby As String
		
		Private _SubmitOn As System.Nullable(Of Date)
		
		Private _ModifiedBy As String
		
		Private _ModifiedOn As System.Nullable(Of Date)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnExperienceIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnExperienceIDChanged()
    End Sub
    Partial Private Sub OnEmployeeIDChanging(value As String)
    End Sub
    Partial Private Sub OnEmployeeIDChanged()
    End Sub
    Partial Private Sub OnOrgNameChanging(value As String)
    End Sub
    Partial Private Sub OnOrgNameChanged()
    End Sub
    Partial Private Sub OnEDFromChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnEDFromChanged()
    End Sub
    Partial Private Sub OnEDToChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnEDToChanged()
    End Sub
    Partial Private Sub OnPostHeldChanging(value As String)
    End Sub
    Partial Private Sub OnPostHeldChanged()
    End Sub
    Partial Private Sub OnAchievementsChanging(value As String)
    End Sub
    Partial Private Sub OnAchievementsChanged()
    End Sub
    Partial Private Sub OnTagChanging(value As String)
    End Sub
    Partial Private Sub OnTagChanged()
    End Sub
    Partial Private Sub OnDeletedChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnDeletedChanged()
    End Sub
    Partial Private Sub OnActiveChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnActiveChanged()
    End Sub
    Partial Private Sub OnSubmitbyChanging(value As String)
    End Sub
    Partial Private Sub OnSubmitbyChanged()
    End Sub
    Partial Private Sub OnSubmitOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSubmitOnChanged()
    End Sub
    Partial Private Sub OnModifiedByChanging(value As String)
    End Sub
    Partial Private Sub OnModifiedByChanged()
    End Sub
    Partial Private Sub OnModifiedOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnModifiedOnChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ExperienceID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property ExperienceID() As Integer
			Get
				Return Me._ExperienceID
			End Get
			Set
				If ((Me._ExperienceID = value)  _
							= false) Then
					Me.OnExperienceIDChanging(value)
					Me.SendPropertyChanging
					Me._ExperienceID = value
					Me.SendPropertyChanged("ExperienceID")
					Me.OnExperienceIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EmployeeID", DbType:="VarChar(64)")>  _
		Public Property EmployeeID() As String
			Get
				Return Me._EmployeeID
			End Get
			Set
				If (String.Equals(Me._EmployeeID, value) = false) Then
					Me.OnEmployeeIDChanging(value)
					Me.SendPropertyChanging
					Me._EmployeeID = value
					Me.SendPropertyChanged("EmployeeID")
					Me.OnEmployeeIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OrgName", DbType:="VarChar(64)")>  _
		Public Property OrgName() As String
			Get
				Return Me._OrgName
			End Get
			Set
				If (String.Equals(Me._OrgName, value) = false) Then
					Me.OnOrgNameChanging(value)
					Me.SendPropertyChanging
					Me._OrgName = value
					Me.SendPropertyChanged("OrgName")
					Me.OnOrgNameChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EDFrom", DbType:="SmallDateTime")>  _
		Public Property EDFrom() As System.Nullable(Of Date)
			Get
				Return Me._EDFrom
			End Get
			Set
				If (Me._EDFrom.Equals(value) = false) Then
					Me.OnEDFromChanging(value)
					Me.SendPropertyChanging
					Me._EDFrom = value
					Me.SendPropertyChanged("EDFrom")
					Me.OnEDFromChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EDTo", DbType:="SmallDateTime")>  _
		Public Property EDTo() As System.Nullable(Of Date)
			Get
				Return Me._EDTo
			End Get
			Set
				If (Me._EDTo.Equals(value) = false) Then
					Me.OnEDToChanging(value)
					Me.SendPropertyChanging
					Me._EDTo = value
					Me.SendPropertyChanged("EDTo")
					Me.OnEDToChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PostHeld", DbType:="VarChar(64)")>  _
		Public Property PostHeld() As String
			Get
				Return Me._PostHeld
			End Get
			Set
				If (String.Equals(Me._PostHeld, value) = false) Then
					Me.OnPostHeldChanging(value)
					Me.SendPropertyChanging
					Me._PostHeld = value
					Me.SendPropertyChanged("PostHeld")
					Me.OnPostHeldChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Achievements", DbType:="VarChar(256)")>  _
		Public Property Achievements() As String
			Get
				Return Me._Achievements
			End Get
			Set
				If (String.Equals(Me._Achievements, value) = false) Then
					Me.OnAchievementsChanging(value)
					Me.SendPropertyChanging
					Me._Achievements = value
					Me.SendPropertyChanged("Achievements")
					Me.OnAchievementsChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tag", DbType:="VarChar(255)")>  _
		Public Property Tag() As String
			Get
				Return Me._Tag
			End Get
			Set
				If (String.Equals(Me._Tag, value) = false) Then
					Me.OnTagChanging(value)
					Me.SendPropertyChanging
					Me._Tag = value
					Me.SendPropertyChanged("Tag")
					Me.OnTagChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Deleted", DbType:="TinyInt")>  _
		Public Property Deleted() As System.Nullable(Of Byte)
			Get
				Return Me._Deleted
			End Get
			Set
				If (Me._Deleted.Equals(value) = false) Then
					Me.OnDeletedChanging(value)
					Me.SendPropertyChanging
					Me._Deleted = value
					Me.SendPropertyChanged("Deleted")
					Me.OnDeletedChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Active", DbType:="TinyInt")>  _
		Public Property Active() As System.Nullable(Of Byte)
			Get
				Return Me._Active
			End Get
			Set
				If (Me._Active.Equals(value) = false) Then
					Me.OnActiveChanging(value)
					Me.SendPropertyChanging
					Me._Active = value
					Me.SendPropertyChanged("Active")
					Me.OnActiveChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Submitby", DbType:="VarChar(50)")>  _
		Public Property Submitby() As String
			Get
				Return Me._Submitby
			End Get
			Set
				If (String.Equals(Me._Submitby, value) = false) Then
					Me.OnSubmitbyChanging(value)
					Me.SendPropertyChanging
					Me._Submitby = value
					Me.SendPropertyChanged("Submitby")
					Me.OnSubmitbyChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubmitOn", DbType:="DateTime")>  _
		Public Property SubmitOn() As System.Nullable(Of Date)
			Get
				Return Me._SubmitOn
			End Get
			Set
				If (Me._SubmitOn.Equals(value) = false) Then
					Me.OnSubmitOnChanging(value)
					Me.SendPropertyChanging
					Me._SubmitOn = value
					Me.SendPropertyChanged("SubmitOn")
					Me.OnSubmitOnChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedBy", DbType:="VarChar(50)")>  _
		Public Property ModifiedBy() As String
			Get
				Return Me._ModifiedBy
			End Get
			Set
				If (String.Equals(Me._ModifiedBy, value) = false) Then
					Me.OnModifiedByChanging(value)
					Me.SendPropertyChanging
					Me._ModifiedBy = value
					Me.SendPropertyChanged("ModifiedBy")
					Me.OnModifiedByChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedOn", DbType:="DateTime")>  _
		Public Property ModifiedOn() As System.Nullable(Of Date)
			Get
				Return Me._ModifiedOn
			End Get
			Set
				If (Me._ModifiedOn.Equals(value) = false) Then
					Me.OnModifiedOnChanging(value)
					Me.SendPropertyChanging
					Me._ModifiedOn = value
					Me.SendPropertyChanged("ModifiedOn")
					Me.OnModifiedOnChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.HRHobbies")>  _
	Partial Public Class HRHobby
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _ID As Long
		
		Private _EmployeeID As String
		
		Private _Name As String
		
		Private _A1 As System.Nullable(Of Decimal)
		
		Private _Remarks As String
		
		Private _Tag As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Long)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnEmployeeIDChanging(value As String)
    End Sub
    Partial Private Sub OnEmployeeIDChanged()
    End Sub
    Partial Private Sub OnNameChanging(value As String)
    End Sub
    Partial Private Sub OnNameChanged()
    End Sub
    Partial Private Sub OnA1Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnA1Changed()
    End Sub
    Partial Private Sub OnRemarksChanging(value As String)
    End Sub
    Partial Private Sub OnRemarksChanged()
    End Sub
    Partial Private Sub OnTagChanging(value As String)
    End Sub
    Partial Private Sub OnTagChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property ID() As Long
			Get
				Return Me._ID
			End Get
			Set
				If ((Me._ID = value)  _
							= false) Then
					Me.OnIDChanging(value)
					Me.SendPropertyChanging
					Me._ID = value
					Me.SendPropertyChanged("ID")
					Me.OnIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EmployeeID", DbType:="VarChar(50)")>  _
		Public Property EmployeeID() As String
			Get
				Return Me._EmployeeID
			End Get
			Set
				If (String.Equals(Me._EmployeeID, value) = false) Then
					Me.OnEmployeeIDChanging(value)
					Me.SendPropertyChanging
					Me._EmployeeID = value
					Me.SendPropertyChanged("EmployeeID")
					Me.OnEmployeeIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="VarChar(255)")>  _
		Public Property Name() As String
			Get
				Return Me._Name
			End Get
			Set
				If (String.Equals(Me._Name, value) = false) Then
					Me.OnNameChanging(value)
					Me.SendPropertyChanging
					Me._Name = value
					Me.SendPropertyChanged("Name")
					Me.OnNameChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A1", DbType:="Decimal(18,0)")>  _
		Public Property A1() As System.Nullable(Of Decimal)
			Get
				Return Me._A1
			End Get
			Set
				If (Me._A1.Equals(value) = false) Then
					Me.OnA1Changing(value)
					Me.SendPropertyChanging
					Me._A1 = value
					Me.SendPropertyChanged("A1")
					Me.OnA1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Remarks", DbType:="VarChar(50)")>  _
		Public Property Remarks() As String
			Get
				Return Me._Remarks
			End Get
			Set
				If (String.Equals(Me._Remarks, value) = false) Then
					Me.OnRemarksChanging(value)
					Me.SendPropertyChanging
					Me._Remarks = value
					Me.SendPropertyChanged("Remarks")
					Me.OnRemarksChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tag", DbType:="VarChar(50)")>  _
		Public Property Tag() As String
			Get
				Return Me._Tag
			End Get
			Set
				If (String.Equals(Me._Tag, value) = false) Then
					Me.OnTagChanging(value)
					Me.SendPropertyChanging
					Me._Tag = value
					Me.SendPropertyChanged("Tag")
					Me.OnTagChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.HRLang")>  _
	Partial Public Class HRLang
		
		Private _ID As Long
		
		Private _EmployeeID As String
		
		Private _Name As String
		
		Private _A1 As System.Nullable(Of Decimal)
		
		Private _Remarks As String
		
		Private _Tag As String
		
		Public Sub New()
			MyBase.New
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.Always, DbType:="BigInt NOT NULL IDENTITY", IsDbGenerated:=true)>  _
		Public Property ID() As Long
			Get
				Return Me._ID
			End Get
			Set
				If ((Me._ID = value)  _
							= false) Then
					Me._ID = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EmployeeID", DbType:="VarChar(50)")>  _
		Public Property EmployeeID() As String
			Get
				Return Me._EmployeeID
			End Get
			Set
				If (String.Equals(Me._EmployeeID, value) = false) Then
					Me._EmployeeID = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="VarChar(255)")>  _
		Public Property Name() As String
			Get
				Return Me._Name
			End Get
			Set
				If (String.Equals(Me._Name, value) = false) Then
					Me._Name = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A1", DbType:="Decimal(18,0)")>  _
		Public Property A1() As System.Nullable(Of Decimal)
			Get
				Return Me._A1
			End Get
			Set
				If (Me._A1.Equals(value) = false) Then
					Me._A1 = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Remarks", DbType:="VarChar(50)")>  _
		Public Property Remarks() As String
			Get
				Return Me._Remarks
			End Get
			Set
				If (String.Equals(Me._Remarks, value) = false) Then
					Me._Remarks = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tag", DbType:="VarChar(50)")>  _
		Public Property Tag() As String
			Get
				Return Me._Tag
			End Get
			Set
				If (String.Equals(Me._Tag, value) = false) Then
					Me._Tag = value
				End If
			End Set
		End Property
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.HRProfQ")>  _
	Partial Public Class HRProfQ
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _ProfQualificationID As Integer
		
		Private _EmployeeID As String
		
		Private _QualObtained As String
		
		Private _QualDate As System.Nullable(Of Date)
		
		Private _ProfBodies As String
		
		Private _Tag As String
		
		Private _Deleted As System.Nullable(Of Byte)
		
		Private _Active As System.Nullable(Of Byte)
		
		Private _Submitby As String
		
		Private _SubmitOn As System.Nullable(Of Date)
		
		Private _ModifiedBy As String
		
		Private _ModifiedOn As System.Nullable(Of Date)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnProfQualificationIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnProfQualificationIDChanged()
    End Sub
    Partial Private Sub OnEmployeeIDChanging(value As String)
    End Sub
    Partial Private Sub OnEmployeeIDChanged()
    End Sub
    Partial Private Sub OnQualObtainedChanging(value As String)
    End Sub
    Partial Private Sub OnQualObtainedChanged()
    End Sub
    Partial Private Sub OnQualDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnQualDateChanged()
    End Sub
    Partial Private Sub OnProfBodiesChanging(value As String)
    End Sub
    Partial Private Sub OnProfBodiesChanged()
    End Sub
    Partial Private Sub OnTagChanging(value As String)
    End Sub
    Partial Private Sub OnTagChanged()
    End Sub
    Partial Private Sub OnDeletedChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnDeletedChanged()
    End Sub
    Partial Private Sub OnActiveChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnActiveChanged()
    End Sub
    Partial Private Sub OnSubmitbyChanging(value As String)
    End Sub
    Partial Private Sub OnSubmitbyChanged()
    End Sub
    Partial Private Sub OnSubmitOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSubmitOnChanged()
    End Sub
    Partial Private Sub OnModifiedByChanging(value As String)
    End Sub
    Partial Private Sub OnModifiedByChanged()
    End Sub
    Partial Private Sub OnModifiedOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnModifiedOnChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProfQualificationID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property ProfQualificationID() As Integer
			Get
				Return Me._ProfQualificationID
			End Get
			Set
				If ((Me._ProfQualificationID = value)  _
							= false) Then
					Me.OnProfQualificationIDChanging(value)
					Me.SendPropertyChanging
					Me._ProfQualificationID = value
					Me.SendPropertyChanged("ProfQualificationID")
					Me.OnProfQualificationIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EmployeeID", DbType:="VarChar(32)")>  _
		Public Property EmployeeID() As String
			Get
				Return Me._EmployeeID
			End Get
			Set
				If (String.Equals(Me._EmployeeID, value) = false) Then
					Me.OnEmployeeIDChanging(value)
					Me.SendPropertyChanging
					Me._EmployeeID = value
					Me.SendPropertyChanged("EmployeeID")
					Me.OnEmployeeIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QualObtained", DbType:="VarChar(256)")>  _
		Public Property QualObtained() As String
			Get
				Return Me._QualObtained
			End Get
			Set
				If (String.Equals(Me._QualObtained, value) = false) Then
					Me.OnQualObtainedChanging(value)
					Me.SendPropertyChanging
					Me._QualObtained = value
					Me.SendPropertyChanged("QualObtained")
					Me.OnQualObtainedChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QualDate", DbType:="SmallDateTime")>  _
		Public Property QualDate() As System.Nullable(Of Date)
			Get
				Return Me._QualDate
			End Get
			Set
				If (Me._QualDate.Equals(value) = false) Then
					Me.OnQualDateChanging(value)
					Me.SendPropertyChanging
					Me._QualDate = value
					Me.SendPropertyChanged("QualDate")
					Me.OnQualDateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProfBodies", DbType:="VarChar(256)")>  _
		Public Property ProfBodies() As String
			Get
				Return Me._ProfBodies
			End Get
			Set
				If (String.Equals(Me._ProfBodies, value) = false) Then
					Me.OnProfBodiesChanging(value)
					Me.SendPropertyChanging
					Me._ProfBodies = value
					Me.SendPropertyChanged("ProfBodies")
					Me.OnProfBodiesChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tag", DbType:="VarChar(255)")>  _
		Public Property Tag() As String
			Get
				Return Me._Tag
			End Get
			Set
				If (String.Equals(Me._Tag, value) = false) Then
					Me.OnTagChanging(value)
					Me.SendPropertyChanging
					Me._Tag = value
					Me.SendPropertyChanged("Tag")
					Me.OnTagChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Deleted", DbType:="TinyInt")>  _
		Public Property Deleted() As System.Nullable(Of Byte)
			Get
				Return Me._Deleted
			End Get
			Set
				If (Me._Deleted.Equals(value) = false) Then
					Me.OnDeletedChanging(value)
					Me.SendPropertyChanging
					Me._Deleted = value
					Me.SendPropertyChanged("Deleted")
					Me.OnDeletedChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Active", DbType:="TinyInt")>  _
		Public Property Active() As System.Nullable(Of Byte)
			Get
				Return Me._Active
			End Get
			Set
				If (Me._Active.Equals(value) = false) Then
					Me.OnActiveChanging(value)
					Me.SendPropertyChanging
					Me._Active = value
					Me.SendPropertyChanged("Active")
					Me.OnActiveChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Submitby", DbType:="VarChar(32)")>  _
		Public Property Submitby() As String
			Get
				Return Me._Submitby
			End Get
			Set
				If (String.Equals(Me._Submitby, value) = false) Then
					Me.OnSubmitbyChanging(value)
					Me.SendPropertyChanging
					Me._Submitby = value
					Me.SendPropertyChanged("Submitby")
					Me.OnSubmitbyChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubmitOn", DbType:="DateTime")>  _
		Public Property SubmitOn() As System.Nullable(Of Date)
			Get
				Return Me._SubmitOn
			End Get
			Set
				If (Me._SubmitOn.Equals(value) = false) Then
					Me.OnSubmitOnChanging(value)
					Me.SendPropertyChanging
					Me._SubmitOn = value
					Me.SendPropertyChanged("SubmitOn")
					Me.OnSubmitOnChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedBy", DbType:="VarChar(32)")>  _
		Public Property ModifiedBy() As String
			Get
				Return Me._ModifiedBy
			End Get
			Set
				If (String.Equals(Me._ModifiedBy, value) = false) Then
					Me.OnModifiedByChanging(value)
					Me.SendPropertyChanging
					Me._ModifiedBy = value
					Me.SendPropertyChanged("ModifiedBy")
					Me.OnModifiedByChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedOn", DbType:="DateTime")>  _
		Public Property ModifiedOn() As System.Nullable(Of Date)
			Get
				Return Me._ModifiedOn
			End Get
			Set
				If (Me._ModifiedOn.Equals(value) = false) Then
					Me.OnModifiedOnChanging(value)
					Me.SendPropertyChanging
					Me._ModifiedOn = value
					Me.SendPropertyChanged("ModifiedOn")
					Me.OnModifiedOnChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.HRProperty")>  _
	Partial Public Class HRProperty
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _PptyID As Integer
		
		Private _EmployeeID As System.Nullable(Of Integer)
		
		Private _PtyName As String
		
		Private _PtyDesc As String
		
		Private _IssuedDate As System.Nullable(Of Date)
		
		Private _ReturnedDate As System.Nullable(Of Date)
		
		Private _PtyNo As String
		
		Private _PtyRemarks As String
		
		Private _Tag As String
		
		Private _Deleted As System.Nullable(Of Byte)
		
		Private _Active As System.Nullable(Of Byte)
		
		Private _Submitby As String
		
		Private _SubmitOn As System.Nullable(Of Date)
		
		Private _ModifiedBy As String
		
		Private _ModifiedOn As System.Nullable(Of Date)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnPptyIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnPptyIDChanged()
    End Sub
    Partial Private Sub OnEmployeeIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnEmployeeIDChanged()
    End Sub
    Partial Private Sub OnPtyNameChanging(value As String)
    End Sub
    Partial Private Sub OnPtyNameChanged()
    End Sub
    Partial Private Sub OnPtyDescChanging(value As String)
    End Sub
    Partial Private Sub OnPtyDescChanged()
    End Sub
    Partial Private Sub OnIssuedDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnIssuedDateChanged()
    End Sub
    Partial Private Sub OnReturnedDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnReturnedDateChanged()
    End Sub
    Partial Private Sub OnPtyNoChanging(value As String)
    End Sub
    Partial Private Sub OnPtyNoChanged()
    End Sub
    Partial Private Sub OnPtyRemarksChanging(value As String)
    End Sub
    Partial Private Sub OnPtyRemarksChanged()
    End Sub
    Partial Private Sub OnTagChanging(value As String)
    End Sub
    Partial Private Sub OnTagChanged()
    End Sub
    Partial Private Sub OnDeletedChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnDeletedChanged()
    End Sub
    Partial Private Sub OnActiveChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnActiveChanged()
    End Sub
    Partial Private Sub OnSubmitbyChanging(value As String)
    End Sub
    Partial Private Sub OnSubmitbyChanged()
    End Sub
    Partial Private Sub OnSubmitOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSubmitOnChanged()
    End Sub
    Partial Private Sub OnModifiedByChanging(value As String)
    End Sub
    Partial Private Sub OnModifiedByChanged()
    End Sub
    Partial Private Sub OnModifiedOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnModifiedOnChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PptyID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property PptyID() As Integer
			Get
				Return Me._PptyID
			End Get
			Set
				If ((Me._PptyID = value)  _
							= false) Then
					Me.OnPptyIDChanging(value)
					Me.SendPropertyChanging
					Me._PptyID = value
					Me.SendPropertyChanged("PptyID")
					Me.OnPptyIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EmployeeID", DbType:="Int")>  _
		Public Property EmployeeID() As System.Nullable(Of Integer)
			Get
				Return Me._EmployeeID
			End Get
			Set
				If (Me._EmployeeID.Equals(value) = false) Then
					Me.OnEmployeeIDChanging(value)
					Me.SendPropertyChanging
					Me._EmployeeID = value
					Me.SendPropertyChanged("EmployeeID")
					Me.OnEmployeeIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PtyName", DbType:="VarChar(110)")>  _
		Public Property PtyName() As String
			Get
				Return Me._PtyName
			End Get
			Set
				If (String.Equals(Me._PtyName, value) = false) Then
					Me.OnPtyNameChanging(value)
					Me.SendPropertyChanging
					Me._PtyName = value
					Me.SendPropertyChanged("PtyName")
					Me.OnPtyNameChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PtyDesc", DbType:="VarChar(110)")>  _
		Public Property PtyDesc() As String
			Get
				Return Me._PtyDesc
			End Get
			Set
				If (String.Equals(Me._PtyDesc, value) = false) Then
					Me.OnPtyDescChanging(value)
					Me.SendPropertyChanging
					Me._PtyDesc = value
					Me.SendPropertyChanged("PtyDesc")
					Me.OnPtyDescChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IssuedDate", DbType:="SmallDateTime")>  _
		Public Property IssuedDate() As System.Nullable(Of Date)
			Get
				Return Me._IssuedDate
			End Get
			Set
				If (Me._IssuedDate.Equals(value) = false) Then
					Me.OnIssuedDateChanging(value)
					Me.SendPropertyChanging
					Me._IssuedDate = value
					Me.SendPropertyChanged("IssuedDate")
					Me.OnIssuedDateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ReturnedDate", DbType:="SmallDateTime")>  _
		Public Property ReturnedDate() As System.Nullable(Of Date)
			Get
				Return Me._ReturnedDate
			End Get
			Set
				If (Me._ReturnedDate.Equals(value) = false) Then
					Me.OnReturnedDateChanging(value)
					Me.SendPropertyChanging
					Me._ReturnedDate = value
					Me.SendPropertyChanged("ReturnedDate")
					Me.OnReturnedDateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PtyNo", DbType:="VarChar(50)")>  _
		Public Property PtyNo() As String
			Get
				Return Me._PtyNo
			End Get
			Set
				If (String.Equals(Me._PtyNo, value) = false) Then
					Me.OnPtyNoChanging(value)
					Me.SendPropertyChanging
					Me._PtyNo = value
					Me.SendPropertyChanged("PtyNo")
					Me.OnPtyNoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PtyRemarks", DbType:="VarChar(255)")>  _
		Public Property PtyRemarks() As String
			Get
				Return Me._PtyRemarks
			End Get
			Set
				If (String.Equals(Me._PtyRemarks, value) = false) Then
					Me.OnPtyRemarksChanging(value)
					Me.SendPropertyChanging
					Me._PtyRemarks = value
					Me.SendPropertyChanged("PtyRemarks")
					Me.OnPtyRemarksChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tag", DbType:="VarChar(255)")>  _
		Public Property Tag() As String
			Get
				Return Me._Tag
			End Get
			Set
				If (String.Equals(Me._Tag, value) = false) Then
					Me.OnTagChanging(value)
					Me.SendPropertyChanging
					Me._Tag = value
					Me.SendPropertyChanged("Tag")
					Me.OnTagChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Deleted", DbType:="TinyInt")>  _
		Public Property Deleted() As System.Nullable(Of Byte)
			Get
				Return Me._Deleted
			End Get
			Set
				If (Me._Deleted.Equals(value) = false) Then
					Me.OnDeletedChanging(value)
					Me.SendPropertyChanging
					Me._Deleted = value
					Me.SendPropertyChanged("Deleted")
					Me.OnDeletedChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Active", DbType:="TinyInt")>  _
		Public Property Active() As System.Nullable(Of Byte)
			Get
				Return Me._Active
			End Get
			Set
				If (Me._Active.Equals(value) = false) Then
					Me.OnActiveChanging(value)
					Me.SendPropertyChanging
					Me._Active = value
					Me.SendPropertyChanged("Active")
					Me.OnActiveChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Submitby", DbType:="VarChar(50)")>  _
		Public Property Submitby() As String
			Get
				Return Me._Submitby
			End Get
			Set
				If (String.Equals(Me._Submitby, value) = false) Then
					Me.OnSubmitbyChanging(value)
					Me.SendPropertyChanging
					Me._Submitby = value
					Me.SendPropertyChanged("Submitby")
					Me.OnSubmitbyChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubmitOn", DbType:="DateTime")>  _
		Public Property SubmitOn() As System.Nullable(Of Date)
			Get
				Return Me._SubmitOn
			End Get
			Set
				If (Me._SubmitOn.Equals(value) = false) Then
					Me.OnSubmitOnChanging(value)
					Me.SendPropertyChanging
					Me._SubmitOn = value
					Me.SendPropertyChanged("SubmitOn")
					Me.OnSubmitOnChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedBy", DbType:="VarChar(50)")>  _
		Public Property ModifiedBy() As String
			Get
				Return Me._ModifiedBy
			End Get
			Set
				If (String.Equals(Me._ModifiedBy, value) = false) Then
					Me.OnModifiedByChanging(value)
					Me.SendPropertyChanging
					Me._ModifiedBy = value
					Me.SendPropertyChanged("ModifiedBy")
					Me.OnModifiedByChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedOn", DbType:="DateTime")>  _
		Public Property ModifiedOn() As System.Nullable(Of Date)
			Get
				Return Me._ModifiedOn
			End Get
			Set
				If (Me._ModifiedOn.Equals(value) = false) Then
					Me.OnModifiedOnChanging(value)
					Me.SendPropertyChanging
					Me._ModifiedOn = value
					Me.SendPropertyChanged("ModifiedOn")
					Me.OnModifiedOnChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.HRSteps")>  _
	Partial Public Class HRStep
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _ID As Long
		
		Private _Name As String
		
		Private _Remarks As String
		
		Private _Tag As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Long)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnNameChanging(value As String)
    End Sub
    Partial Private Sub OnNameChanged()
    End Sub
    Partial Private Sub OnRemarksChanging(value As String)
    End Sub
    Partial Private Sub OnRemarksChanged()
    End Sub
    Partial Private Sub OnTagChanging(value As String)
    End Sub
    Partial Private Sub OnTagChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property ID() As Long
			Get
				Return Me._ID
			End Get
			Set
				If ((Me._ID = value)  _
							= false) Then
					Me.OnIDChanging(value)
					Me.SendPropertyChanging
					Me._ID = value
					Me.SendPropertyChanged("ID")
					Me.OnIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="VarChar(255)")>  _
		Public Property Name() As String
			Get
				Return Me._Name
			End Get
			Set
				If (String.Equals(Me._Name, value) = false) Then
					Me.OnNameChanging(value)
					Me.SendPropertyChanging
					Me._Name = value
					Me.SendPropertyChanged("Name")
					Me.OnNameChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Remarks", DbType:="VarChar(255)")>  _
		Public Property Remarks() As String
			Get
				Return Me._Remarks
			End Get
			Set
				If (String.Equals(Me._Remarks, value) = false) Then
					Me.OnRemarksChanging(value)
					Me.SendPropertyChanging
					Me._Remarks = value
					Me.SendPropertyChanged("Remarks")
					Me.OnRemarksChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tag", DbType:="VarChar(255)")>  _
		Public Property Tag() As String
			Get
				Return Me._Tag
			End Get
			Set
				If (String.Equals(Me._Tag, value) = false) Then
					Me.OnTagChanging(value)
					Me.SendPropertyChanging
					Me._Tag = value
					Me.SendPropertyChanged("Tag")
					Me.OnTagChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.HRTrainingNeeds")>  _
	Partial Public Class HRTrainingNeed
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _TrainNeedID As Integer
		
		Private _EmployeeID As String
		
		Private _DueDate As System.Nullable(Of Date)
		
		Private _TrainingCode As String
		
		Private _TrainingDesc As String
		
		Private _CurrentJob As String
		
		Private _JobRelated As System.Nullable(Of Boolean)
		
		Private _Certify As String
		
		Private _Remarks As String
		
		Private _Tag As String
		
		Private _Deleted As System.Nullable(Of Byte)
		
		Private _Active As System.Nullable(Of Byte)
		
		Private _Submitby As String
		
		Private _SubmitOn As System.Nullable(Of Date)
		
		Private _ModifiedBy As String
		
		Private _ModifiedOn As System.Nullable(Of Date)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnTrainNeedIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnTrainNeedIDChanged()
    End Sub
    Partial Private Sub OnEmployeeIDChanging(value As String)
    End Sub
    Partial Private Sub OnEmployeeIDChanged()
    End Sub
    Partial Private Sub OnDueDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDueDateChanged()
    End Sub
    Partial Private Sub OnTrainingCodeChanging(value As String)
    End Sub
    Partial Private Sub OnTrainingCodeChanged()
    End Sub
    Partial Private Sub OnTrainingDescChanging(value As String)
    End Sub
    Partial Private Sub OnTrainingDescChanged()
    End Sub
    Partial Private Sub OnCurrentJobChanging(value As String)
    End Sub
    Partial Private Sub OnCurrentJobChanged()
    End Sub
    Partial Private Sub OnJobRelatedChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnJobRelatedChanged()
    End Sub
    Partial Private Sub OnCertifyChanging(value As String)
    End Sub
    Partial Private Sub OnCertifyChanged()
    End Sub
    Partial Private Sub OnRemarksChanging(value As String)
    End Sub
    Partial Private Sub OnRemarksChanged()
    End Sub
    Partial Private Sub OnTagChanging(value As String)
    End Sub
    Partial Private Sub OnTagChanged()
    End Sub
    Partial Private Sub OnDeletedChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnDeletedChanged()
    End Sub
    Partial Private Sub OnActiveChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnActiveChanged()
    End Sub
    Partial Private Sub OnSubmitbyChanging(value As String)
    End Sub
    Partial Private Sub OnSubmitbyChanged()
    End Sub
    Partial Private Sub OnSubmitOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSubmitOnChanged()
    End Sub
    Partial Private Sub OnModifiedByChanging(value As String)
    End Sub
    Partial Private Sub OnModifiedByChanged()
    End Sub
    Partial Private Sub OnModifiedOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnModifiedOnChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TrainNeedID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property TrainNeedID() As Integer
			Get
				Return Me._TrainNeedID
			End Get
			Set
				If ((Me._TrainNeedID = value)  _
							= false) Then
					Me.OnTrainNeedIDChanging(value)
					Me.SendPropertyChanging
					Me._TrainNeedID = value
					Me.SendPropertyChanged("TrainNeedID")
					Me.OnTrainNeedIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EmployeeID", DbType:="VarChar(110)")>  _
		Public Property EmployeeID() As String
			Get
				Return Me._EmployeeID
			End Get
			Set
				If (String.Equals(Me._EmployeeID, value) = false) Then
					Me.OnEmployeeIDChanging(value)
					Me.SendPropertyChanging
					Me._EmployeeID = value
					Me.SendPropertyChanged("EmployeeID")
					Me.OnEmployeeIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DueDate", DbType:="DateTime")>  _
		Public Property DueDate() As System.Nullable(Of Date)
			Get
				Return Me._DueDate
			End Get
			Set
				If (Me._DueDate.Equals(value) = false) Then
					Me.OnDueDateChanging(value)
					Me.SendPropertyChanging
					Me._DueDate = value
					Me.SendPropertyChanged("DueDate")
					Me.OnDueDateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TrainingCode", DbType:="VarChar(50)")>  _
		Public Property TrainingCode() As String
			Get
				Return Me._TrainingCode
			End Get
			Set
				If (String.Equals(Me._TrainingCode, value) = false) Then
					Me.OnTrainingCodeChanging(value)
					Me.SendPropertyChanging
					Me._TrainingCode = value
					Me.SendPropertyChanged("TrainingCode")
					Me.OnTrainingCodeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TrainingDesc", DbType:="VarChar(110)")>  _
		Public Property TrainingDesc() As String
			Get
				Return Me._TrainingDesc
			End Get
			Set
				If (String.Equals(Me._TrainingDesc, value) = false) Then
					Me.OnTrainingDescChanging(value)
					Me.SendPropertyChanging
					Me._TrainingDesc = value
					Me.SendPropertyChanged("TrainingDesc")
					Me.OnTrainingDescChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CurrentJob", DbType:="VarChar(50)")>  _
		Public Property CurrentJob() As String
			Get
				Return Me._CurrentJob
			End Get
			Set
				If (String.Equals(Me._CurrentJob, value) = false) Then
					Me.OnCurrentJobChanging(value)
					Me.SendPropertyChanging
					Me._CurrentJob = value
					Me.SendPropertyChanged("CurrentJob")
					Me.OnCurrentJobChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_JobRelated", DbType:="Bit")>  _
		Public Property JobRelated() As System.Nullable(Of Boolean)
			Get
				Return Me._JobRelated
			End Get
			Set
				If (Me._JobRelated.Equals(value) = false) Then
					Me.OnJobRelatedChanging(value)
					Me.SendPropertyChanging
					Me._JobRelated = value
					Me.SendPropertyChanged("JobRelated")
					Me.OnJobRelatedChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Certify", DbType:="VarChar(50)")>  _
		Public Property Certify() As String
			Get
				Return Me._Certify
			End Get
			Set
				If (String.Equals(Me._Certify, value) = false) Then
					Me.OnCertifyChanging(value)
					Me.SendPropertyChanging
					Me._Certify = value
					Me.SendPropertyChanged("Certify")
					Me.OnCertifyChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Remarks", DbType:="VarChar(255)")>  _
		Public Property Remarks() As String
			Get
				Return Me._Remarks
			End Get
			Set
				If (String.Equals(Me._Remarks, value) = false) Then
					Me.OnRemarksChanging(value)
					Me.SendPropertyChanging
					Me._Remarks = value
					Me.SendPropertyChanged("Remarks")
					Me.OnRemarksChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tag", DbType:="VarChar(255)")>  _
		Public Property Tag() As String
			Get
				Return Me._Tag
			End Get
			Set
				If (String.Equals(Me._Tag, value) = false) Then
					Me.OnTagChanging(value)
					Me.SendPropertyChanging
					Me._Tag = value
					Me.SendPropertyChanged("Tag")
					Me.OnTagChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Deleted", DbType:="TinyInt")>  _
		Public Property Deleted() As System.Nullable(Of Byte)
			Get
				Return Me._Deleted
			End Get
			Set
				If (Me._Deleted.Equals(value) = false) Then
					Me.OnDeletedChanging(value)
					Me.SendPropertyChanging
					Me._Deleted = value
					Me.SendPropertyChanged("Deleted")
					Me.OnDeletedChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Active", DbType:="TinyInt")>  _
		Public Property Active() As System.Nullable(Of Byte)
			Get
				Return Me._Active
			End Get
			Set
				If (Me._Active.Equals(value) = false) Then
					Me.OnActiveChanging(value)
					Me.SendPropertyChanging
					Me._Active = value
					Me.SendPropertyChanged("Active")
					Me.OnActiveChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Submitby", DbType:="VarChar(50)")>  _
		Public Property Submitby() As String
			Get
				Return Me._Submitby
			End Get
			Set
				If (String.Equals(Me._Submitby, value) = false) Then
					Me.OnSubmitbyChanging(value)
					Me.SendPropertyChanging
					Me._Submitby = value
					Me.SendPropertyChanged("Submitby")
					Me.OnSubmitbyChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubmitOn", DbType:="DateTime")>  _
		Public Property SubmitOn() As System.Nullable(Of Date)
			Get
				Return Me._SubmitOn
			End Get
			Set
				If (Me._SubmitOn.Equals(value) = false) Then
					Me.OnSubmitOnChanging(value)
					Me.SendPropertyChanging
					Me._SubmitOn = value
					Me.SendPropertyChanged("SubmitOn")
					Me.OnSubmitOnChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedBy", DbType:="VarChar(50)")>  _
		Public Property ModifiedBy() As String
			Get
				Return Me._ModifiedBy
			End Get
			Set
				If (String.Equals(Me._ModifiedBy, value) = false) Then
					Me.OnModifiedByChanging(value)
					Me.SendPropertyChanging
					Me._ModifiedBy = value
					Me.SendPropertyChanged("ModifiedBy")
					Me.OnModifiedByChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedOn", DbType:="DateTime")>  _
		Public Property ModifiedOn() As System.Nullable(Of Date)
			Get
				Return Me._ModifiedOn
			End Get
			Set
				If (Me._ModifiedOn.Equals(value) = false) Then
					Me.OnModifiedOnChanging(value)
					Me.SendPropertyChanging
					Me._ModifiedOn = value
					Me.SendPropertyChanged("ModifiedOn")
					Me.OnModifiedOnChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.LeaveType")>  _
	Partial Public Class LeaveType
		
		Private _TypeID As Integer
		
		Private _LeaveType As String
		
		Private _Remarks As String
		
		Private _Tag As String
		
		Public Sub New()
			MyBase.New
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TypeID", DbType:="Int NOT NULL")>  _
		Public Property TypeID() As Integer
			Get
				Return Me._TypeID
			End Get
			Set
				If ((Me._TypeID = value)  _
							= false) Then
					Me._TypeID = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LeaveType", DbType:="VarChar(50)")>  _
		Public Property LeaveType() As String
			Get
				Return Me._LeaveType
			End Get
			Set
				If (String.Equals(Me._LeaveType, value) = false) Then
					Me._LeaveType = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Remarks", DbType:="VarChar(255)")>  _
		Public Property Remarks() As String
			Get
				Return Me._Remarks
			End Get
			Set
				If (String.Equals(Me._Remarks, value) = false) Then
					Me._Remarks = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tag", DbType:="VarChar(255)")>  _
		Public Property Tag() As String
			Get
				Return Me._Tag
			End Get
			Set
				If (String.Equals(Me._Tag, value) = false) Then
					Me._Tag = value
				End If
			End Set
		End Property
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.PaySheets")>  _
	Partial Public Class PaySheet
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _SheetID As Integer
		
		Private _PaySheet As String
		
		Private _Frequency As String
		
		Private _Allowances As String
		
		Private _Deductions As String
		
		Private _GroupRates As String
		
		Private _Variables As String
		
		Private _Remarks As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnSheetIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnSheetIDChanged()
    End Sub
    Partial Private Sub OnPaySheetChanging(value As String)
    End Sub
    Partial Private Sub OnPaySheetChanged()
    End Sub
    Partial Private Sub OnFrequencyChanging(value As String)
    End Sub
    Partial Private Sub OnFrequencyChanged()
    End Sub
    Partial Private Sub OnAllowancesChanging(value As String)
    End Sub
    Partial Private Sub OnAllowancesChanged()
    End Sub
    Partial Private Sub OnDeductionsChanging(value As String)
    End Sub
    Partial Private Sub OnDeductionsChanged()
    End Sub
    Partial Private Sub OnGroupRatesChanging(value As String)
    End Sub
    Partial Private Sub OnGroupRatesChanged()
    End Sub
    Partial Private Sub OnVariablesChanging(value As String)
    End Sub
    Partial Private Sub OnVariablesChanged()
    End Sub
    Partial Private Sub OnRemarksChanging(value As String)
    End Sub
    Partial Private Sub OnRemarksChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SheetID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property SheetID() As Integer
			Get
				Return Me._SheetID
			End Get
			Set
				If ((Me._SheetID = value)  _
							= false) Then
					Me.OnSheetIDChanging(value)
					Me.SendPropertyChanging
					Me._SheetID = value
					Me.SendPropertyChanged("SheetID")
					Me.OnSheetIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PaySheet", DbType:="VarChar(50)")>  _
		Public Property PaySheet() As String
			Get
				Return Me._PaySheet
			End Get
			Set
				If (String.Equals(Me._PaySheet, value) = false) Then
					Me.OnPaySheetChanging(value)
					Me.SendPropertyChanging
					Me._PaySheet = value
					Me.SendPropertyChanged("PaySheet")
					Me.OnPaySheetChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Frequency", DbType:="VarChar(20)")>  _
		Public Property Frequency() As String
			Get
				Return Me._Frequency
			End Get
			Set
				If (String.Equals(Me._Frequency, value) = false) Then
					Me.OnFrequencyChanging(value)
					Me.SendPropertyChanging
					Me._Frequency = value
					Me.SendPropertyChanged("Frequency")
					Me.OnFrequencyChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Allowances", DbType:="VarChar(1000)")>  _
		Public Property Allowances() As String
			Get
				Return Me._Allowances
			End Get
			Set
				If (String.Equals(Me._Allowances, value) = false) Then
					Me.OnAllowancesChanging(value)
					Me.SendPropertyChanging
					Me._Allowances = value
					Me.SendPropertyChanged("Allowances")
					Me.OnAllowancesChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Deductions", DbType:="VarChar(1000)")>  _
		Public Property Deductions() As String
			Get
				Return Me._Deductions
			End Get
			Set
				If (String.Equals(Me._Deductions, value) = false) Then
					Me.OnDeductionsChanging(value)
					Me.SendPropertyChanging
					Me._Deductions = value
					Me.SendPropertyChanged("Deductions")
					Me.OnDeductionsChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GroupRates", DbType:="VarChar(1000)")>  _
		Public Property GroupRates() As String
			Get
				Return Me._GroupRates
			End Get
			Set
				If (String.Equals(Me._GroupRates, value) = false) Then
					Me.OnGroupRatesChanging(value)
					Me.SendPropertyChanging
					Me._GroupRates = value
					Me.SendPropertyChanged("GroupRates")
					Me.OnGroupRatesChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Variables", DbType:="VarChar(1000)")>  _
		Public Property Variables() As String
			Get
				Return Me._Variables
			End Get
			Set
				If (String.Equals(Me._Variables, value) = false) Then
					Me.OnVariablesChanging(value)
					Me.SendPropertyChanging
					Me._Variables = value
					Me.SendPropertyChanged("Variables")
					Me.OnVariablesChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Remarks", DbType:="VarChar(255)")>  _
		Public Property Remarks() As String
			Get
				Return Me._Remarks
			End Get
			Set
				If (String.Equals(Me._Remarks, value) = false) Then
					Me.OnRemarksChanging(value)
					Me.SendPropertyChanging
					Me._Remarks = value
					Me.SendPropertyChanged("Remarks")
					Me.OnRemarksChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.PurCategories")>  _
	Partial Public Class PurCategory
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _CategoryID As Integer
		
		Private _FamilyID As System.Nullable(Of Integer)
		
		Private _CategoryName As String
		
		Private _Description As String
		
		Private _Remarks As String
		
		Private _Tag As String
		
		Private _Deleted As System.Nullable(Of Byte)
		
		Private _Active As System.Nullable(Of Byte)
		
		Private _Submitby As String
		
		Private _SubmitOn As System.Nullable(Of Date)
		
		Private _ModifiedBy As String
		
		Private _ModifiedOn As System.Nullable(Of Date)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCategoryIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnCategoryIDChanged()
    End Sub
    Partial Private Sub OnFamilyIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFamilyIDChanged()
    End Sub
    Partial Private Sub OnCategoryNameChanging(value As String)
    End Sub
    Partial Private Sub OnCategoryNameChanged()
    End Sub
    Partial Private Sub OnDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnDescriptionChanged()
    End Sub
    Partial Private Sub OnRemarksChanging(value As String)
    End Sub
    Partial Private Sub OnRemarksChanged()
    End Sub
    Partial Private Sub OnTagChanging(value As String)
    End Sub
    Partial Private Sub OnTagChanged()
    End Sub
    Partial Private Sub OnDeletedChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnDeletedChanged()
    End Sub
    Partial Private Sub OnActiveChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnActiveChanged()
    End Sub
    Partial Private Sub OnSubmitbyChanging(value As String)
    End Sub
    Partial Private Sub OnSubmitbyChanged()
    End Sub
    Partial Private Sub OnSubmitOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSubmitOnChanged()
    End Sub
    Partial Private Sub OnModifiedByChanging(value As String)
    End Sub
    Partial Private Sub OnModifiedByChanged()
    End Sub
    Partial Private Sub OnModifiedOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnModifiedOnChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CategoryID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property CategoryID() As Integer
			Get
				Return Me._CategoryID
			End Get
			Set
				If ((Me._CategoryID = value)  _
							= false) Then
					Me.OnCategoryIDChanging(value)
					Me.SendPropertyChanging
					Me._CategoryID = value
					Me.SendPropertyChanged("CategoryID")
					Me.OnCategoryIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FamilyID", DbType:="Int")>  _
		Public Property FamilyID() As System.Nullable(Of Integer)
			Get
				Return Me._FamilyID
			End Get
			Set
				If (Me._FamilyID.Equals(value) = false) Then
					Me.OnFamilyIDChanging(value)
					Me.SendPropertyChanging
					Me._FamilyID = value
					Me.SendPropertyChanged("FamilyID")
					Me.OnFamilyIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CategoryName", DbType:="VarChar(64)")>  _
		Public Property CategoryName() As String
			Get
				Return Me._CategoryName
			End Get
			Set
				If (String.Equals(Me._CategoryName, value) = false) Then
					Me.OnCategoryNameChanging(value)
					Me.SendPropertyChanging
					Me._CategoryName = value
					Me.SendPropertyChanged("CategoryName")
					Me.OnCategoryNameChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="VarChar(64)")>  _
		Public Property Description() As String
			Get
				Return Me._Description
			End Get
			Set
				If (String.Equals(Me._Description, value) = false) Then
					Me.OnDescriptionChanging(value)
					Me.SendPropertyChanging
					Me._Description = value
					Me.SendPropertyChanged("Description")
					Me.OnDescriptionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Remarks", DbType:="VarChar(256)")>  _
		Public Property Remarks() As String
			Get
				Return Me._Remarks
			End Get
			Set
				If (String.Equals(Me._Remarks, value) = false) Then
					Me.OnRemarksChanging(value)
					Me.SendPropertyChanging
					Me._Remarks = value
					Me.SendPropertyChanged("Remarks")
					Me.OnRemarksChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tag", DbType:="VarChar(256)")>  _
		Public Property Tag() As String
			Get
				Return Me._Tag
			End Get
			Set
				If (String.Equals(Me._Tag, value) = false) Then
					Me.OnTagChanging(value)
					Me.SendPropertyChanging
					Me._Tag = value
					Me.SendPropertyChanged("Tag")
					Me.OnTagChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Deleted", DbType:="TinyInt")>  _
		Public Property Deleted() As System.Nullable(Of Byte)
			Get
				Return Me._Deleted
			End Get
			Set
				If (Me._Deleted.Equals(value) = false) Then
					Me.OnDeletedChanging(value)
					Me.SendPropertyChanging
					Me._Deleted = value
					Me.SendPropertyChanged("Deleted")
					Me.OnDeletedChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Active", DbType:="TinyInt")>  _
		Public Property Active() As System.Nullable(Of Byte)
			Get
				Return Me._Active
			End Get
			Set
				If (Me._Active.Equals(value) = false) Then
					Me.OnActiveChanging(value)
					Me.SendPropertyChanging
					Me._Active = value
					Me.SendPropertyChanged("Active")
					Me.OnActiveChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Submitby", DbType:="VarChar(32)")>  _
		Public Property Submitby() As String
			Get
				Return Me._Submitby
			End Get
			Set
				If (String.Equals(Me._Submitby, value) = false) Then
					Me.OnSubmitbyChanging(value)
					Me.SendPropertyChanging
					Me._Submitby = value
					Me.SendPropertyChanged("Submitby")
					Me.OnSubmitbyChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubmitOn", DbType:="DateTime")>  _
		Public Property SubmitOn() As System.Nullable(Of Date)
			Get
				Return Me._SubmitOn
			End Get
			Set
				If (Me._SubmitOn.Equals(value) = false) Then
					Me.OnSubmitOnChanging(value)
					Me.SendPropertyChanging
					Me._SubmitOn = value
					Me.SendPropertyChanged("SubmitOn")
					Me.OnSubmitOnChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedBy", DbType:="VarChar(32)")>  _
		Public Property ModifiedBy() As String
			Get
				Return Me._ModifiedBy
			End Get
			Set
				If (String.Equals(Me._ModifiedBy, value) = false) Then
					Me.OnModifiedByChanging(value)
					Me.SendPropertyChanging
					Me._ModifiedBy = value
					Me.SendPropertyChanged("ModifiedBy")
					Me.OnModifiedByChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedOn", DbType:="DateTime")>  _
		Public Property ModifiedOn() As System.Nullable(Of Date)
			Get
				Return Me._ModifiedOn
			End Get
			Set
				If (Me._ModifiedOn.Equals(value) = false) Then
					Me.OnModifiedOnChanging(value)
					Me.SendPropertyChanging
					Me._ModifiedOn = value
					Me.SendPropertyChanged("ModifiedOn")
					Me.OnModifiedOnChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.PurFamilies")>  _
	Partial Public Class PurFamily
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _FamilyID As Integer
		
		Private _FamilyName As String
		
		Private _Description As String
		
		Private _Remarks As String
		
		Private _Tag As String
		
		Private _Deleted As System.Nullable(Of Byte)
		
		Private _Active As System.Nullable(Of Byte)
		
		Private _Submitby As String
		
		Private _SubmitOn As System.Nullable(Of Date)
		
		Private _ModifiedBy As String
		
		Private _ModifiedOn As System.Nullable(Of Date)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnFamilyIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnFamilyIDChanged()
    End Sub
    Partial Private Sub OnFamilyNameChanging(value As String)
    End Sub
    Partial Private Sub OnFamilyNameChanged()
    End Sub
    Partial Private Sub OnDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnDescriptionChanged()
    End Sub
    Partial Private Sub OnRemarksChanging(value As String)
    End Sub
    Partial Private Sub OnRemarksChanged()
    End Sub
    Partial Private Sub OnTagChanging(value As String)
    End Sub
    Partial Private Sub OnTagChanged()
    End Sub
    Partial Private Sub OnDeletedChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnDeletedChanged()
    End Sub
    Partial Private Sub OnActiveChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnActiveChanged()
    End Sub
    Partial Private Sub OnSubmitbyChanging(value As String)
    End Sub
    Partial Private Sub OnSubmitbyChanged()
    End Sub
    Partial Private Sub OnSubmitOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSubmitOnChanged()
    End Sub
    Partial Private Sub OnModifiedByChanging(value As String)
    End Sub
    Partial Private Sub OnModifiedByChanged()
    End Sub
    Partial Private Sub OnModifiedOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnModifiedOnChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FamilyID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property FamilyID() As Integer
			Get
				Return Me._FamilyID
			End Get
			Set
				If ((Me._FamilyID = value)  _
							= false) Then
					Me.OnFamilyIDChanging(value)
					Me.SendPropertyChanging
					Me._FamilyID = value
					Me.SendPropertyChanged("FamilyID")
					Me.OnFamilyIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FamilyName", DbType:="VarChar(50)")>  _
		Public Property FamilyName() As String
			Get
				Return Me._FamilyName
			End Get
			Set
				If (String.Equals(Me._FamilyName, value) = false) Then
					Me.OnFamilyNameChanging(value)
					Me.SendPropertyChanging
					Me._FamilyName = value
					Me.SendPropertyChanged("FamilyName")
					Me.OnFamilyNameChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="VarChar(50)")>  _
		Public Property Description() As String
			Get
				Return Me._Description
			End Get
			Set
				If (String.Equals(Me._Description, value) = false) Then
					Me.OnDescriptionChanging(value)
					Me.SendPropertyChanging
					Me._Description = value
					Me.SendPropertyChanged("Description")
					Me.OnDescriptionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Remarks", DbType:="VarChar(255)")>  _
		Public Property Remarks() As String
			Get
				Return Me._Remarks
			End Get
			Set
				If (String.Equals(Me._Remarks, value) = false) Then
					Me.OnRemarksChanging(value)
					Me.SendPropertyChanging
					Me._Remarks = value
					Me.SendPropertyChanged("Remarks")
					Me.OnRemarksChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tag", DbType:="VarChar(255)")>  _
		Public Property Tag() As String
			Get
				Return Me._Tag
			End Get
			Set
				If (String.Equals(Me._Tag, value) = false) Then
					Me.OnTagChanging(value)
					Me.SendPropertyChanging
					Me._Tag = value
					Me.SendPropertyChanged("Tag")
					Me.OnTagChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Deleted", DbType:="TinyInt")>  _
		Public Property Deleted() As System.Nullable(Of Byte)
			Get
				Return Me._Deleted
			End Get
			Set
				If (Me._Deleted.Equals(value) = false) Then
					Me.OnDeletedChanging(value)
					Me.SendPropertyChanging
					Me._Deleted = value
					Me.SendPropertyChanged("Deleted")
					Me.OnDeletedChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Active", DbType:="TinyInt")>  _
		Public Property Active() As System.Nullable(Of Byte)
			Get
				Return Me._Active
			End Get
			Set
				If (Me._Active.Equals(value) = false) Then
					Me.OnActiveChanging(value)
					Me.SendPropertyChanging
					Me._Active = value
					Me.SendPropertyChanged("Active")
					Me.OnActiveChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Submitby", DbType:="VarChar(50)")>  _
		Public Property Submitby() As String
			Get
				Return Me._Submitby
			End Get
			Set
				If (String.Equals(Me._Submitby, value) = false) Then
					Me.OnSubmitbyChanging(value)
					Me.SendPropertyChanging
					Me._Submitby = value
					Me.SendPropertyChanged("Submitby")
					Me.OnSubmitbyChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubmitOn", DbType:="DateTime")>  _
		Public Property SubmitOn() As System.Nullable(Of Date)
			Get
				Return Me._SubmitOn
			End Get
			Set
				If (Me._SubmitOn.Equals(value) = false) Then
					Me.OnSubmitOnChanging(value)
					Me.SendPropertyChanging
					Me._SubmitOn = value
					Me.SendPropertyChanged("SubmitOn")
					Me.OnSubmitOnChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedBy", DbType:="VarChar(50)")>  _
		Public Property ModifiedBy() As String
			Get
				Return Me._ModifiedBy
			End Get
			Set
				If (String.Equals(Me._ModifiedBy, value) = false) Then
					Me.OnModifiedByChanging(value)
					Me.SendPropertyChanging
					Me._ModifiedBy = value
					Me.SendPropertyChanged("ModifiedBy")
					Me.OnModifiedByChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedOn", DbType:="DateTime")>  _
		Public Property ModifiedOn() As System.Nullable(Of Date)
			Get
				Return Me._ModifiedOn
			End Get
			Set
				If (Me._ModifiedOn.Equals(value) = false) Then
					Me.OnModifiedOnChanging(value)
					Me.SendPropertyChanging
					Me._ModifiedOn = value
					Me.SendPropertyChanged("ModifiedOn")
					Me.OnModifiedOnChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.PurPartners")>  _
	Partial Public Class PurPartner
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _PartnerID As Integer
		
		Private _Code As String
		
		Private _PartnerName As String
		
		Private _ContactName As String
		
		Private _Address As String
		
		Private _State As String
		
		Private _Phone As String
		
		Private _Phone2 As String
		
		Private _Email As String
		
		Private _Fax As String
		
		Private _Remark As String
		
		Private _Type As System.Nullable(Of Char)
		
		Private _Deleted As System.Nullable(Of Byte)
		
		Private _Active As System.Nullable(Of Byte)
		
		Private _Submitby As String
		
		Private _SubmitOn As System.Nullable(Of Date)
		
		Private _ModifiedBy As String
		
		Private _ModifiedOn As System.Nullable(Of Date)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnPartnerIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnPartnerIDChanged()
    End Sub
    Partial Private Sub OnCodeChanging(value As String)
    End Sub
    Partial Private Sub OnCodeChanged()
    End Sub
    Partial Private Sub OnPartnerNameChanging(value As String)
    End Sub
    Partial Private Sub OnPartnerNameChanged()
    End Sub
    Partial Private Sub OnContactNameChanging(value As String)
    End Sub
    Partial Private Sub OnContactNameChanged()
    End Sub
    Partial Private Sub OnAddressChanging(value As String)
    End Sub
    Partial Private Sub OnAddressChanged()
    End Sub
    Partial Private Sub OnStateChanging(value As String)
    End Sub
    Partial Private Sub OnStateChanged()
    End Sub
    Partial Private Sub OnPhoneChanging(value As String)
    End Sub
    Partial Private Sub OnPhoneChanged()
    End Sub
    Partial Private Sub OnPhone2Changing(value As String)
    End Sub
    Partial Private Sub OnPhone2Changed()
    End Sub
    Partial Private Sub OnEmailChanging(value As String)
    End Sub
    Partial Private Sub OnEmailChanged()
    End Sub
    Partial Private Sub OnFaxChanging(value As String)
    End Sub
    Partial Private Sub OnFaxChanged()
    End Sub
    Partial Private Sub OnRemarkChanging(value As String)
    End Sub
    Partial Private Sub OnRemarkChanged()
    End Sub
    Partial Private Sub OnTypeChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnTypeChanged()
    End Sub
    Partial Private Sub OnDeletedChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnDeletedChanged()
    End Sub
    Partial Private Sub OnActiveChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnActiveChanged()
    End Sub
    Partial Private Sub OnSubmitbyChanging(value As String)
    End Sub
    Partial Private Sub OnSubmitbyChanged()
    End Sub
    Partial Private Sub OnSubmitOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSubmitOnChanged()
    End Sub
    Partial Private Sub OnModifiedByChanging(value As String)
    End Sub
    Partial Private Sub OnModifiedByChanged()
    End Sub
    Partial Private Sub OnModifiedOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnModifiedOnChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PartnerID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property PartnerID() As Integer
			Get
				Return Me._PartnerID
			End Get
			Set
				If ((Me._PartnerID = value)  _
							= false) Then
					Me.OnPartnerIDChanging(value)
					Me.SendPropertyChanging
					Me._PartnerID = value
					Me.SendPropertyChanged("PartnerID")
					Me.OnPartnerIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Code", DbType:="VarChar(32) NOT NULL", CanBeNull:=false)>  _
		Public Property Code() As String
			Get
				Return Me._Code
			End Get
			Set
				If (String.Equals(Me._Code, value) = false) Then
					Me.OnCodeChanging(value)
					Me.SendPropertyChanging
					Me._Code = value
					Me.SendPropertyChanged("Code")
					Me.OnCodeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PartnerName", DbType:="VarChar(32) NOT NULL", CanBeNull:=false)>  _
		Public Property PartnerName() As String
			Get
				Return Me._PartnerName
			End Get
			Set
				If (String.Equals(Me._PartnerName, value) = false) Then
					Me.OnPartnerNameChanging(value)
					Me.SendPropertyChanging
					Me._PartnerName = value
					Me.SendPropertyChanged("PartnerName")
					Me.OnPartnerNameChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ContactName", DbType:="VarChar(256)")>  _
		Public Property ContactName() As String
			Get
				Return Me._ContactName
			End Get
			Set
				If (String.Equals(Me._ContactName, value) = false) Then
					Me.OnContactNameChanging(value)
					Me.SendPropertyChanging
					Me._ContactName = value
					Me.SendPropertyChanged("ContactName")
					Me.OnContactNameChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address", DbType:="VarChar(256)")>  _
		Public Property Address() As String
			Get
				Return Me._Address
			End Get
			Set
				If (String.Equals(Me._Address, value) = false) Then
					Me.OnAddressChanging(value)
					Me.SendPropertyChanging
					Me._Address = value
					Me.SendPropertyChanged("Address")
					Me.OnAddressChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_State", DbType:="VarChar(32)")>  _
		Public Property State() As String
			Get
				Return Me._State
			End Get
			Set
				If (String.Equals(Me._State, value) = false) Then
					Me.OnStateChanging(value)
					Me.SendPropertyChanging
					Me._State = value
					Me.SendPropertyChanged("State")
					Me.OnStateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Phone", DbType:="VarChar(32)")>  _
		Public Property Phone() As String
			Get
				Return Me._Phone
			End Get
			Set
				If (String.Equals(Me._Phone, value) = false) Then
					Me.OnPhoneChanging(value)
					Me.SendPropertyChanging
					Me._Phone = value
					Me.SendPropertyChanged("Phone")
					Me.OnPhoneChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Phone2", DbType:="VarChar(32)")>  _
		Public Property Phone2() As String
			Get
				Return Me._Phone2
			End Get
			Set
				If (String.Equals(Me._Phone2, value) = false) Then
					Me.OnPhone2Changing(value)
					Me.SendPropertyChanging
					Me._Phone2 = value
					Me.SendPropertyChanged("Phone2")
					Me.OnPhone2Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Email", DbType:="VarChar(32)")>  _
		Public Property Email() As String
			Get
				Return Me._Email
			End Get
			Set
				If (String.Equals(Me._Email, value) = false) Then
					Me.OnEmailChanging(value)
					Me.SendPropertyChanging
					Me._Email = value
					Me.SendPropertyChanged("Email")
					Me.OnEmailChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fax", DbType:="VarChar(32)")>  _
		Public Property Fax() As String
			Get
				Return Me._Fax
			End Get
			Set
				If (String.Equals(Me._Fax, value) = false) Then
					Me.OnFaxChanging(value)
					Me.SendPropertyChanging
					Me._Fax = value
					Me.SendPropertyChanged("Fax")
					Me.OnFaxChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Remark", DbType:="VarChar(256)")>  _
		Public Property Remark() As String
			Get
				Return Me._Remark
			End Get
			Set
				If (String.Equals(Me._Remark, value) = false) Then
					Me.OnRemarkChanging(value)
					Me.SendPropertyChanging
					Me._Remark = value
					Me.SendPropertyChanged("Remark")
					Me.OnRemarkChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Type", DbType:="Char(1)")>  _
		Public Property Type() As System.Nullable(Of Char)
			Get
				Return Me._Type
			End Get
			Set
				If (Me._Type.Equals(value) = false) Then
					Me.OnTypeChanging(value)
					Me.SendPropertyChanging
					Me._Type = value
					Me.SendPropertyChanged("Type")
					Me.OnTypeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Deleted", DbType:="TinyInt")>  _
		Public Property Deleted() As System.Nullable(Of Byte)
			Get
				Return Me._Deleted
			End Get
			Set
				If (Me._Deleted.Equals(value) = false) Then
					Me.OnDeletedChanging(value)
					Me.SendPropertyChanging
					Me._Deleted = value
					Me.SendPropertyChanged("Deleted")
					Me.OnDeletedChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Active", DbType:="TinyInt")>  _
		Public Property Active() As System.Nullable(Of Byte)
			Get
				Return Me._Active
			End Get
			Set
				If (Me._Active.Equals(value) = false) Then
					Me.OnActiveChanging(value)
					Me.SendPropertyChanging
					Me._Active = value
					Me.SendPropertyChanged("Active")
					Me.OnActiveChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Submitby", DbType:="VarChar(50)")>  _
		Public Property Submitby() As String
			Get
				Return Me._Submitby
			End Get
			Set
				If (String.Equals(Me._Submitby, value) = false) Then
					Me.OnSubmitbyChanging(value)
					Me.SendPropertyChanging
					Me._Submitby = value
					Me.SendPropertyChanged("Submitby")
					Me.OnSubmitbyChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubmitOn", DbType:="DateTime")>  _
		Public Property SubmitOn() As System.Nullable(Of Date)
			Get
				Return Me._SubmitOn
			End Get
			Set
				If (Me._SubmitOn.Equals(value) = false) Then
					Me.OnSubmitOnChanging(value)
					Me.SendPropertyChanging
					Me._SubmitOn = value
					Me.SendPropertyChanged("SubmitOn")
					Me.OnSubmitOnChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedBy", DbType:="VarChar(50)")>  _
		Public Property ModifiedBy() As String
			Get
				Return Me._ModifiedBy
			End Get
			Set
				If (String.Equals(Me._ModifiedBy, value) = false) Then
					Me.OnModifiedByChanging(value)
					Me.SendPropertyChanging
					Me._ModifiedBy = value
					Me.SendPropertyChanged("ModifiedBy")
					Me.OnModifiedByChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedOn", DbType:="DateTime")>  _
		Public Property ModifiedOn() As System.Nullable(Of Date)
			Get
				Return Me._ModifiedOn
			End Get
			Set
				If (Me._ModifiedOn.Equals(value) = false) Then
					Me.OnModifiedOnChanging(value)
					Me.SendPropertyChanging
					Me._ModifiedOn = value
					Me.SendPropertyChanged("ModifiedOn")
					Me.OnModifiedOnChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.PurProducts")>  _
	Partial Public Class PurProduct
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _ProductID As Integer
		
		Private _CategoryID As System.Nullable(Of Integer)
		
		Private _ProductNo As String
		
		Private _ProductName As String
		
		Private _Quantity As System.Nullable(Of Long)
		
		Private _UnitPrice As System.Nullable(Of Decimal)
		
		Private _ReorderQty As System.Nullable(Of Long)
		
		Private _ReorderLevel As System.Nullable(Of Long)
		
		Private _Remarks As String
		
		Private _Tag As String
		
		Private _OptionType As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnProductIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnProductIDChanged()
    End Sub
    Partial Private Sub OnCategoryIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCategoryIDChanged()
    End Sub
    Partial Private Sub OnProductNoChanging(value As String)
    End Sub
    Partial Private Sub OnProductNoChanged()
    End Sub
    Partial Private Sub OnProductNameChanging(value As String)
    End Sub
    Partial Private Sub OnProductNameChanged()
    End Sub
    Partial Private Sub OnQuantityChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnQuantityChanged()
    End Sub
    Partial Private Sub OnUnitPriceChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnUnitPriceChanged()
    End Sub
    Partial Private Sub OnReorderQtyChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnReorderQtyChanged()
    End Sub
    Partial Private Sub OnReorderLevelChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnReorderLevelChanged()
    End Sub
    Partial Private Sub OnRemarksChanging(value As String)
    End Sub
    Partial Private Sub OnRemarksChanged()
    End Sub
    Partial Private Sub OnTagChanging(value As String)
    End Sub
    Partial Private Sub OnTagChanged()
    End Sub
    Partial Private Sub OnOptionTypeChanging(value As String)
    End Sub
    Partial Private Sub OnOptionTypeChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProductID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property ProductID() As Integer
			Get
				Return Me._ProductID
			End Get
			Set
				If ((Me._ProductID = value)  _
							= false) Then
					Me.OnProductIDChanging(value)
					Me.SendPropertyChanging
					Me._ProductID = value
					Me.SendPropertyChanged("ProductID")
					Me.OnProductIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CategoryID", DbType:="Int")>  _
		Public Property CategoryID() As System.Nullable(Of Integer)
			Get
				Return Me._CategoryID
			End Get
			Set
				If (Me._CategoryID.Equals(value) = false) Then
					Me.OnCategoryIDChanging(value)
					Me.SendPropertyChanging
					Me._CategoryID = value
					Me.SendPropertyChanged("CategoryID")
					Me.OnCategoryIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProductNo", DbType:="VarChar(32)")>  _
		Public Property ProductNo() As String
			Get
				Return Me._ProductNo
			End Get
			Set
				If (String.Equals(Me._ProductNo, value) = false) Then
					Me.OnProductNoChanging(value)
					Me.SendPropertyChanging
					Me._ProductNo = value
					Me.SendPropertyChanged("ProductNo")
					Me.OnProductNoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProductName", DbType:="VarChar(256)")>  _
		Public Property ProductName() As String
			Get
				Return Me._ProductName
			End Get
			Set
				If (String.Equals(Me._ProductName, value) = false) Then
					Me.OnProductNameChanging(value)
					Me.SendPropertyChanging
					Me._ProductName = value
					Me.SendPropertyChanged("ProductName")
					Me.OnProductNameChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Quantity", DbType:="BigInt")>  _
		Public Property Quantity() As System.Nullable(Of Long)
			Get
				Return Me._Quantity
			End Get
			Set
				If (Me._Quantity.Equals(value) = false) Then
					Me.OnQuantityChanging(value)
					Me.SendPropertyChanging
					Me._Quantity = value
					Me.SendPropertyChanged("Quantity")
					Me.OnQuantityChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UnitPrice", DbType:="Money")>  _
		Public Property UnitPrice() As System.Nullable(Of Decimal)
			Get
				Return Me._UnitPrice
			End Get
			Set
				If (Me._UnitPrice.Equals(value) = false) Then
					Me.OnUnitPriceChanging(value)
					Me.SendPropertyChanging
					Me._UnitPrice = value
					Me.SendPropertyChanged("UnitPrice")
					Me.OnUnitPriceChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ReorderQty", DbType:="BigInt")>  _
		Public Property ReorderQty() As System.Nullable(Of Long)
			Get
				Return Me._ReorderQty
			End Get
			Set
				If (Me._ReorderQty.Equals(value) = false) Then
					Me.OnReorderQtyChanging(value)
					Me.SendPropertyChanging
					Me._ReorderQty = value
					Me.SendPropertyChanged("ReorderQty")
					Me.OnReorderQtyChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ReorderLevel", DbType:="BigInt")>  _
		Public Property ReorderLevel() As System.Nullable(Of Long)
			Get
				Return Me._ReorderLevel
			End Get
			Set
				If (Me._ReorderLevel.Equals(value) = false) Then
					Me.OnReorderLevelChanging(value)
					Me.SendPropertyChanging
					Me._ReorderLevel = value
					Me.SendPropertyChanged("ReorderLevel")
					Me.OnReorderLevelChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Remarks", DbType:="VarChar(256)")>  _
		Public Property Remarks() As String
			Get
				Return Me._Remarks
			End Get
			Set
				If (String.Equals(Me._Remarks, value) = false) Then
					Me.OnRemarksChanging(value)
					Me.SendPropertyChanging
					Me._Remarks = value
					Me.SendPropertyChanged("Remarks")
					Me.OnRemarksChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tag", DbType:="VarChar(256)")>  _
		Public Property Tag() As String
			Get
				Return Me._Tag
			End Get
			Set
				If (String.Equals(Me._Tag, value) = false) Then
					Me.OnTagChanging(value)
					Me.SendPropertyChanging
					Me._Tag = value
					Me.SendPropertyChanged("Tag")
					Me.OnTagChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OptionType", DbType:="VarChar(256)")>  _
		Public Property OptionType() As String
			Get
				Return Me._OptionType
			End Get
			Set
				If (String.Equals(Me._OptionType, value) = false) Then
					Me.OnOptionTypeChanging(value)
					Me.SendPropertyChanging
					Me._OptionType = value
					Me.SendPropertyChanged("OptionType")
					Me.OnOptionTypeChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.VPayAllowance")>  _
	Partial Public Class VPayAllowance
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _AllowID As Integer
		
		Private _AllowName As String
		
		Private _Value1 As System.Nullable(Of Decimal)
		
		Private _Descrption As String
		
		Private _Tag As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnAllowIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnAllowIDChanged()
    End Sub
    Partial Private Sub OnAllowNameChanging(value As String)
    End Sub
    Partial Private Sub OnAllowNameChanged()
    End Sub
    Partial Private Sub OnValue1Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnValue1Changed()
    End Sub
    Partial Private Sub OnDescrptionChanging(value As String)
    End Sub
    Partial Private Sub OnDescrptionChanged()
    End Sub
    Partial Private Sub OnTagChanging(value As String)
    End Sub
    Partial Private Sub OnTagChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AllowID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property AllowID() As Integer
			Get
				Return Me._AllowID
			End Get
			Set
				If ((Me._AllowID = value)  _
							= false) Then
					Me.OnAllowIDChanging(value)
					Me.SendPropertyChanging
					Me._AllowID = value
					Me.SendPropertyChanged("AllowID")
					Me.OnAllowIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AllowName", DbType:="VarChar(150)")>  _
		Public Property AllowName() As String
			Get
				Return Me._AllowName
			End Get
			Set
				If (String.Equals(Me._AllowName, value) = false) Then
					Me.OnAllowNameChanging(value)
					Me.SendPropertyChanging
					Me._AllowName = value
					Me.SendPropertyChanged("AllowName")
					Me.OnAllowNameChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Value1", DbType:="Money")>  _
		Public Property Value1() As System.Nullable(Of Decimal)
			Get
				Return Me._Value1
			End Get
			Set
				If (Me._Value1.Equals(value) = false) Then
					Me.OnValue1Changing(value)
					Me.SendPropertyChanging
					Me._Value1 = value
					Me.SendPropertyChanged("Value1")
					Me.OnValue1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descrption", DbType:="VarChar(255)")>  _
		Public Property Descrption() As String
			Get
				Return Me._Descrption
			End Get
			Set
				If (String.Equals(Me._Descrption, value) = false) Then
					Me.OnDescrptionChanging(value)
					Me.SendPropertyChanging
					Me._Descrption = value
					Me.SendPropertyChanged("Descrption")
					Me.OnDescrptionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tag", DbType:="VarChar(255)")>  _
		Public Property Tag() As String
			Get
				Return Me._Tag
			End Get
			Set
				If (String.Equals(Me._Tag, value) = false) Then
					Me.OnTagChanging(value)
					Me.SendPropertyChanging
					Me._Tag = value
					Me.SendPropertyChanged("Tag")
					Me.OnTagChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.VPayDeductions")>  _
	Partial Public Class VPayDeduction
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _DedID As Integer
		
		Private _DedName As String
		
		Private _Value1 As System.Nullable(Of Decimal)
		
		Private _Value2 As System.Nullable(Of Decimal)
		
		Private _Description As String
		
		Private _Tag As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnDedIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnDedIDChanged()
    End Sub
    Partial Private Sub OnDedNameChanging(value As String)
    End Sub
    Partial Private Sub OnDedNameChanged()
    End Sub
    Partial Private Sub OnValue1Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnValue1Changed()
    End Sub
    Partial Private Sub OnValue2Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnValue2Changed()
    End Sub
    Partial Private Sub OnDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnDescriptionChanged()
    End Sub
    Partial Private Sub OnTagChanging(value As String)
    End Sub
    Partial Private Sub OnTagChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DedID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property DedID() As Integer
			Get
				Return Me._DedID
			End Get
			Set
				If ((Me._DedID = value)  _
							= false) Then
					Me.OnDedIDChanging(value)
					Me.SendPropertyChanging
					Me._DedID = value
					Me.SendPropertyChanged("DedID")
					Me.OnDedIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DedName", DbType:="VarChar(150)")>  _
		Public Property DedName() As String
			Get
				Return Me._DedName
			End Get
			Set
				If (String.Equals(Me._DedName, value) = false) Then
					Me.OnDedNameChanging(value)
					Me.SendPropertyChanging
					Me._DedName = value
					Me.SendPropertyChanged("DedName")
					Me.OnDedNameChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Value1", DbType:="Money")>  _
		Public Property Value1() As System.Nullable(Of Decimal)
			Get
				Return Me._Value1
			End Get
			Set
				If (Me._Value1.Equals(value) = false) Then
					Me.OnValue1Changing(value)
					Me.SendPropertyChanging
					Me._Value1 = value
					Me.SendPropertyChanged("Value1")
					Me.OnValue1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Value2", DbType:="Money")>  _
		Public Property Value2() As System.Nullable(Of Decimal)
			Get
				Return Me._Value2
			End Get
			Set
				If (Me._Value2.Equals(value) = false) Then
					Me.OnValue2Changing(value)
					Me.SendPropertyChanging
					Me._Value2 = value
					Me.SendPropertyChanged("Value2")
					Me.OnValue2Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="VarChar(255)")>  _
		Public Property Description() As String
			Get
				Return Me._Description
			End Get
			Set
				If (String.Equals(Me._Description, value) = false) Then
					Me.OnDescriptionChanging(value)
					Me.SendPropertyChanging
					Me._Description = value
					Me.SendPropertyChanged("Description")
					Me.OnDescriptionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tag", DbType:="VarChar(255)")>  _
		Public Property Tag() As String
			Get
				Return Me._Tag
			End Get
			Set
				If (String.Equals(Me._Tag, value) = false) Then
					Me.OnTagChanging(value)
					Me.SendPropertyChanging
					Me._Tag = value
					Me.SendPropertyChanged("Tag")
					Me.OnTagChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.HRReferees")>  _
	Partial Public Class HRReferee
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _RefereeID As Integer
		
		Private _EmployeeNo As String
		
		Private _RefName As String
		
		Private _Address As String
		
		Private _Telephone As String
		
		Private _Email As String
		
		Private _Tag As String
		
		Private _Deleted As System.Nullable(Of Byte)
		
		Private _Active As System.Nullable(Of Byte)
		
		Private _Submitby As String
		
		Private _SubmitOn As System.Nullable(Of Date)
		
		Private _ModifiedBy As String
		
		Private _ModifiedOn As System.Nullable(Of Date)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnRefereeIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnRefereeIDChanged()
    End Sub
    Partial Private Sub OnEmployeeNoChanging(value As String)
    End Sub
    Partial Private Sub OnEmployeeNoChanged()
    End Sub
    Partial Private Sub OnRefNameChanging(value As String)
    End Sub
    Partial Private Sub OnRefNameChanged()
    End Sub
    Partial Private Sub OnAddressChanging(value As String)
    End Sub
    Partial Private Sub OnAddressChanged()
    End Sub
    Partial Private Sub OnTelephoneChanging(value As String)
    End Sub
    Partial Private Sub OnTelephoneChanged()
    End Sub
    Partial Private Sub OnEmailChanging(value As String)
    End Sub
    Partial Private Sub OnEmailChanged()
    End Sub
    Partial Private Sub OnTagChanging(value As String)
    End Sub
    Partial Private Sub OnTagChanged()
    End Sub
    Partial Private Sub OnDeletedChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnDeletedChanged()
    End Sub
    Partial Private Sub OnActiveChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnActiveChanged()
    End Sub
    Partial Private Sub OnSubmitbyChanging(value As String)
    End Sub
    Partial Private Sub OnSubmitbyChanged()
    End Sub
    Partial Private Sub OnSubmitOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSubmitOnChanged()
    End Sub
    Partial Private Sub OnModifiedByChanging(value As String)
    End Sub
    Partial Private Sub OnModifiedByChanged()
    End Sub
    Partial Private Sub OnModifiedOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnModifiedOnChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RefereeID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property RefereeID() As Integer
			Get
				Return Me._RefereeID
			End Get
			Set
				If ((Me._RefereeID = value)  _
							= false) Then
					Me.OnRefereeIDChanging(value)
					Me.SendPropertyChanging
					Me._RefereeID = value
					Me.SendPropertyChanged("RefereeID")
					Me.OnRefereeIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EmployeeNo", DbType:="VarChar(50)")>  _
		Public Property EmployeeNo() As String
			Get
				Return Me._EmployeeNo
			End Get
			Set
				If (String.Equals(Me._EmployeeNo, value) = false) Then
					Me.OnEmployeeNoChanging(value)
					Me.SendPropertyChanging
					Me._EmployeeNo = value
					Me.SendPropertyChanged("EmployeeNo")
					Me.OnEmployeeNoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RefName", DbType:="VarChar(150)")>  _
		Public Property RefName() As String
			Get
				Return Me._RefName
			End Get
			Set
				If (String.Equals(Me._RefName, value) = false) Then
					Me.OnRefNameChanging(value)
					Me.SendPropertyChanging
					Me._RefName = value
					Me.SendPropertyChanged("RefName")
					Me.OnRefNameChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address", DbType:="VarChar(150)")>  _
		Public Property Address() As String
			Get
				Return Me._Address
			End Get
			Set
				If (String.Equals(Me._Address, value) = false) Then
					Me.OnAddressChanging(value)
					Me.SendPropertyChanging
					Me._Address = value
					Me.SendPropertyChanged("Address")
					Me.OnAddressChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Telephone", DbType:="VarChar(50)")>  _
		Public Property Telephone() As String
			Get
				Return Me._Telephone
			End Get
			Set
				If (String.Equals(Me._Telephone, value) = false) Then
					Me.OnTelephoneChanging(value)
					Me.SendPropertyChanging
					Me._Telephone = value
					Me.SendPropertyChanged("Telephone")
					Me.OnTelephoneChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Email", DbType:="VarChar(50)")>  _
		Public Property Email() As String
			Get
				Return Me._Email
			End Get
			Set
				If (String.Equals(Me._Email, value) = false) Then
					Me.OnEmailChanging(value)
					Me.SendPropertyChanging
					Me._Email = value
					Me.SendPropertyChanged("Email")
					Me.OnEmailChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tag", DbType:="VarChar(255)")>  _
		Public Property Tag() As String
			Get
				Return Me._Tag
			End Get
			Set
				If (String.Equals(Me._Tag, value) = false) Then
					Me.OnTagChanging(value)
					Me.SendPropertyChanging
					Me._Tag = value
					Me.SendPropertyChanged("Tag")
					Me.OnTagChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Deleted", DbType:="TinyInt")>  _
		Public Property Deleted() As System.Nullable(Of Byte)
			Get
				Return Me._Deleted
			End Get
			Set
				If (Me._Deleted.Equals(value) = false) Then
					Me.OnDeletedChanging(value)
					Me.SendPropertyChanging
					Me._Deleted = value
					Me.SendPropertyChanged("Deleted")
					Me.OnDeletedChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Active", DbType:="TinyInt")>  _
		Public Property Active() As System.Nullable(Of Byte)
			Get
				Return Me._Active
			End Get
			Set
				If (Me._Active.Equals(value) = false) Then
					Me.OnActiveChanging(value)
					Me.SendPropertyChanging
					Me._Active = value
					Me.SendPropertyChanged("Active")
					Me.OnActiveChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Submitby", DbType:="VarChar(50)")>  _
		Public Property Submitby() As String
			Get
				Return Me._Submitby
			End Get
			Set
				If (String.Equals(Me._Submitby, value) = false) Then
					Me.OnSubmitbyChanging(value)
					Me.SendPropertyChanging
					Me._Submitby = value
					Me.SendPropertyChanged("Submitby")
					Me.OnSubmitbyChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubmitOn", DbType:="DateTime")>  _
		Public Property SubmitOn() As System.Nullable(Of Date)
			Get
				Return Me._SubmitOn
			End Get
			Set
				If (Me._SubmitOn.Equals(value) = false) Then
					Me.OnSubmitOnChanging(value)
					Me.SendPropertyChanging
					Me._SubmitOn = value
					Me.SendPropertyChanged("SubmitOn")
					Me.OnSubmitOnChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedBy", DbType:="VarChar(50)")>  _
		Public Property ModifiedBy() As String
			Get
				Return Me._ModifiedBy
			End Get
			Set
				If (String.Equals(Me._ModifiedBy, value) = false) Then
					Me.OnModifiedByChanging(value)
					Me.SendPropertyChanging
					Me._ModifiedBy = value
					Me.SendPropertyChanged("ModifiedBy")
					Me.OnModifiedByChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedOn", DbType:="DateTime")>  _
		Public Property ModifiedOn() As System.Nullable(Of Date)
			Get
				Return Me._ModifiedOn
			End Get
			Set
				If (Me._ModifiedOn.Equals(value) = false) Then
					Me.OnModifiedOnChanging(value)
					Me.SendPropertyChanging
					Me._ModifiedOn = value
					Me.SendPropertyChanged("ModifiedOn")
					Me.OnModifiedOnChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.HRAppraisal")>  _
	Partial Public Class HRAppraisal
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _AppraisalID As Integer
		
		Private _EmployeeID As String
		
		Private _AppDate As System.Nullable(Of Date)
		
		Private _Score As String
		
		Private _Grade As String
		
		Private _Objective As String
		
		Private _BaseDesc As String
		
		Private _Tag As String
		
		Private _Deleted As System.Nullable(Of Byte)
		
		Private _Active As System.Nullable(Of Byte)
		
		Private _Submitby As String
		
		Private _SubmitOn As System.Nullable(Of Date)
		
		Private _ModifiedBy As String
		
		Private _ModifiedOn As System.Nullable(Of Date)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnAppraisalIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnAppraisalIDChanged()
    End Sub
    Partial Private Sub OnEmployeeIDChanging(value As String)
    End Sub
    Partial Private Sub OnEmployeeIDChanged()
    End Sub
    Partial Private Sub OnAppDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnAppDateChanged()
    End Sub
    Partial Private Sub OnScoreChanging(value As String)
    End Sub
    Partial Private Sub OnScoreChanged()
    End Sub
    Partial Private Sub OnGradeChanging(value As String)
    End Sub
    Partial Private Sub OnGradeChanged()
    End Sub
    Partial Private Sub OnObjectiveChanging(value As String)
    End Sub
    Partial Private Sub OnObjectiveChanged()
    End Sub
    Partial Private Sub OnBaseDescChanging(value As String)
    End Sub
    Partial Private Sub OnBaseDescChanged()
    End Sub
    Partial Private Sub OnTagChanging(value As String)
    End Sub
    Partial Private Sub OnTagChanged()
    End Sub
    Partial Private Sub OnDeletedChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnDeletedChanged()
    End Sub
    Partial Private Sub OnActiveChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnActiveChanged()
    End Sub
    Partial Private Sub OnSubmitbyChanging(value As String)
    End Sub
    Partial Private Sub OnSubmitbyChanged()
    End Sub
    Partial Private Sub OnSubmitOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSubmitOnChanged()
    End Sub
    Partial Private Sub OnModifiedByChanging(value As String)
    End Sub
    Partial Private Sub OnModifiedByChanged()
    End Sub
    Partial Private Sub OnModifiedOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnModifiedOnChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AppraisalID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property AppraisalID() As Integer
			Get
				Return Me._AppraisalID
			End Get
			Set
				If ((Me._AppraisalID = value)  _
							= false) Then
					Me.OnAppraisalIDChanging(value)
					Me.SendPropertyChanging
					Me._AppraisalID = value
					Me.SendPropertyChanged("AppraisalID")
					Me.OnAppraisalIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EmployeeID", DbType:="VarChar(32)")>  _
		Public Property EmployeeID() As String
			Get
				Return Me._EmployeeID
			End Get
			Set
				If (String.Equals(Me._EmployeeID, value) = false) Then
					Me.OnEmployeeIDChanging(value)
					Me.SendPropertyChanging
					Me._EmployeeID = value
					Me.SendPropertyChanged("EmployeeID")
					Me.OnEmployeeIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AppDate", DbType:="SmallDateTime")>  _
		Public Property AppDate() As System.Nullable(Of Date)
			Get
				Return Me._AppDate
			End Get
			Set
				If (Me._AppDate.Equals(value) = false) Then
					Me.OnAppDateChanging(value)
					Me.SendPropertyChanging
					Me._AppDate = value
					Me.SendPropertyChanged("AppDate")
					Me.OnAppDateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Score", DbType:="VarChar(50)")>  _
		Public Property Score() As String
			Get
				Return Me._Score
			End Get
			Set
				If (String.Equals(Me._Score, value) = false) Then
					Me.OnScoreChanging(value)
					Me.SendPropertyChanging
					Me._Score = value
					Me.SendPropertyChanged("Score")
					Me.OnScoreChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Grade", DbType:="VarChar(64)")>  _
		Public Property Grade() As String
			Get
				Return Me._Grade
			End Get
			Set
				If (String.Equals(Me._Grade, value) = false) Then
					Me.OnGradeChanging(value)
					Me.SendPropertyChanging
					Me._Grade = value
					Me.SendPropertyChanged("Grade")
					Me.OnGradeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Objective", DbType:="VarChar(64)")>  _
		Public Property Objective() As String
			Get
				Return Me._Objective
			End Get
			Set
				If (String.Equals(Me._Objective, value) = false) Then
					Me.OnObjectiveChanging(value)
					Me.SendPropertyChanging
					Me._Objective = value
					Me.SendPropertyChanged("Objective")
					Me.OnObjectiveChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BaseDesc", DbType:="VarChar(256)")>  _
		Public Property BaseDesc() As String
			Get
				Return Me._BaseDesc
			End Get
			Set
				If (String.Equals(Me._BaseDesc, value) = false) Then
					Me.OnBaseDescChanging(value)
					Me.SendPropertyChanging
					Me._BaseDesc = value
					Me.SendPropertyChanged("BaseDesc")
					Me.OnBaseDescChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tag", DbType:="VarChar(255)")>  _
		Public Property Tag() As String
			Get
				Return Me._Tag
			End Get
			Set
				If (String.Equals(Me._Tag, value) = false) Then
					Me.OnTagChanging(value)
					Me.SendPropertyChanging
					Me._Tag = value
					Me.SendPropertyChanged("Tag")
					Me.OnTagChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Deleted", DbType:="TinyInt")>  _
		Public Property Deleted() As System.Nullable(Of Byte)
			Get
				Return Me._Deleted
			End Get
			Set
				If (Me._Deleted.Equals(value) = false) Then
					Me.OnDeletedChanging(value)
					Me.SendPropertyChanging
					Me._Deleted = value
					Me.SendPropertyChanged("Deleted")
					Me.OnDeletedChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Active", DbType:="TinyInt")>  _
		Public Property Active() As System.Nullable(Of Byte)
			Get
				Return Me._Active
			End Get
			Set
				If (Me._Active.Equals(value) = false) Then
					Me.OnActiveChanging(value)
					Me.SendPropertyChanging
					Me._Active = value
					Me.SendPropertyChanged("Active")
					Me.OnActiveChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Submitby", DbType:="VarChar(50)")>  _
		Public Property Submitby() As String
			Get
				Return Me._Submitby
			End Get
			Set
				If (String.Equals(Me._Submitby, value) = false) Then
					Me.OnSubmitbyChanging(value)
					Me.SendPropertyChanging
					Me._Submitby = value
					Me.SendPropertyChanged("Submitby")
					Me.OnSubmitbyChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubmitOn", DbType:="DateTime")>  _
		Public Property SubmitOn() As System.Nullable(Of Date)
			Get
				Return Me._SubmitOn
			End Get
			Set
				If (Me._SubmitOn.Equals(value) = false) Then
					Me.OnSubmitOnChanging(value)
					Me.SendPropertyChanging
					Me._SubmitOn = value
					Me.SendPropertyChanged("SubmitOn")
					Me.OnSubmitOnChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedBy", DbType:="VarChar(50)")>  _
		Public Property ModifiedBy() As String
			Get
				Return Me._ModifiedBy
			End Get
			Set
				If (String.Equals(Me._ModifiedBy, value) = false) Then
					Me.OnModifiedByChanging(value)
					Me.SendPropertyChanging
					Me._ModifiedBy = value
					Me.SendPropertyChanged("ModifiedBy")
					Me.OnModifiedByChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedOn", DbType:="DateTime")>  _
		Public Property ModifiedOn() As System.Nullable(Of Date)
			Get
				Return Me._ModifiedOn
			End Get
			Set
				If (Me._ModifiedOn.Equals(value) = false) Then
					Me.OnModifiedOnChanging(value)
					Me.SendPropertyChanging
					Me._ModifiedOn = value
					Me.SendPropertyChanged("ModifiedOn")
					Me.OnModifiedOnChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.PromotionView1")>  _
	Partial Public Class PromotionView1
		
		Private _PromotionID As Long
		
		Private _SheetID As System.Nullable(Of Integer)
		
		Private _EmployeeID As String
		
		Private _Grade As String
		
		Private _Step As String
		
		Private _ProDate As System.Nullable(Of Date)
		
		Private _BS As System.Nullable(Of Decimal)
		
		Private _HA As System.Nullable(Of Decimal)
		
		Private _TA As System.Nullable(Of Decimal)
		
		Private _YGPay As System.Nullable(Of Decimal)
		
		Private _YTax As System.Nullable(Of Decimal)
		
		Private _TransSTATUS As String
		
		Private _TransGUID As String
		
		Private _Remarks As String
		
		Private _Tag As String
		
		Private _Deleted As System.Nullable(Of Byte)
		
		Private _Active As System.Nullable(Of Byte)
		
		Private _Submitby As String
		
		Private _SubmitOn As System.Nullable(Of Date)
		
		Private _ModifiedBy As String
		
		Private _ModifiedOn As System.Nullable(Of Date)
		
		Public Sub New()
			MyBase.New
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PromotionID", DbType:="BigInt NOT NULL")>  _
		Public Property PromotionID() As Long
			Get
				Return Me._PromotionID
			End Get
			Set
				If ((Me._PromotionID = value)  _
							= false) Then
					Me._PromotionID = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SheetID", DbType:="Int")>  _
		Public Property SheetID() As System.Nullable(Of Integer)
			Get
				Return Me._SheetID
			End Get
			Set
				If (Me._SheetID.Equals(value) = false) Then
					Me._SheetID = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EmployeeID", DbType:="VarChar(32)")>  _
		Public Property EmployeeID() As String
			Get
				Return Me._EmployeeID
			End Get
			Set
				If (String.Equals(Me._EmployeeID, value) = false) Then
					Me._EmployeeID = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Grade", DbType:="VarChar(64)")>  _
		Public Property Grade() As String
			Get
				Return Me._Grade
			End Get
			Set
				If (String.Equals(Me._Grade, value) = false) Then
					Me._Grade = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="Step", Storage:="_Step", DbType:="VarChar(64)")>  _
		Public Property [Step]() As String
			Get
				Return Me._Step
			End Get
			Set
				If (String.Equals(Me._Step, value) = false) Then
					Me._Step = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProDate", DbType:="SmallDateTime")>  _
		Public Property ProDate() As System.Nullable(Of Date)
			Get
				Return Me._ProDate
			End Get
			Set
				If (Me._ProDate.Equals(value) = false) Then
					Me._ProDate = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BS", DbType:="Money")>  _
		Public Property BS() As System.Nullable(Of Decimal)
			Get
				Return Me._BS
			End Get
			Set
				If (Me._BS.Equals(value) = false) Then
					Me._BS = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HA", DbType:="Money")>  _
		Public Property HA() As System.Nullable(Of Decimal)
			Get
				Return Me._HA
			End Get
			Set
				If (Me._HA.Equals(value) = false) Then
					Me._HA = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TA", DbType:="Money")>  _
		Public Property TA() As System.Nullable(Of Decimal)
			Get
				Return Me._TA
			End Get
			Set
				If (Me._TA.Equals(value) = false) Then
					Me._TA = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_YGPay", DbType:="Money")>  _
		Public Property YGPay() As System.Nullable(Of Decimal)
			Get
				Return Me._YGPay
			End Get
			Set
				If (Me._YGPay.Equals(value) = false) Then
					Me._YGPay = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_YTax", DbType:="Money")>  _
		Public Property YTax() As System.Nullable(Of Decimal)
			Get
				Return Me._YTax
			End Get
			Set
				If (Me._YTax.Equals(value) = false) Then
					Me._YTax = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TransSTATUS", DbType:="VarChar(64)")>  _
		Public Property TransSTATUS() As String
			Get
				Return Me._TransSTATUS
			End Get
			Set
				If (String.Equals(Me._TransSTATUS, value) = false) Then
					Me._TransSTATUS = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TransGUID", DbType:="VarChar(64)")>  _
		Public Property TransGUID() As String
			Get
				Return Me._TransGUID
			End Get
			Set
				If (String.Equals(Me._TransGUID, value) = false) Then
					Me._TransGUID = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Remarks", DbType:="VarChar(256)")>  _
		Public Property Remarks() As String
			Get
				Return Me._Remarks
			End Get
			Set
				If (String.Equals(Me._Remarks, value) = false) Then
					Me._Remarks = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tag", DbType:="VarChar(255)")>  _
		Public Property Tag() As String
			Get
				Return Me._Tag
			End Get
			Set
				If (String.Equals(Me._Tag, value) = false) Then
					Me._Tag = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Deleted", DbType:="TinyInt")>  _
		Public Property Deleted() As System.Nullable(Of Byte)
			Get
				Return Me._Deleted
			End Get
			Set
				If (Me._Deleted.Equals(value) = false) Then
					Me._Deleted = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Active", DbType:="TinyInt")>  _
		Public Property Active() As System.Nullable(Of Byte)
			Get
				Return Me._Active
			End Get
			Set
				If (Me._Active.Equals(value) = false) Then
					Me._Active = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Submitby", DbType:="VarChar(50)")>  _
		Public Property Submitby() As String
			Get
				Return Me._Submitby
			End Get
			Set
				If (String.Equals(Me._Submitby, value) = false) Then
					Me._Submitby = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubmitOn", DbType:="DateTime")>  _
		Public Property SubmitOn() As System.Nullable(Of Date)
			Get
				Return Me._SubmitOn
			End Get
			Set
				If (Me._SubmitOn.Equals(value) = false) Then
					Me._SubmitOn = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedBy", DbType:="VarChar(50)")>  _
		Public Property ModifiedBy() As String
			Get
				Return Me._ModifiedBy
			End Get
			Set
				If (String.Equals(Me._ModifiedBy, value) = false) Then
					Me._ModifiedBy = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedOn", DbType:="DateTime")>  _
		Public Property ModifiedOn() As System.Nullable(Of Date)
			Get
				Return Me._ModifiedOn
			End Get
			Set
				If (Me._ModifiedOn.Equals(value) = false) Then
					Me._ModifiedOn = value
				End If
			End Set
		End Property
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.AllowanceID")>  _
	Partial Public Class AllowanceID
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _AllowID As Long
		
		Private _AllowName As String
		
		Private _Status As System.Nullable(Of Long)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnAllowIDChanging(value As Long)
    End Sub
    Partial Private Sub OnAllowIDChanged()
    End Sub
    Partial Private Sub OnAllowNameChanging(value As String)
    End Sub
    Partial Private Sub OnAllowNameChanged()
    End Sub
    Partial Private Sub OnStatusChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnStatusChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AllowID", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property AllowID() As Long
			Get
				Return Me._AllowID
			End Get
			Set
				If ((Me._AllowID = value)  _
							= false) Then
					Me.OnAllowIDChanging(value)
					Me.SendPropertyChanging
					Me._AllowID = value
					Me.SendPropertyChanged("AllowID")
					Me.OnAllowIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AllowName", DbType:="VarChar(256)")>  _
		Public Property AllowName() As String
			Get
				Return Me._AllowName
			End Get
			Set
				If (String.Equals(Me._AllowName, value) = false) Then
					Me.OnAllowNameChanging(value)
					Me.SendPropertyChanging
					Me._AllowName = value
					Me.SendPropertyChanged("AllowName")
					Me.OnAllowNameChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status", DbType:="BigInt")>  _
		Public Property Status() As System.Nullable(Of Long)
			Get
				Return Me._Status
			End Get
			Set
				If (Me._Status.Equals(value) = false) Then
					Me.OnStatusChanging(value)
					Me.SendPropertyChanging
					Me._Status = value
					Me.SendPropertyChanged("Status")
					Me.OnStatusChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DeductionID")>  _
	Partial Public Class DeductionID
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _DedID As Long
		
		Private _DedName As String
		
		Private _Status As System.Nullable(Of Long)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnDedIDChanging(value As Long)
    End Sub
    Partial Private Sub OnDedIDChanged()
    End Sub
    Partial Private Sub OnDedNameChanging(value As String)
    End Sub
    Partial Private Sub OnDedNameChanged()
    End Sub
    Partial Private Sub OnStatusChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnStatusChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DedID", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property DedID() As Long
			Get
				Return Me._DedID
			End Get
			Set
				If ((Me._DedID = value)  _
							= false) Then
					Me.OnDedIDChanging(value)
					Me.SendPropertyChanging
					Me._DedID = value
					Me.SendPropertyChanged("DedID")
					Me.OnDedIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DedName", DbType:="VarChar(256)")>  _
		Public Property DedName() As String
			Get
				Return Me._DedName
			End Get
			Set
				If (String.Equals(Me._DedName, value) = false) Then
					Me.OnDedNameChanging(value)
					Me.SendPropertyChanging
					Me._DedName = value
					Me.SendPropertyChanged("DedName")
					Me.OnDedNameChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status", DbType:="BigInt")>  _
		Public Property Status() As System.Nullable(Of Long)
			Get
				Return Me._Status
			End Get
			Set
				If (Me._Status.Equals(value) = false) Then
					Me.OnStatusChanging(value)
					Me.SendPropertyChanging
					Me._Status = value
					Me.SendPropertyChanged("Status")
					Me.OnStatusChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.HRPromotion")>  _
	Partial Public Class HRPromotion
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _PromotionID As Long
		
		Private _SheetID As System.Nullable(Of Integer)
		
		Private _EmployeeID As String
		
		Private _Grade As String
		
		Private _Step As String
		
		Private _ProDate As System.Nullable(Of Date)
		
		Private _BS As System.Nullable(Of Decimal)
		
		Private _HA As System.Nullable(Of Decimal)
		
		Private _TA As System.Nullable(Of Decimal)
		
		Private _YGPay As System.Nullable(Of Decimal)
		
		Private _YTax As System.Nullable(Of Decimal)
		
		Private _TransSTATUS As String
		
		Private _TransGUID As String
		
		Private _Remarks As String
		
		Private _Tag As String
		
		Private _Deleted As System.Nullable(Of Byte)
		
		Private _Active As System.Nullable(Of Byte)
		
		Private _Submitby As String
		
		Private _SubmitOn As System.Nullable(Of Date)
		
		Private _ModifiedBy As String
		
		Private _ModifiedOn As System.Nullable(Of Date)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnPromotionIDChanging(value As Long)
    End Sub
    Partial Private Sub OnPromotionIDChanged()
    End Sub
    Partial Private Sub OnSheetIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSheetIDChanged()
    End Sub
    Partial Private Sub OnEmployeeIDChanging(value As String)
    End Sub
    Partial Private Sub OnEmployeeIDChanged()
    End Sub
    Partial Private Sub OnGradeChanging(value As String)
    End Sub
    Partial Private Sub OnGradeChanged()
    End Sub
    Partial Private Sub OnStepChanging(value As String)
    End Sub
    Partial Private Sub OnStepChanged()
    End Sub
    Partial Private Sub OnProDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnProDateChanged()
    End Sub
    Partial Private Sub OnBSChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnBSChanged()
    End Sub
    Partial Private Sub OnHAChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnHAChanged()
    End Sub
    Partial Private Sub OnTAChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnTAChanged()
    End Sub
    Partial Private Sub OnYGPayChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnYGPayChanged()
    End Sub
    Partial Private Sub OnYTaxChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnYTaxChanged()
    End Sub
    Partial Private Sub OnTransSTATUSChanging(value As String)
    End Sub
    Partial Private Sub OnTransSTATUSChanged()
    End Sub
    Partial Private Sub OnTransGUIDChanging(value As String)
    End Sub
    Partial Private Sub OnTransGUIDChanged()
    End Sub
    Partial Private Sub OnRemarksChanging(value As String)
    End Sub
    Partial Private Sub OnRemarksChanged()
    End Sub
    Partial Private Sub OnTagChanging(value As String)
    End Sub
    Partial Private Sub OnTagChanged()
    End Sub
    Partial Private Sub OnDeletedChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnDeletedChanged()
    End Sub
    Partial Private Sub OnActiveChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnActiveChanged()
    End Sub
    Partial Private Sub OnSubmitbyChanging(value As String)
    End Sub
    Partial Private Sub OnSubmitbyChanged()
    End Sub
    Partial Private Sub OnSubmitOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSubmitOnChanged()
    End Sub
    Partial Private Sub OnModifiedByChanging(value As String)
    End Sub
    Partial Private Sub OnModifiedByChanged()
    End Sub
    Partial Private Sub OnModifiedOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnModifiedOnChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PromotionID", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property PromotionID() As Long
			Get
				Return Me._PromotionID
			End Get
			Set
				If ((Me._PromotionID = value)  _
							= false) Then
					Me.OnPromotionIDChanging(value)
					Me.SendPropertyChanging
					Me._PromotionID = value
					Me.SendPropertyChanged("PromotionID")
					Me.OnPromotionIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SheetID", DbType:="Int")>  _
		Public Property SheetID() As System.Nullable(Of Integer)
			Get
				Return Me._SheetID
			End Get
			Set
				If (Me._SheetID.Equals(value) = false) Then
					Me.OnSheetIDChanging(value)
					Me.SendPropertyChanging
					Me._SheetID = value
					Me.SendPropertyChanged("SheetID")
					Me.OnSheetIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EmployeeID", DbType:="VarChar(32)")>  _
		Public Property EmployeeID() As String
			Get
				Return Me._EmployeeID
			End Get
			Set
				If (String.Equals(Me._EmployeeID, value) = false) Then
					Me.OnEmployeeIDChanging(value)
					Me.SendPropertyChanging
					Me._EmployeeID = value
					Me.SendPropertyChanged("EmployeeID")
					Me.OnEmployeeIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Grade", DbType:="VarChar(64)")>  _
		Public Property Grade() As String
			Get
				Return Me._Grade
			End Get
			Set
				If (String.Equals(Me._Grade, value) = false) Then
					Me.OnGradeChanging(value)
					Me.SendPropertyChanging
					Me._Grade = value
					Me.SendPropertyChanged("Grade")
					Me.OnGradeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="Step", Storage:="_Step", DbType:="VarChar(64)")>  _
		Public Property [Step]() As String
			Get
				Return Me._Step
			End Get
			Set
				If (String.Equals(Me._Step, value) = false) Then
					Me.OnStepChanging(value)
					Me.SendPropertyChanging
					Me._Step = value
					Me.SendPropertyChanged("[Step]")
					Me.OnStepChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProDate", DbType:="SmallDateTime")>  _
		Public Property ProDate() As System.Nullable(Of Date)
			Get
				Return Me._ProDate
			End Get
			Set
				If (Me._ProDate.Equals(value) = false) Then
					Me.OnProDateChanging(value)
					Me.SendPropertyChanging
					Me._ProDate = value
					Me.SendPropertyChanged("ProDate")
					Me.OnProDateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BS", DbType:="Money")>  _
		Public Property BS() As System.Nullable(Of Decimal)
			Get
				Return Me._BS
			End Get
			Set
				If (Me._BS.Equals(value) = false) Then
					Me.OnBSChanging(value)
					Me.SendPropertyChanging
					Me._BS = value
					Me.SendPropertyChanged("BS")
					Me.OnBSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HA", DbType:="Money")>  _
		Public Property HA() As System.Nullable(Of Decimal)
			Get
				Return Me._HA
			End Get
			Set
				If (Me._HA.Equals(value) = false) Then
					Me.OnHAChanging(value)
					Me.SendPropertyChanging
					Me._HA = value
					Me.SendPropertyChanged("HA")
					Me.OnHAChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TA", DbType:="Money")>  _
		Public Property TA() As System.Nullable(Of Decimal)
			Get
				Return Me._TA
			End Get
			Set
				If (Me._TA.Equals(value) = false) Then
					Me.OnTAChanging(value)
					Me.SendPropertyChanging
					Me._TA = value
					Me.SendPropertyChanged("TA")
					Me.OnTAChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_YGPay", DbType:="Money")>  _
		Public Property YGPay() As System.Nullable(Of Decimal)
			Get
				Return Me._YGPay
			End Get
			Set
				If (Me._YGPay.Equals(value) = false) Then
					Me.OnYGPayChanging(value)
					Me.SendPropertyChanging
					Me._YGPay = value
					Me.SendPropertyChanged("YGPay")
					Me.OnYGPayChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_YTax", DbType:="Money")>  _
		Public Property YTax() As System.Nullable(Of Decimal)
			Get
				Return Me._YTax
			End Get
			Set
				If (Me._YTax.Equals(value) = false) Then
					Me.OnYTaxChanging(value)
					Me.SendPropertyChanging
					Me._YTax = value
					Me.SendPropertyChanged("YTax")
					Me.OnYTaxChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TransSTATUS", DbType:="VarChar(64)")>  _
		Public Property TransSTATUS() As String
			Get
				Return Me._TransSTATUS
			End Get
			Set
				If (String.Equals(Me._TransSTATUS, value) = false) Then
					Me.OnTransSTATUSChanging(value)
					Me.SendPropertyChanging
					Me._TransSTATUS = value
					Me.SendPropertyChanged("TransSTATUS")
					Me.OnTransSTATUSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TransGUID", DbType:="VarChar(64)")>  _
		Public Property TransGUID() As String
			Get
				Return Me._TransGUID
			End Get
			Set
				If (String.Equals(Me._TransGUID, value) = false) Then
					Me.OnTransGUIDChanging(value)
					Me.SendPropertyChanging
					Me._TransGUID = value
					Me.SendPropertyChanged("TransGUID")
					Me.OnTransGUIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Remarks", DbType:="VarChar(256)")>  _
		Public Property Remarks() As String
			Get
				Return Me._Remarks
			End Get
			Set
				If (String.Equals(Me._Remarks, value) = false) Then
					Me.OnRemarksChanging(value)
					Me.SendPropertyChanging
					Me._Remarks = value
					Me.SendPropertyChanged("Remarks")
					Me.OnRemarksChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tag", DbType:="VarChar(255)")>  _
		Public Property Tag() As String
			Get
				Return Me._Tag
			End Get
			Set
				If (String.Equals(Me._Tag, value) = false) Then
					Me.OnTagChanging(value)
					Me.SendPropertyChanging
					Me._Tag = value
					Me.SendPropertyChanged("Tag")
					Me.OnTagChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Deleted", DbType:="TinyInt")>  _
		Public Property Deleted() As System.Nullable(Of Byte)
			Get
				Return Me._Deleted
			End Get
			Set
				If (Me._Deleted.Equals(value) = false) Then
					Me.OnDeletedChanging(value)
					Me.SendPropertyChanging
					Me._Deleted = value
					Me.SendPropertyChanged("Deleted")
					Me.OnDeletedChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Active", DbType:="TinyInt")>  _
		Public Property Active() As System.Nullable(Of Byte)
			Get
				Return Me._Active
			End Get
			Set
				If (Me._Active.Equals(value) = false) Then
					Me.OnActiveChanging(value)
					Me.SendPropertyChanging
					Me._Active = value
					Me.SendPropertyChanged("Active")
					Me.OnActiveChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Submitby", DbType:="VarChar(50)")>  _
		Public Property Submitby() As String
			Get
				Return Me._Submitby
			End Get
			Set
				If (String.Equals(Me._Submitby, value) = false) Then
					Me.OnSubmitbyChanging(value)
					Me.SendPropertyChanging
					Me._Submitby = value
					Me.SendPropertyChanged("Submitby")
					Me.OnSubmitbyChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubmitOn", DbType:="DateTime")>  _
		Public Property SubmitOn() As System.Nullable(Of Date)
			Get
				Return Me._SubmitOn
			End Get
			Set
				If (Me._SubmitOn.Equals(value) = false) Then
					Me.OnSubmitOnChanging(value)
					Me.SendPropertyChanging
					Me._SubmitOn = value
					Me.SendPropertyChanged("SubmitOn")
					Me.OnSubmitOnChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedBy", DbType:="VarChar(50)")>  _
		Public Property ModifiedBy() As String
			Get
				Return Me._ModifiedBy
			End Get
			Set
				If (String.Equals(Me._ModifiedBy, value) = false) Then
					Me.OnModifiedByChanging(value)
					Me.SendPropertyChanging
					Me._ModifiedBy = value
					Me.SendPropertyChanged("ModifiedBy")
					Me.OnModifiedByChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedOn", DbType:="DateTime")>  _
		Public Property ModifiedOn() As System.Nullable(Of Date)
			Get
				Return Me._ModifiedOn
			End Get
			Set
				If (Me._ModifiedOn.Equals(value) = false) Then
					Me.OnModifiedOnChanging(value)
					Me.SendPropertyChanging
					Me._ModifiedOn = value
					Me.SendPropertyChanged("ModifiedOn")
					Me.OnModifiedOnChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MktContacts")>  _
	Partial Public Class MktContact
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _MktContactID As Long
		
		Private _UserID As Long
		
		Private _InsuredID As String
		
		Private _Message As String
		
		Private _Subject As String
		
		Private _MsgType As System.Nullable(Of Byte)
		
		Private _SentTo As String
		
		Private _Cc As String
		
		Private _Bcc As String
		
		Private _SubmittedBy As String
		
		Private _SubmittedOn As System.Nullable(Of Date)
		
		Private _ModifiedBy As String
		
		Private _ModifiedOn As System.Nullable(Of Date)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnMktContactIDChanging(value As Long)
    End Sub
    Partial Private Sub OnMktContactIDChanged()
    End Sub
    Partial Private Sub OnUserIDChanging(value As Long)
    End Sub
    Partial Private Sub OnUserIDChanged()
    End Sub
    Partial Private Sub OnInsuredIDChanging(value As String)
    End Sub
    Partial Private Sub OnInsuredIDChanged()
    End Sub
    Partial Private Sub OnMessageChanging(value As String)
    End Sub
    Partial Private Sub OnMessageChanged()
    End Sub
    Partial Private Sub OnSubjectChanging(value As String)
    End Sub
    Partial Private Sub OnSubjectChanged()
    End Sub
    Partial Private Sub OnMsgTypeChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnMsgTypeChanged()
    End Sub
    Partial Private Sub OnSentToChanging(value As String)
    End Sub
    Partial Private Sub OnSentToChanged()
    End Sub
    Partial Private Sub OnCcChanging(value As String)
    End Sub
    Partial Private Sub OnCcChanged()
    End Sub
    Partial Private Sub OnBccChanging(value As String)
    End Sub
    Partial Private Sub OnBccChanged()
    End Sub
    Partial Private Sub OnSubmittedByChanging(value As String)
    End Sub
    Partial Private Sub OnSubmittedByChanged()
    End Sub
    Partial Private Sub OnSubmittedOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSubmittedOnChanged()
    End Sub
    Partial Private Sub OnModifiedByChanging(value As String)
    End Sub
    Partial Private Sub OnModifiedByChanged()
    End Sub
    Partial Private Sub OnModifiedOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnModifiedOnChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MktContactID", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property MktContactID() As Long
			Get
				Return Me._MktContactID
			End Get
			Set
				If ((Me._MktContactID = value)  _
							= false) Then
					Me.OnMktContactIDChanging(value)
					Me.SendPropertyChanging
					Me._MktContactID = value
					Me.SendPropertyChanged("MktContactID")
					Me.OnMktContactIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserID", DbType:="BigInt NOT NULL")>  _
		Public Property UserID() As Long
			Get
				Return Me._UserID
			End Get
			Set
				If ((Me._UserID = value)  _
							= false) Then
					Me.OnUserIDChanging(value)
					Me.SendPropertyChanging
					Me._UserID = value
					Me.SendPropertyChanged("UserID")
					Me.OnUserIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InsuredID", DbType:="VarChar(32)")>  _
		Public Property InsuredID() As String
			Get
				Return Me._InsuredID
			End Get
			Set
				If (String.Equals(Me._InsuredID, value) = false) Then
					Me.OnInsuredIDChanging(value)
					Me.SendPropertyChanging
					Me._InsuredID = value
					Me.SendPropertyChanged("InsuredID")
					Me.OnInsuredIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Message", DbType:="Text", UpdateCheck:=UpdateCheck.Never)>  _
		Public Property Message() As String
			Get
				Return Me._Message
			End Get
			Set
				If (String.Equals(Me._Message, value) = false) Then
					Me.OnMessageChanging(value)
					Me.SendPropertyChanging
					Me._Message = value
					Me.SendPropertyChanged("Message")
					Me.OnMessageChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Subject", DbType:="VarChar(128)")>  _
		Public Property Subject() As String
			Get
				Return Me._Subject
			End Get
			Set
				If (String.Equals(Me._Subject, value) = false) Then
					Me.OnSubjectChanging(value)
					Me.SendPropertyChanging
					Me._Subject = value
					Me.SendPropertyChanged("Subject")
					Me.OnSubjectChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MsgType", DbType:="TinyInt")>  _
		Public Property MsgType() As System.Nullable(Of Byte)
			Get
				Return Me._MsgType
			End Get
			Set
				If (Me._MsgType.Equals(value) = false) Then
					Me.OnMsgTypeChanging(value)
					Me.SendPropertyChanging
					Me._MsgType = value
					Me.SendPropertyChanged("MsgType")
					Me.OnMsgTypeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SentTo", DbType:="VarChar(256)")>  _
		Public Property SentTo() As String
			Get
				Return Me._SentTo
			End Get
			Set
				If (String.Equals(Me._SentTo, value) = false) Then
					Me.OnSentToChanging(value)
					Me.SendPropertyChanging
					Me._SentTo = value
					Me.SendPropertyChanged("SentTo")
					Me.OnSentToChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cc", DbType:="VarChar(256)")>  _
		Public Property Cc() As String
			Get
				Return Me._Cc
			End Get
			Set
				If (String.Equals(Me._Cc, value) = false) Then
					Me.OnCcChanging(value)
					Me.SendPropertyChanging
					Me._Cc = value
					Me.SendPropertyChanged("Cc")
					Me.OnCcChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Bcc", DbType:="VarChar(256)")>  _
		Public Property Bcc() As String
			Get
				Return Me._Bcc
			End Get
			Set
				If (String.Equals(Me._Bcc, value) = false) Then
					Me.OnBccChanging(value)
					Me.SendPropertyChanging
					Me._Bcc = value
					Me.SendPropertyChanged("Bcc")
					Me.OnBccChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubmittedBy", DbType:="VarChar(128)")>  _
		Public Property SubmittedBy() As String
			Get
				Return Me._SubmittedBy
			End Get
			Set
				If (String.Equals(Me._SubmittedBy, value) = false) Then
					Me.OnSubmittedByChanging(value)
					Me.SendPropertyChanging
					Me._SubmittedBy = value
					Me.SendPropertyChanged("SubmittedBy")
					Me.OnSubmittedByChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubmittedOn", DbType:="DateTime")>  _
		Public Property SubmittedOn() As System.Nullable(Of Date)
			Get
				Return Me._SubmittedOn
			End Get
			Set
				If (Me._SubmittedOn.Equals(value) = false) Then
					Me.OnSubmittedOnChanging(value)
					Me.SendPropertyChanging
					Me._SubmittedOn = value
					Me.SendPropertyChanged("SubmittedOn")
					Me.OnSubmittedOnChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedBy", DbType:="VarChar(128)")>  _
		Public Property ModifiedBy() As String
			Get
				Return Me._ModifiedBy
			End Get
			Set
				If (String.Equals(Me._ModifiedBy, value) = false) Then
					Me.OnModifiedByChanging(value)
					Me.SendPropertyChanging
					Me._ModifiedBy = value
					Me.SendPropertyChanged("ModifiedBy")
					Me.OnModifiedByChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedOn", DbType:="DateTime")>  _
		Public Property ModifiedOn() As System.Nullable(Of Date)
			Get
				Return Me._ModifiedOn
			End Get
			Set
				If (Me._ModifiedOn.Equals(value) = false) Then
					Me.OnModifiedOnChanging(value)
					Me.SendPropertyChanging
					Me._ModifiedOn = value
					Me.SendPropertyChanged("ModifiedOn")
					Me.OnModifiedOnChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Appraisals")>  _
	Partial Public Class Appraisal
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _AppraisalID As Integer
		
		Private _SN As System.Nullable(Of Long)
		
		Private _GradeID As System.Nullable(Of Long)
		
		Private _Appraisals As String
		
		Private _Grade As String
		
		Private _Details As String
		
		Private _Deleted As System.Nullable(Of Byte)
		
		Private _Active As System.Nullable(Of Byte)
		
		Private _Submitby As String
		
		Private _SubmitOn As System.Nullable(Of Date)
		
		Private _ModifiedBy As String
		
		Private _ModifiedOn As System.Nullable(Of Date)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnAppraisalIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnAppraisalIDChanged()
    End Sub
    Partial Private Sub OnSNChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnSNChanged()
    End Sub
    Partial Private Sub OnGradeIDChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnGradeIDChanged()
    End Sub
    Partial Private Sub OnAppraisalsChanging(value As String)
    End Sub
    Partial Private Sub OnAppraisalsChanged()
    End Sub
    Partial Private Sub OnGradeChanging(value As String)
    End Sub
    Partial Private Sub OnGradeChanged()
    End Sub
    Partial Private Sub OnDetailsChanging(value As String)
    End Sub
    Partial Private Sub OnDetailsChanged()
    End Sub
    Partial Private Sub OnDeletedChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnDeletedChanged()
    End Sub
    Partial Private Sub OnActiveChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnActiveChanged()
    End Sub
    Partial Private Sub OnSubmitbyChanging(value As String)
    End Sub
    Partial Private Sub OnSubmitbyChanged()
    End Sub
    Partial Private Sub OnSubmitOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSubmitOnChanged()
    End Sub
    Partial Private Sub OnModifiedByChanging(value As String)
    End Sub
    Partial Private Sub OnModifiedByChanged()
    End Sub
    Partial Private Sub OnModifiedOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnModifiedOnChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AppraisalID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property AppraisalID() As Integer
			Get
				Return Me._AppraisalID
			End Get
			Set
				If ((Me._AppraisalID = value)  _
							= false) Then
					Me.OnAppraisalIDChanging(value)
					Me.SendPropertyChanging
					Me._AppraisalID = value
					Me.SendPropertyChanged("AppraisalID")
					Me.OnAppraisalIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SN", DbType:="BigInt")>  _
		Public Property SN() As System.Nullable(Of Long)
			Get
				Return Me._SN
			End Get
			Set
				If (Me._SN.Equals(value) = false) Then
					Me.OnSNChanging(value)
					Me.SendPropertyChanging
					Me._SN = value
					Me.SendPropertyChanged("SN")
					Me.OnSNChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GradeID", DbType:="BigInt")>  _
		Public Property GradeID() As System.Nullable(Of Long)
			Get
				Return Me._GradeID
			End Get
			Set
				If (Me._GradeID.Equals(value) = false) Then
					Me.OnGradeIDChanging(value)
					Me.SendPropertyChanging
					Me._GradeID = value
					Me.SendPropertyChanged("GradeID")
					Me.OnGradeIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Appraisals", DbType:="VarChar(1800)")>  _
		Public Property Appraisals() As String
			Get
				Return Me._Appraisals
			End Get
			Set
				If (String.Equals(Me._Appraisals, value) = false) Then
					Me.OnAppraisalsChanging(value)
					Me.SendPropertyChanging
					Me._Appraisals = value
					Me.SendPropertyChanged("Appraisals")
					Me.OnAppraisalsChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Grade", DbType:="VarChar(64) NOT NULL", CanBeNull:=false)>  _
		Public Property Grade() As String
			Get
				Return Me._Grade
			End Get
			Set
				If (String.Equals(Me._Grade, value) = false) Then
					Me.OnGradeChanging(value)
					Me.SendPropertyChanging
					Me._Grade = value
					Me.SendPropertyChanged("Grade")
					Me.OnGradeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Details", DbType:="VarChar(64)")>  _
		Public Property Details() As String
			Get
				Return Me._Details
			End Get
			Set
				If (String.Equals(Me._Details, value) = false) Then
					Me.OnDetailsChanging(value)
					Me.SendPropertyChanging
					Me._Details = value
					Me.SendPropertyChanged("Details")
					Me.OnDetailsChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Deleted", DbType:="TinyInt")>  _
		Public Property Deleted() As System.Nullable(Of Byte)
			Get
				Return Me._Deleted
			End Get
			Set
				If (Me._Deleted.Equals(value) = false) Then
					Me.OnDeletedChanging(value)
					Me.SendPropertyChanging
					Me._Deleted = value
					Me.SendPropertyChanged("Deleted")
					Me.OnDeletedChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Active", DbType:="TinyInt")>  _
		Public Property Active() As System.Nullable(Of Byte)
			Get
				Return Me._Active
			End Get
			Set
				If (Me._Active.Equals(value) = false) Then
					Me.OnActiveChanging(value)
					Me.SendPropertyChanging
					Me._Active = value
					Me.SendPropertyChanged("Active")
					Me.OnActiveChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Submitby", DbType:="VarChar(32)")>  _
		Public Property Submitby() As String
			Get
				Return Me._Submitby
			End Get
			Set
				If (String.Equals(Me._Submitby, value) = false) Then
					Me.OnSubmitbyChanging(value)
					Me.SendPropertyChanging
					Me._Submitby = value
					Me.SendPropertyChanged("Submitby")
					Me.OnSubmitbyChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubmitOn", DbType:="DateTime")>  _
		Public Property SubmitOn() As System.Nullable(Of Date)
			Get
				Return Me._SubmitOn
			End Get
			Set
				If (Me._SubmitOn.Equals(value) = false) Then
					Me.OnSubmitOnChanging(value)
					Me.SendPropertyChanging
					Me._SubmitOn = value
					Me.SendPropertyChanged("SubmitOn")
					Me.OnSubmitOnChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedBy", DbType:="VarChar(32)")>  _
		Public Property ModifiedBy() As String
			Get
				Return Me._ModifiedBy
			End Get
			Set
				If (String.Equals(Me._ModifiedBy, value) = false) Then
					Me.OnModifiedByChanging(value)
					Me.SendPropertyChanging
					Me._ModifiedBy = value
					Me.SendPropertyChanged("ModifiedBy")
					Me.OnModifiedByChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedOn", DbType:="DateTime")>  _
		Public Property ModifiedOn() As System.Nullable(Of Date)
			Get
				Return Me._ModifiedOn
			End Get
			Set
				If (Me._ModifiedOn.Equals(value) = false) Then
					Me.OnModifiedOnChanging(value)
					Me.SendPropertyChanging
					Me._ModifiedOn = value
					Me.SendPropertyChanged("ModifiedOn")
					Me.OnModifiedOnChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Transactions")>  _
	Partial Public Class Transaction
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _TransactionID As Integer
		
		Private _VoucherNo As String
		
		Private _TDate As System.Nullable(Of Date)
		
		Private _TDescription As String
		
		Private _Trans_Type As String
		
		Private _PartnerID As String
		
		Private _PartnerName As String
		
		Private _TotalAmount As System.Nullable(Of Decimal)
		
		Private _Deleted As System.Nullable(Of Byte)
		
		Private _Active As System.Nullable(Of Byte)
		
		Private _Remarks As String
		
		Private _Tag As String
		
		Private _TransGUID As String
		
		Private _SubmittedOn As System.Nullable(Of Date)
		
		Private _SubmittedBy As String
		
		Private _ModiffiedOn As System.Nullable(Of Date)
		
		Private _ModiffiedBy As String
		
		Private _ApprovedOn As System.Nullable(Of Date)
		
		Private _ApprovedBy As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnTransactionIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnTransactionIDChanged()
    End Sub
    Partial Private Sub OnVoucherNoChanging(value As String)
    End Sub
    Partial Private Sub OnVoucherNoChanged()
    End Sub
    Partial Private Sub OnTDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnTDateChanged()
    End Sub
    Partial Private Sub OnTDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnTDescriptionChanged()
    End Sub
    Partial Private Sub OnTrans_TypeChanging(value As String)
    End Sub
    Partial Private Sub OnTrans_TypeChanged()
    End Sub
    Partial Private Sub OnPartnerIDChanging(value As String)
    End Sub
    Partial Private Sub OnPartnerIDChanged()
    End Sub
    Partial Private Sub OnPartnerNameChanging(value As String)
    End Sub
    Partial Private Sub OnPartnerNameChanged()
    End Sub
    Partial Private Sub OnTotalAmountChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnTotalAmountChanged()
    End Sub
    Partial Private Sub OnDeletedChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnDeletedChanged()
    End Sub
    Partial Private Sub OnActiveChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnActiveChanged()
    End Sub
    Partial Private Sub OnRemarksChanging(value As String)
    End Sub
    Partial Private Sub OnRemarksChanged()
    End Sub
    Partial Private Sub OnTagChanging(value As String)
    End Sub
    Partial Private Sub OnTagChanged()
    End Sub
    Partial Private Sub OnTransGUIDChanging(value As String)
    End Sub
    Partial Private Sub OnTransGUIDChanged()
    End Sub
    Partial Private Sub OnSubmittedOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSubmittedOnChanged()
    End Sub
    Partial Private Sub OnSubmittedByChanging(value As String)
    End Sub
    Partial Private Sub OnSubmittedByChanged()
    End Sub
    Partial Private Sub OnModiffiedOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnModiffiedOnChanged()
    End Sub
    Partial Private Sub OnModiffiedByChanging(value As String)
    End Sub
    Partial Private Sub OnModiffiedByChanged()
    End Sub
    Partial Private Sub OnApprovedOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnApprovedOnChanged()
    End Sub
    Partial Private Sub OnApprovedByChanging(value As String)
    End Sub
    Partial Private Sub OnApprovedByChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TransactionID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property TransactionID() As Integer
			Get
				Return Me._TransactionID
			End Get
			Set
				If ((Me._TransactionID = value)  _
							= false) Then
					Me.OnTransactionIDChanging(value)
					Me.SendPropertyChanging
					Me._TransactionID = value
					Me.SendPropertyChanged("TransactionID")
					Me.OnTransactionIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VoucherNo", DbType:="VarChar(50)")>  _
		Public Property VoucherNo() As String
			Get
				Return Me._VoucherNo
			End Get
			Set
				If (String.Equals(Me._VoucherNo, value) = false) Then
					Me.OnVoucherNoChanging(value)
					Me.SendPropertyChanging
					Me._VoucherNo = value
					Me.SendPropertyChanged("VoucherNo")
					Me.OnVoucherNoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TDate", DbType:="SmallDateTime")>  _
		Public Property TDate() As System.Nullable(Of Date)
			Get
				Return Me._TDate
			End Get
			Set
				If (Me._TDate.Equals(value) = false) Then
					Me.OnTDateChanging(value)
					Me.SendPropertyChanging
					Me._TDate = value
					Me.SendPropertyChanged("TDate")
					Me.OnTDateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TDescription", DbType:="VarChar(50)")>  _
		Public Property TDescription() As String
			Get
				Return Me._TDescription
			End Get
			Set
				If (String.Equals(Me._TDescription, value) = false) Then
					Me.OnTDescriptionChanging(value)
					Me.SendPropertyChanging
					Me._TDescription = value
					Me.SendPropertyChanged("TDescription")
					Me.OnTDescriptionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Trans_Type", DbType:="VarChar(32)")>  _
		Public Property Trans_Type() As String
			Get
				Return Me._Trans_Type
			End Get
			Set
				If (String.Equals(Me._Trans_Type, value) = false) Then
					Me.OnTrans_TypeChanging(value)
					Me.SendPropertyChanging
					Me._Trans_Type = value
					Me.SendPropertyChanged("Trans_Type")
					Me.OnTrans_TypeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PartnerID", DbType:="VarChar(32)")>  _
		Public Property PartnerID() As String
			Get
				Return Me._PartnerID
			End Get
			Set
				If (String.Equals(Me._PartnerID, value) = false) Then
					Me.OnPartnerIDChanging(value)
					Me.SendPropertyChanging
					Me._PartnerID = value
					Me.SendPropertyChanged("PartnerID")
					Me.OnPartnerIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PartnerName", DbType:="VarChar(64)")>  _
		Public Property PartnerName() As String
			Get
				Return Me._PartnerName
			End Get
			Set
				If (String.Equals(Me._PartnerName, value) = false) Then
					Me.OnPartnerNameChanging(value)
					Me.SendPropertyChanging
					Me._PartnerName = value
					Me.SendPropertyChanged("PartnerName")
					Me.OnPartnerNameChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TotalAmount", DbType:="Money")>  _
		Public Property TotalAmount() As System.Nullable(Of Decimal)
			Get
				Return Me._TotalAmount
			End Get
			Set
				If (Me._TotalAmount.Equals(value) = false) Then
					Me.OnTotalAmountChanging(value)
					Me.SendPropertyChanging
					Me._TotalAmount = value
					Me.SendPropertyChanged("TotalAmount")
					Me.OnTotalAmountChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Deleted", DbType:="TinyInt")>  _
		Public Property Deleted() As System.Nullable(Of Byte)
			Get
				Return Me._Deleted
			End Get
			Set
				If (Me._Deleted.Equals(value) = false) Then
					Me.OnDeletedChanging(value)
					Me.SendPropertyChanging
					Me._Deleted = value
					Me.SendPropertyChanged("Deleted")
					Me.OnDeletedChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Active", DbType:="TinyInt")>  _
		Public Property Active() As System.Nullable(Of Byte)
			Get
				Return Me._Active
			End Get
			Set
				If (Me._Active.Equals(value) = false) Then
					Me.OnActiveChanging(value)
					Me.SendPropertyChanging
					Me._Active = value
					Me.SendPropertyChanged("Active")
					Me.OnActiveChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Remarks", DbType:="VarChar(255)")>  _
		Public Property Remarks() As String
			Get
				Return Me._Remarks
			End Get
			Set
				If (String.Equals(Me._Remarks, value) = false) Then
					Me.OnRemarksChanging(value)
					Me.SendPropertyChanging
					Me._Remarks = value
					Me.SendPropertyChanged("Remarks")
					Me.OnRemarksChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tag", DbType:="VarChar(255)")>  _
		Public Property Tag() As String
			Get
				Return Me._Tag
			End Get
			Set
				If (String.Equals(Me._Tag, value) = false) Then
					Me.OnTagChanging(value)
					Me.SendPropertyChanging
					Me._Tag = value
					Me.SendPropertyChanged("Tag")
					Me.OnTagChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TransGUID", DbType:="Char(10)")>  _
		Public Property TransGUID() As String
			Get
				Return Me._TransGUID
			End Get
			Set
				If (String.Equals(Me._TransGUID, value) = false) Then
					Me.OnTransGUIDChanging(value)
					Me.SendPropertyChanging
					Me._TransGUID = value
					Me.SendPropertyChanged("TransGUID")
					Me.OnTransGUIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubmittedOn", DbType:="DateTime")>  _
		Public Property SubmittedOn() As System.Nullable(Of Date)
			Get
				Return Me._SubmittedOn
			End Get
			Set
				If (Me._SubmittedOn.Equals(value) = false) Then
					Me.OnSubmittedOnChanging(value)
					Me.SendPropertyChanging
					Me._SubmittedOn = value
					Me.SendPropertyChanged("SubmittedOn")
					Me.OnSubmittedOnChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubmittedBy", DbType:="VarChar(50)")>  _
		Public Property SubmittedBy() As String
			Get
				Return Me._SubmittedBy
			End Get
			Set
				If (String.Equals(Me._SubmittedBy, value) = false) Then
					Me.OnSubmittedByChanging(value)
					Me.SendPropertyChanging
					Me._SubmittedBy = value
					Me.SendPropertyChanged("SubmittedBy")
					Me.OnSubmittedByChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModiffiedOn", DbType:="DateTime")>  _
		Public Property ModiffiedOn() As System.Nullable(Of Date)
			Get
				Return Me._ModiffiedOn
			End Get
			Set
				If (Me._ModiffiedOn.Equals(value) = false) Then
					Me.OnModiffiedOnChanging(value)
					Me.SendPropertyChanging
					Me._ModiffiedOn = value
					Me.SendPropertyChanged("ModiffiedOn")
					Me.OnModiffiedOnChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModiffiedBy", DbType:="VarChar(50)")>  _
		Public Property ModiffiedBy() As String
			Get
				Return Me._ModiffiedBy
			End Get
			Set
				If (String.Equals(Me._ModiffiedBy, value) = false) Then
					Me.OnModiffiedByChanging(value)
					Me.SendPropertyChanging
					Me._ModiffiedBy = value
					Me.SendPropertyChanged("ModiffiedBy")
					Me.OnModiffiedByChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApprovedOn", DbType:="DateTime")>  _
		Public Property ApprovedOn() As System.Nullable(Of Date)
			Get
				Return Me._ApprovedOn
			End Get
			Set
				If (Me._ApprovedOn.Equals(value) = false) Then
					Me.OnApprovedOnChanging(value)
					Me.SendPropertyChanging
					Me._ApprovedOn = value
					Me.SendPropertyChanged("ApprovedOn")
					Me.OnApprovedOnChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApprovedBy", DbType:="VarChar(50)")>  _
		Public Property ApprovedBy() As String
			Get
				Return Me._ApprovedBy
			End Get
			Set
				If (String.Equals(Me._ApprovedBy, value) = false) Then
					Me.OnApprovedByChanging(value)
					Me.SendPropertyChanging
					Me._ApprovedBy = value
					Me.SendPropertyChanged("ApprovedBy")
					Me.OnApprovedByChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TransactionDetails")>  _
	Partial Public Class TransactionDetail
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _DetailsID As Long
		
		Private _ProductID As String
		
		Private _ProductName As String
		
		Private _QtyOrder As System.Nullable(Of Decimal)
		
		Private _SellingPrice As System.Nullable(Of Decimal)
		
		Private _TotalAmt As System.Nullable(Of Decimal)
		
		Private _InvoiceID As String
		
		Private _QtyLoaded As System.Nullable(Of Decimal)
		
		Private _Remarks As String
		
		Private _Tag As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnDetailsIDChanging(value As Long)
    End Sub
    Partial Private Sub OnDetailsIDChanged()
    End Sub
    Partial Private Sub OnProductIDChanging(value As String)
    End Sub
    Partial Private Sub OnProductIDChanged()
    End Sub
    Partial Private Sub OnProductNameChanging(value As String)
    End Sub
    Partial Private Sub OnProductNameChanged()
    End Sub
    Partial Private Sub OnQtyOrderChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnQtyOrderChanged()
    End Sub
    Partial Private Sub OnSellingPriceChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnSellingPriceChanged()
    End Sub
    Partial Private Sub OnTotalAmtChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnTotalAmtChanged()
    End Sub
    Partial Private Sub OnInvoiceIDChanging(value As String)
    End Sub
    Partial Private Sub OnInvoiceIDChanged()
    End Sub
    Partial Private Sub OnQtyLoadedChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnQtyLoadedChanged()
    End Sub
    Partial Private Sub OnRemarksChanging(value As String)
    End Sub
    Partial Private Sub OnRemarksChanged()
    End Sub
    Partial Private Sub OnTagChanging(value As String)
    End Sub
    Partial Private Sub OnTagChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DetailsID", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property DetailsID() As Long
			Get
				Return Me._DetailsID
			End Get
			Set
				If ((Me._DetailsID = value)  _
							= false) Then
					Me.OnDetailsIDChanging(value)
					Me.SendPropertyChanging
					Me._DetailsID = value
					Me.SendPropertyChanged("DetailsID")
					Me.OnDetailsIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProductID", DbType:="VarChar(32)")>  _
		Public Property ProductID() As String
			Get
				Return Me._ProductID
			End Get
			Set
				If (String.Equals(Me._ProductID, value) = false) Then
					Me.OnProductIDChanging(value)
					Me.SendPropertyChanging
					Me._ProductID = value
					Me.SendPropertyChanged("ProductID")
					Me.OnProductIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProductName", DbType:="VarChar(64)")>  _
		Public Property ProductName() As String
			Get
				Return Me._ProductName
			End Get
			Set
				If (String.Equals(Me._ProductName, value) = false) Then
					Me.OnProductNameChanging(value)
					Me.SendPropertyChanging
					Me._ProductName = value
					Me.SendPropertyChanged("ProductName")
					Me.OnProductNameChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QtyOrder", DbType:="Decimal(19,4)")>  _
		Public Property QtyOrder() As System.Nullable(Of Decimal)
			Get
				Return Me._QtyOrder
			End Get
			Set
				If (Me._QtyOrder.Equals(value) = false) Then
					Me.OnQtyOrderChanging(value)
					Me.SendPropertyChanging
					Me._QtyOrder = value
					Me.SendPropertyChanged("QtyOrder")
					Me.OnQtyOrderChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SellingPrice", DbType:="Money")>  _
		Public Property SellingPrice() As System.Nullable(Of Decimal)
			Get
				Return Me._SellingPrice
			End Get
			Set
				If (Me._SellingPrice.Equals(value) = false) Then
					Me.OnSellingPriceChanging(value)
					Me.SendPropertyChanging
					Me._SellingPrice = value
					Me.SendPropertyChanged("SellingPrice")
					Me.OnSellingPriceChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TotalAmt", DbType:="Money")>  _
		Public Property TotalAmt() As System.Nullable(Of Decimal)
			Get
				Return Me._TotalAmt
			End Get
			Set
				If (Me._TotalAmt.Equals(value) = false) Then
					Me.OnTotalAmtChanging(value)
					Me.SendPropertyChanging
					Me._TotalAmt = value
					Me.SendPropertyChanged("TotalAmt")
					Me.OnTotalAmtChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InvoiceID", DbType:="VarChar(50)")>  _
		Public Property InvoiceID() As String
			Get
				Return Me._InvoiceID
			End Get
			Set
				If (String.Equals(Me._InvoiceID, value) = false) Then
					Me.OnInvoiceIDChanging(value)
					Me.SendPropertyChanging
					Me._InvoiceID = value
					Me.SendPropertyChanged("InvoiceID")
					Me.OnInvoiceIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QtyLoaded", DbType:="Decimal(19,4)")>  _
		Public Property QtyLoaded() As System.Nullable(Of Decimal)
			Get
				Return Me._QtyLoaded
			End Get
			Set
				If (Me._QtyLoaded.Equals(value) = false) Then
					Me.OnQtyLoadedChanging(value)
					Me.SendPropertyChanging
					Me._QtyLoaded = value
					Me.SendPropertyChanged("QtyLoaded")
					Me.OnQtyLoadedChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Remarks", DbType:="VarChar(255)")>  _
		Public Property Remarks() As String
			Get
				Return Me._Remarks
			End Get
			Set
				If (String.Equals(Me._Remarks, value) = false) Then
					Me.OnRemarksChanging(value)
					Me.SendPropertyChanging
					Me._Remarks = value
					Me.SendPropertyChanged("Remarks")
					Me.OnRemarksChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tag", DbType:="VarChar(255)")>  _
		Public Property Tag() As String
			Get
				Return Me._Tag
			End Get
			Set
				If (String.Equals(Me._Tag, value) = false) Then
					Me.OnTagChanging(value)
					Me.SendPropertyChanging
					Me._Tag = value
					Me.SendPropertyChanged("Tag")
					Me.OnTagChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.HPayAllowance")>  _
	Partial Public Class HPayAllowance
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _HID As Long
		
		Private _AllowID As Long
		
		Private _AllowName As String
		
		Private _Value1 As System.Nullable(Of Decimal)
		
		Private _Steps As String
		
		Private _GradeID As System.Nullable(Of Long)
		
		Private _Grade As String
		
		Private _Deleted As System.Nullable(Of Byte)
		
		Private _Active As System.Nullable(Of Byte)
		
		Private _Submitby As String
		
		Private _SubmitOn As System.Nullable(Of Date)
		
		Private _ModifiedBy As String
		
		Private _ModifiedOn As System.Nullable(Of Date)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnHIDChanging(value As Long)
    End Sub
    Partial Private Sub OnHIDChanged()
    End Sub
    Partial Private Sub OnAllowIDChanging(value As Long)
    End Sub
    Partial Private Sub OnAllowIDChanged()
    End Sub
    Partial Private Sub OnAllowNameChanging(value As String)
    End Sub
    Partial Private Sub OnAllowNameChanged()
    End Sub
    Partial Private Sub OnValue1Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnValue1Changed()
    End Sub
    Partial Private Sub OnStepsChanging(value As String)
    End Sub
    Partial Private Sub OnStepsChanged()
    End Sub
    Partial Private Sub OnGradeIDChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnGradeIDChanged()
    End Sub
    Partial Private Sub OnGradeChanging(value As String)
    End Sub
    Partial Private Sub OnGradeChanged()
    End Sub
    Partial Private Sub OnDeletedChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnDeletedChanged()
    End Sub
    Partial Private Sub OnActiveChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnActiveChanged()
    End Sub
    Partial Private Sub OnSubmitbyChanging(value As String)
    End Sub
    Partial Private Sub OnSubmitbyChanged()
    End Sub
    Partial Private Sub OnSubmitOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSubmitOnChanged()
    End Sub
    Partial Private Sub OnModifiedByChanging(value As String)
    End Sub
    Partial Private Sub OnModifiedByChanged()
    End Sub
    Partial Private Sub OnModifiedOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnModifiedOnChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HID", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property HID() As Long
			Get
				Return Me._HID
			End Get
			Set
				If ((Me._HID = value)  _
							= false) Then
					Me.OnHIDChanging(value)
					Me.SendPropertyChanging
					Me._HID = value
					Me.SendPropertyChanged("HID")
					Me.OnHIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AllowID", DbType:="BigInt NOT NULL")>  _
		Public Property AllowID() As Long
			Get
				Return Me._AllowID
			End Get
			Set
				If ((Me._AllowID = value)  _
							= false) Then
					Me.OnAllowIDChanging(value)
					Me.SendPropertyChanging
					Me._AllowID = value
					Me.SendPropertyChanged("AllowID")
					Me.OnAllowIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AllowName", DbType:="VarChar(64)")>  _
		Public Property AllowName() As String
			Get
				Return Me._AllowName
			End Get
			Set
				If (String.Equals(Me._AllowName, value) = false) Then
					Me.OnAllowNameChanging(value)
					Me.SendPropertyChanging
					Me._AllowName = value
					Me.SendPropertyChanged("AllowName")
					Me.OnAllowNameChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Value1", DbType:="Money")>  _
		Public Property Value1() As System.Nullable(Of Decimal)
			Get
				Return Me._Value1
			End Get
			Set
				If (Me._Value1.Equals(value) = false) Then
					Me.OnValue1Changing(value)
					Me.SendPropertyChanging
					Me._Value1 = value
					Me.SendPropertyChanged("Value1")
					Me.OnValue1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Steps", DbType:="VarChar(64)")>  _
		Public Property Steps() As String
			Get
				Return Me._Steps
			End Get
			Set
				If (String.Equals(Me._Steps, value) = false) Then
					Me.OnStepsChanging(value)
					Me.SendPropertyChanging
					Me._Steps = value
					Me.SendPropertyChanged("Steps")
					Me.OnStepsChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GradeID", DbType:="BigInt")>  _
		Public Property GradeID() As System.Nullable(Of Long)
			Get
				Return Me._GradeID
			End Get
			Set
				If (Me._GradeID.Equals(value) = false) Then
					Me.OnGradeIDChanging(value)
					Me.SendPropertyChanging
					Me._GradeID = value
					Me.SendPropertyChanged("GradeID")
					Me.OnGradeIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Grade", DbType:="VarChar(64) NOT NULL", CanBeNull:=false)>  _
		Public Property Grade() As String
			Get
				Return Me._Grade
			End Get
			Set
				If (String.Equals(Me._Grade, value) = false) Then
					Me.OnGradeChanging(value)
					Me.SendPropertyChanging
					Me._Grade = value
					Me.SendPropertyChanged("Grade")
					Me.OnGradeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Deleted", DbType:="TinyInt")>  _
		Public Property Deleted() As System.Nullable(Of Byte)
			Get
				Return Me._Deleted
			End Get
			Set
				If (Me._Deleted.Equals(value) = false) Then
					Me.OnDeletedChanging(value)
					Me.SendPropertyChanging
					Me._Deleted = value
					Me.SendPropertyChanged("Deleted")
					Me.OnDeletedChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Active", DbType:="TinyInt")>  _
		Public Property Active() As System.Nullable(Of Byte)
			Get
				Return Me._Active
			End Get
			Set
				If (Me._Active.Equals(value) = false) Then
					Me.OnActiveChanging(value)
					Me.SendPropertyChanging
					Me._Active = value
					Me.SendPropertyChanged("Active")
					Me.OnActiveChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Submitby", DbType:="VarChar(32)")>  _
		Public Property Submitby() As String
			Get
				Return Me._Submitby
			End Get
			Set
				If (String.Equals(Me._Submitby, value) = false) Then
					Me.OnSubmitbyChanging(value)
					Me.SendPropertyChanging
					Me._Submitby = value
					Me.SendPropertyChanged("Submitby")
					Me.OnSubmitbyChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubmitOn", DbType:="DateTime")>  _
		Public Property SubmitOn() As System.Nullable(Of Date)
			Get
				Return Me._SubmitOn
			End Get
			Set
				If (Me._SubmitOn.Equals(value) = false) Then
					Me.OnSubmitOnChanging(value)
					Me.SendPropertyChanging
					Me._SubmitOn = value
					Me.SendPropertyChanged("SubmitOn")
					Me.OnSubmitOnChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedBy", DbType:="VarChar(32)")>  _
		Public Property ModifiedBy() As String
			Get
				Return Me._ModifiedBy
			End Get
			Set
				If (String.Equals(Me._ModifiedBy, value) = false) Then
					Me.OnModifiedByChanging(value)
					Me.SendPropertyChanging
					Me._ModifiedBy = value
					Me.SendPropertyChanged("ModifiedBy")
					Me.OnModifiedByChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedOn", DbType:="DateTime")>  _
		Public Property ModifiedOn() As System.Nullable(Of Date)
			Get
				Return Me._ModifiedOn
			End Get
			Set
				If (Me._ModifiedOn.Equals(value) = false) Then
					Me.OnModifiedOnChanging(value)
					Me.SendPropertyChanging
					Me._ModifiedOn = value
					Me.SendPropertyChanged("ModifiedOn")
					Me.OnModifiedOnChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.HPayDeductions")>  _
	Partial Public Class HPayDeduction
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _HID As Long
		
		Private _DedID As System.Nullable(Of Long)
		
		Private _DedName As String
		
		Private _Value1 As System.Nullable(Of Decimal)
		
		Private _Steps As String
		
		Private _GradeID As System.Nullable(Of Long)
		
		Private _Grade As String
		
		Private _DSTATUS As System.Nullable(Of Char)
		
		Private _Deleted As Byte
		
		Private _Active As System.Nullable(Of Byte)
		
		Private _Submitby As String
		
		Private _SubmitOn As System.Nullable(Of Date)
		
		Private _ModifiedBy As String
		
		Private _ModifiedOn As System.Nullable(Of Date)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnHIDChanging(value As Long)
    End Sub
    Partial Private Sub OnHIDChanged()
    End Sub
    Partial Private Sub OnDedIDChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnDedIDChanged()
    End Sub
    Partial Private Sub OnDedNameChanging(value As String)
    End Sub
    Partial Private Sub OnDedNameChanged()
    End Sub
    Partial Private Sub OnValue1Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnValue1Changed()
    End Sub
    Partial Private Sub OnStepsChanging(value As String)
    End Sub
    Partial Private Sub OnStepsChanged()
    End Sub
    Partial Private Sub OnGradeIDChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnGradeIDChanged()
    End Sub
    Partial Private Sub OnGradeChanging(value As String)
    End Sub
    Partial Private Sub OnGradeChanged()
    End Sub
    Partial Private Sub OnDSTATUSChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnDSTATUSChanged()
    End Sub
    Partial Private Sub OnDeletedChanging(value As Byte)
    End Sub
    Partial Private Sub OnDeletedChanged()
    End Sub
    Partial Private Sub OnActiveChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnActiveChanged()
    End Sub
    Partial Private Sub OnSubmitbyChanging(value As String)
    End Sub
    Partial Private Sub OnSubmitbyChanged()
    End Sub
    Partial Private Sub OnSubmitOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSubmitOnChanged()
    End Sub
    Partial Private Sub OnModifiedByChanging(value As String)
    End Sub
    Partial Private Sub OnModifiedByChanged()
    End Sub
    Partial Private Sub OnModifiedOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnModifiedOnChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HID", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property HID() As Long
			Get
				Return Me._HID
			End Get
			Set
				If ((Me._HID = value)  _
							= false) Then
					Me.OnHIDChanging(value)
					Me.SendPropertyChanging
					Me._HID = value
					Me.SendPropertyChanged("HID")
					Me.OnHIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DedID", DbType:="BigInt")>  _
		Public Property DedID() As System.Nullable(Of Long)
			Get
				Return Me._DedID
			End Get
			Set
				If (Me._DedID.Equals(value) = false) Then
					Me.OnDedIDChanging(value)
					Me.SendPropertyChanging
					Me._DedID = value
					Me.SendPropertyChanged("DedID")
					Me.OnDedIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DedName", DbType:="VarChar(150)")>  _
		Public Property DedName() As String
			Get
				Return Me._DedName
			End Get
			Set
				If (String.Equals(Me._DedName, value) = false) Then
					Me.OnDedNameChanging(value)
					Me.SendPropertyChanging
					Me._DedName = value
					Me.SendPropertyChanged("DedName")
					Me.OnDedNameChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Value1", DbType:="Money")>  _
		Public Property Value1() As System.Nullable(Of Decimal)
			Get
				Return Me._Value1
			End Get
			Set
				If (Me._Value1.Equals(value) = false) Then
					Me.OnValue1Changing(value)
					Me.SendPropertyChanging
					Me._Value1 = value
					Me.SendPropertyChanged("Value1")
					Me.OnValue1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Steps", DbType:="VarChar(255)")>  _
		Public Property Steps() As String
			Get
				Return Me._Steps
			End Get
			Set
				If (String.Equals(Me._Steps, value) = false) Then
					Me.OnStepsChanging(value)
					Me.SendPropertyChanging
					Me._Steps = value
					Me.SendPropertyChanged("Steps")
					Me.OnStepsChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GradeID", DbType:="BigInt")>  _
		Public Property GradeID() As System.Nullable(Of Long)
			Get
				Return Me._GradeID
			End Get
			Set
				If (Me._GradeID.Equals(value) = false) Then
					Me.OnGradeIDChanging(value)
					Me.SendPropertyChanging
					Me._GradeID = value
					Me.SendPropertyChanged("GradeID")
					Me.OnGradeIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Grade", DbType:="VarChar(255)")>  _
		Public Property Grade() As String
			Get
				Return Me._Grade
			End Get
			Set
				If (String.Equals(Me._Grade, value) = false) Then
					Me.OnGradeChanging(value)
					Me.SendPropertyChanging
					Me._Grade = value
					Me.SendPropertyChanged("Grade")
					Me.OnGradeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DSTATUS", DbType:="VarChar(1)")>  _
		Public Property DSTATUS() As System.Nullable(Of Char)
			Get
				Return Me._DSTATUS
			End Get
			Set
				If (Me._DSTATUS.Equals(value) = false) Then
					Me.OnDSTATUSChanging(value)
					Me.SendPropertyChanging
					Me._DSTATUS = value
					Me.SendPropertyChanged("DSTATUS")
					Me.OnDSTATUSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Deleted", DbType:="TinyInt NOT NULL")>  _
		Public Property Deleted() As Byte
			Get
				Return Me._Deleted
			End Get
			Set
				If ((Me._Deleted = value)  _
							= false) Then
					Me.OnDeletedChanging(value)
					Me.SendPropertyChanging
					Me._Deleted = value
					Me.SendPropertyChanged("Deleted")
					Me.OnDeletedChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Active", DbType:="TinyInt")>  _
		Public Property Active() As System.Nullable(Of Byte)
			Get
				Return Me._Active
			End Get
			Set
				If (Me._Active.Equals(value) = false) Then
					Me.OnActiveChanging(value)
					Me.SendPropertyChanging
					Me._Active = value
					Me.SendPropertyChanged("Active")
					Me.OnActiveChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Submitby", DbType:="VarChar(50)")>  _
		Public Property Submitby() As String
			Get
				Return Me._Submitby
			End Get
			Set
				If (String.Equals(Me._Submitby, value) = false) Then
					Me.OnSubmitbyChanging(value)
					Me.SendPropertyChanging
					Me._Submitby = value
					Me.SendPropertyChanged("Submitby")
					Me.OnSubmitbyChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubmitOn", DbType:="DateTime")>  _
		Public Property SubmitOn() As System.Nullable(Of Date)
			Get
				Return Me._SubmitOn
			End Get
			Set
				If (Me._SubmitOn.Equals(value) = false) Then
					Me.OnSubmitOnChanging(value)
					Me.SendPropertyChanging
					Me._SubmitOn = value
					Me.SendPropertyChanged("SubmitOn")
					Me.OnSubmitOnChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedBy", DbType:="VarChar(50)")>  _
		Public Property ModifiedBy() As String
			Get
				Return Me._ModifiedBy
			End Get
			Set
				If (String.Equals(Me._ModifiedBy, value) = false) Then
					Me.OnModifiedByChanging(value)
					Me.SendPropertyChanging
					Me._ModifiedBy = value
					Me.SendPropertyChanged("ModifiedBy")
					Me.OnModifiedByChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedOn", DbType:="DateTime")>  _
		Public Property ModifiedOn() As System.Nullable(Of Date)
			Get
				Return Me._ModifiedOn
			End Get
			Set
				If (Me._ModifiedOn.Equals(value) = false) Then
					Me.OnModifiedOnChanging(value)
					Me.SendPropertyChanging
					Me._ModifiedOn = value
					Me.SendPropertyChanged("ModifiedOn")
					Me.OnModifiedOnChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Settings")>  _
	Partial Public Class Setting
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _ID As Integer
		
		Private _Setting As String
		
		Private _Value As String
		
		Private _Desc As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnSettingChanging(value As String)
    End Sub
    Partial Private Sub OnSettingChanged()
    End Sub
    Partial Private Sub OnValueChanging(value As String)
    End Sub
    Partial Private Sub OnValueChanged()
    End Sub
    Partial Private Sub OnDescChanging(value As String)
    End Sub
    Partial Private Sub OnDescChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property ID() As Integer
			Get
				Return Me._ID
			End Get
			Set
				If ((Me._ID = value)  _
							= false) Then
					Me.OnIDChanging(value)
					Me.SendPropertyChanging
					Me._ID = value
					Me.SendPropertyChanged("ID")
					Me.OnIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Setting", DbType:="VarChar(255)")>  _
		Public Property Setting() As String
			Get
				Return Me._Setting
			End Get
			Set
				If (String.Equals(Me._Setting, value) = false) Then
					Me.OnSettingChanging(value)
					Me.SendPropertyChanging
					Me._Setting = value
					Me.SendPropertyChanged("Setting")
					Me.OnSettingChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Value", DbType:="VarChar(255)")>  _
		Public Property Value() As String
			Get
				Return Me._Value
			End Get
			Set
				If (String.Equals(Me._Value, value) = false) Then
					Me.OnValueChanging(value)
					Me.SendPropertyChanging
					Me._Value = value
					Me.SendPropertyChanged("Value")
					Me.OnValueChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[Desc]", Storage:="_Desc", DbType:="VarChar(255)")>  _
		Public Property Desc() As String
			Get
				Return Me._Desc
			End Get
			Set
				If (String.Equals(Me._Desc, value) = false) Then
					Me.OnDescChanging(value)
					Me.SendPropertyChanging
					Me._Desc = value
					Me.SendPropertyChanged("Desc")
					Me.OnDescChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.LoanAccts")>  _
	Partial Public Class LoanAcct
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _LoanAcctID As Long
		
		Private _EmployeeID As String
		
		Private _LoanType As String
		
		Private _MonthDate As System.Nullable(Of Date)
		
		Private _DedID As System.Nullable(Of Long)
		
		Private _LoanName As String
		
		Private _LoanAmount As System.Nullable(Of Decimal)
		
		Private _StartDate As System.Nullable(Of Date)
		
		Private _IntRate As System.Nullable(Of Decimal)
		
		Private _NetLoanAmt As System.Nullable(Of Decimal)
		
		Private _IntAmt As System.Nullable(Of Decimal)
		
		Private _MonthLoanAmt As System.Nullable(Of Decimal)
		
		Private _PrincipalAmt As System.Nullable(Of Decimal)
		
		Private _NetAmount As System.Nullable(Of Decimal)
		
		Private _A1 As System.Nullable(Of Long)
		
		Private _A2 As System.Nullable(Of Long)
		
		Private _Duration As System.Nullable(Of Long)
		
		Private _Period As String
		
		Private _Deleted As System.Nullable(Of Byte)
		
		Private _Active As System.Nullable(Of Byte)
		
		Private _TransSTATUS As String
		
		Private _TransGuid As String
		
		Private _Submittedby As String
		
		Private _SubmittedOn As System.Nullable(Of Date)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnLoanAcctIDChanging(value As Long)
    End Sub
    Partial Private Sub OnLoanAcctIDChanged()
    End Sub
    Partial Private Sub OnEmployeeIDChanging(value As String)
    End Sub
    Partial Private Sub OnEmployeeIDChanged()
    End Sub
    Partial Private Sub OnLoanTypeChanging(value As String)
    End Sub
    Partial Private Sub OnLoanTypeChanged()
    End Sub
    Partial Private Sub OnMonthDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnMonthDateChanged()
    End Sub
    Partial Private Sub OnDedIDChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnDedIDChanged()
    End Sub
    Partial Private Sub OnLoanNameChanging(value As String)
    End Sub
    Partial Private Sub OnLoanNameChanged()
    End Sub
    Partial Private Sub OnLoanAmountChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnLoanAmountChanged()
    End Sub
    Partial Private Sub OnStartDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnStartDateChanged()
    End Sub
    Partial Private Sub OnIntRateChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnIntRateChanged()
    End Sub
    Partial Private Sub OnNetLoanAmtChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnNetLoanAmtChanged()
    End Sub
    Partial Private Sub OnIntAmtChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnIntAmtChanged()
    End Sub
    Partial Private Sub OnMonthLoanAmtChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnMonthLoanAmtChanged()
    End Sub
    Partial Private Sub OnPrincipalAmtChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnPrincipalAmtChanged()
    End Sub
    Partial Private Sub OnNetAmountChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnNetAmountChanged()
    End Sub
    Partial Private Sub OnA1Changing(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnA1Changed()
    End Sub
    Partial Private Sub OnA2Changing(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnA2Changed()
    End Sub
    Partial Private Sub OnDurationChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnDurationChanged()
    End Sub
    Partial Private Sub OnPeriodChanging(value As String)
    End Sub
    Partial Private Sub OnPeriodChanged()
    End Sub
    Partial Private Sub OnDeletedChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnDeletedChanged()
    End Sub
    Partial Private Sub OnActiveChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnActiveChanged()
    End Sub
    Partial Private Sub OnTransSTATUSChanging(value As String)
    End Sub
    Partial Private Sub OnTransSTATUSChanged()
    End Sub
    Partial Private Sub OnTransGuidChanging(value As String)
    End Sub
    Partial Private Sub OnTransGuidChanged()
    End Sub
    Partial Private Sub OnSubmittedbyChanging(value As String)
    End Sub
    Partial Private Sub OnSubmittedbyChanged()
    End Sub
    Partial Private Sub OnSubmittedOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSubmittedOnChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LoanAcctID", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property LoanAcctID() As Long
			Get
				Return Me._LoanAcctID
			End Get
			Set
				If ((Me._LoanAcctID = value)  _
							= false) Then
					Me.OnLoanAcctIDChanging(value)
					Me.SendPropertyChanging
					Me._LoanAcctID = value
					Me.SendPropertyChanged("LoanAcctID")
					Me.OnLoanAcctIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EmployeeID", DbType:="VarChar(32) NOT NULL", CanBeNull:=false)>  _
		Public Property EmployeeID() As String
			Get
				Return Me._EmployeeID
			End Get
			Set
				If (String.Equals(Me._EmployeeID, value) = false) Then
					Me.OnEmployeeIDChanging(value)
					Me.SendPropertyChanging
					Me._EmployeeID = value
					Me.SendPropertyChanged("EmployeeID")
					Me.OnEmployeeIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LoanType", DbType:="VarChar(32)")>  _
		Public Property LoanType() As String
			Get
				Return Me._LoanType
			End Get
			Set
				If (String.Equals(Me._LoanType, value) = false) Then
					Me.OnLoanTypeChanging(value)
					Me.SendPropertyChanging
					Me._LoanType = value
					Me.SendPropertyChanged("LoanType")
					Me.OnLoanTypeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MonthDate", DbType:="DateTime")>  _
		Public Property MonthDate() As System.Nullable(Of Date)
			Get
				Return Me._MonthDate
			End Get
			Set
				If (Me._MonthDate.Equals(value) = false) Then
					Me.OnMonthDateChanging(value)
					Me.SendPropertyChanging
					Me._MonthDate = value
					Me.SendPropertyChanged("MonthDate")
					Me.OnMonthDateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DedID", DbType:="BigInt")>  _
		Public Property DedID() As System.Nullable(Of Long)
			Get
				Return Me._DedID
			End Get
			Set
				If (Me._DedID.Equals(value) = false) Then
					Me.OnDedIDChanging(value)
					Me.SendPropertyChanging
					Me._DedID = value
					Me.SendPropertyChanged("DedID")
					Me.OnDedIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LoanName", DbType:="VarChar(32)")>  _
		Public Property LoanName() As String
			Get
				Return Me._LoanName
			End Get
			Set
				If (String.Equals(Me._LoanName, value) = false) Then
					Me.OnLoanNameChanging(value)
					Me.SendPropertyChanging
					Me._LoanName = value
					Me.SendPropertyChanged("LoanName")
					Me.OnLoanNameChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LoanAmount", DbType:="Money")>  _
		Public Property LoanAmount() As System.Nullable(Of Decimal)
			Get
				Return Me._LoanAmount
			End Get
			Set
				If (Me._LoanAmount.Equals(value) = false) Then
					Me.OnLoanAmountChanging(value)
					Me.SendPropertyChanging
					Me._LoanAmount = value
					Me.SendPropertyChanged("LoanAmount")
					Me.OnLoanAmountChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StartDate", DbType:="DateTime")>  _
		Public Property StartDate() As System.Nullable(Of Date)
			Get
				Return Me._StartDate
			End Get
			Set
				If (Me._StartDate.Equals(value) = false) Then
					Me.OnStartDateChanging(value)
					Me.SendPropertyChanging
					Me._StartDate = value
					Me.SendPropertyChanged("StartDate")
					Me.OnStartDateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IntRate", DbType:="Money")>  _
		Public Property IntRate() As System.Nullable(Of Decimal)
			Get
				Return Me._IntRate
			End Get
			Set
				If (Me._IntRate.Equals(value) = false) Then
					Me.OnIntRateChanging(value)
					Me.SendPropertyChanging
					Me._IntRate = value
					Me.SendPropertyChanged("IntRate")
					Me.OnIntRateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NetLoanAmt", DbType:="Money")>  _
		Public Property NetLoanAmt() As System.Nullable(Of Decimal)
			Get
				Return Me._NetLoanAmt
			End Get
			Set
				If (Me._NetLoanAmt.Equals(value) = false) Then
					Me.OnNetLoanAmtChanging(value)
					Me.SendPropertyChanging
					Me._NetLoanAmt = value
					Me.SendPropertyChanged("NetLoanAmt")
					Me.OnNetLoanAmtChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IntAmt", DbType:="Money")>  _
		Public Property IntAmt() As System.Nullable(Of Decimal)
			Get
				Return Me._IntAmt
			End Get
			Set
				If (Me._IntAmt.Equals(value) = false) Then
					Me.OnIntAmtChanging(value)
					Me.SendPropertyChanging
					Me._IntAmt = value
					Me.SendPropertyChanged("IntAmt")
					Me.OnIntAmtChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MonthLoanAmt", DbType:="Money")>  _
		Public Property MonthLoanAmt() As System.Nullable(Of Decimal)
			Get
				Return Me._MonthLoanAmt
			End Get
			Set
				If (Me._MonthLoanAmt.Equals(value) = false) Then
					Me.OnMonthLoanAmtChanging(value)
					Me.SendPropertyChanging
					Me._MonthLoanAmt = value
					Me.SendPropertyChanged("MonthLoanAmt")
					Me.OnMonthLoanAmtChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PrincipalAmt", DbType:="Money")>  _
		Public Property PrincipalAmt() As System.Nullable(Of Decimal)
			Get
				Return Me._PrincipalAmt
			End Get
			Set
				If (Me._PrincipalAmt.Equals(value) = false) Then
					Me.OnPrincipalAmtChanging(value)
					Me.SendPropertyChanging
					Me._PrincipalAmt = value
					Me.SendPropertyChanged("PrincipalAmt")
					Me.OnPrincipalAmtChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NetAmount", DbType:="Money")>  _
		Public Property NetAmount() As System.Nullable(Of Decimal)
			Get
				Return Me._NetAmount
			End Get
			Set
				If (Me._NetAmount.Equals(value) = false) Then
					Me.OnNetAmountChanging(value)
					Me.SendPropertyChanging
					Me._NetAmount = value
					Me.SendPropertyChanged("NetAmount")
					Me.OnNetAmountChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A1", DbType:="BigInt")>  _
		Public Property A1() As System.Nullable(Of Long)
			Get
				Return Me._A1
			End Get
			Set
				If (Me._A1.Equals(value) = false) Then
					Me.OnA1Changing(value)
					Me.SendPropertyChanging
					Me._A1 = value
					Me.SendPropertyChanged("A1")
					Me.OnA1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A2", DbType:="BigInt")>  _
		Public Property A2() As System.Nullable(Of Long)
			Get
				Return Me._A2
			End Get
			Set
				If (Me._A2.Equals(value) = false) Then
					Me.OnA2Changing(value)
					Me.SendPropertyChanging
					Me._A2 = value
					Me.SendPropertyChanged("A2")
					Me.OnA2Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Duration", DbType:="BigInt")>  _
		Public Property Duration() As System.Nullable(Of Long)
			Get
				Return Me._Duration
			End Get
			Set
				If (Me._Duration.Equals(value) = false) Then
					Me.OnDurationChanging(value)
					Me.SendPropertyChanging
					Me._Duration = value
					Me.SendPropertyChanged("Duration")
					Me.OnDurationChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Period", DbType:="VarChar(64)")>  _
		Public Property Period() As String
			Get
				Return Me._Period
			End Get
			Set
				If (String.Equals(Me._Period, value) = false) Then
					Me.OnPeriodChanging(value)
					Me.SendPropertyChanging
					Me._Period = value
					Me.SendPropertyChanged("Period")
					Me.OnPeriodChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Deleted", DbType:="TinyInt")>  _
		Public Property Deleted() As System.Nullable(Of Byte)
			Get
				Return Me._Deleted
			End Get
			Set
				If (Me._Deleted.Equals(value) = false) Then
					Me.OnDeletedChanging(value)
					Me.SendPropertyChanging
					Me._Deleted = value
					Me.SendPropertyChanged("Deleted")
					Me.OnDeletedChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Active", DbType:="TinyInt")>  _
		Public Property Active() As System.Nullable(Of Byte)
			Get
				Return Me._Active
			End Get
			Set
				If (Me._Active.Equals(value) = false) Then
					Me.OnActiveChanging(value)
					Me.SendPropertyChanging
					Me._Active = value
					Me.SendPropertyChanged("Active")
					Me.OnActiveChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TransSTATUS", DbType:="VarChar(64)")>  _
		Public Property TransSTATUS() As String
			Get
				Return Me._TransSTATUS
			End Get
			Set
				If (String.Equals(Me._TransSTATUS, value) = false) Then
					Me.OnTransSTATUSChanging(value)
					Me.SendPropertyChanging
					Me._TransSTATUS = value
					Me.SendPropertyChanged("TransSTATUS")
					Me.OnTransSTATUSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TransGuid", DbType:="VarChar(64)")>  _
		Public Property TransGuid() As String
			Get
				Return Me._TransGuid
			End Get
			Set
				If (String.Equals(Me._TransGuid, value) = false) Then
					Me.OnTransGuidChanging(value)
					Me.SendPropertyChanging
					Me._TransGuid = value
					Me.SendPropertyChanged("TransGuid")
					Me.OnTransGuidChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Submittedby", DbType:="VarChar(64)")>  _
		Public Property Submittedby() As String
			Get
				Return Me._Submittedby
			End Get
			Set
				If (String.Equals(Me._Submittedby, value) = false) Then
					Me.OnSubmittedbyChanging(value)
					Me.SendPropertyChanging
					Me._Submittedby = value
					Me.SendPropertyChanged("Submittedby")
					Me.OnSubmittedbyChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubmittedOn", DbType:="DateTime")>  _
		Public Property SubmittedOn() As System.Nullable(Of Date)
			Get
				Return Me._SubmittedOn
			End Get
			Set
				If (Me._SubmittedOn.Equals(value) = false) Then
					Me.OnSubmittedOnChanging(value)
					Me.SendPropertyChanging
					Me._SubmittedOn = value
					Me.SendPropertyChanged("SubmittedOn")
					Me.OnSubmittedOnChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TrainingCadres")>  _
	Partial Public Class TrainingCadre
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _Code As String
		
		Private _Name As String
		
		Private _Remark As String
		
		Private _Tag As String
		
		Private _Deleted As System.Nullable(Of Byte)
		
		Private _Active As System.Nullable(Of Byte)
		
		Private _Submitby As String
		
		Private _SubmitOn As System.Nullable(Of Date)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCodeChanging(value As String)
    End Sub
    Partial Private Sub OnCodeChanged()
    End Sub
    Partial Private Sub OnNameChanging(value As String)
    End Sub
    Partial Private Sub OnNameChanged()
    End Sub
    Partial Private Sub OnRemarkChanging(value As String)
    End Sub
    Partial Private Sub OnRemarkChanged()
    End Sub
    Partial Private Sub OnTagChanging(value As String)
    End Sub
    Partial Private Sub OnTagChanged()
    End Sub
    Partial Private Sub OnDeletedChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnDeletedChanged()
    End Sub
    Partial Private Sub OnActiveChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnActiveChanged()
    End Sub
    Partial Private Sub OnSubmitbyChanging(value As String)
    End Sub
    Partial Private Sub OnSubmitbyChanged()
    End Sub
    Partial Private Sub OnSubmitOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSubmitOnChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Code", DbType:="VarChar(50) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property Code() As String
			Get
				Return Me._Code
			End Get
			Set
				If (String.Equals(Me._Code, value) = false) Then
					Me.OnCodeChanging(value)
					Me.SendPropertyChanging
					Me._Code = value
					Me.SendPropertyChanged("Code")
					Me.OnCodeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="VarChar(110)")>  _
		Public Property Name() As String
			Get
				Return Me._Name
			End Get
			Set
				If (String.Equals(Me._Name, value) = false) Then
					Me.OnNameChanging(value)
					Me.SendPropertyChanging
					Me._Name = value
					Me.SendPropertyChanged("Name")
					Me.OnNameChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Remark", DbType:="VarChar(255)")>  _
		Public Property Remark() As String
			Get
				Return Me._Remark
			End Get
			Set
				If (String.Equals(Me._Remark, value) = false) Then
					Me.OnRemarkChanging(value)
					Me.SendPropertyChanging
					Me._Remark = value
					Me.SendPropertyChanged("Remark")
					Me.OnRemarkChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tag", DbType:="VarChar(50)")>  _
		Public Property Tag() As String
			Get
				Return Me._Tag
			End Get
			Set
				If (String.Equals(Me._Tag, value) = false) Then
					Me.OnTagChanging(value)
					Me.SendPropertyChanging
					Me._Tag = value
					Me.SendPropertyChanged("Tag")
					Me.OnTagChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Deleted", DbType:="TinyInt")>  _
		Public Property Deleted() As System.Nullable(Of Byte)
			Get
				Return Me._Deleted
			End Get
			Set
				If (Me._Deleted.Equals(value) = false) Then
					Me.OnDeletedChanging(value)
					Me.SendPropertyChanging
					Me._Deleted = value
					Me.SendPropertyChanged("Deleted")
					Me.OnDeletedChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Active", DbType:="TinyInt")>  _
		Public Property Active() As System.Nullable(Of Byte)
			Get
				Return Me._Active
			End Get
			Set
				If (Me._Active.Equals(value) = false) Then
					Me.OnActiveChanging(value)
					Me.SendPropertyChanging
					Me._Active = value
					Me.SendPropertyChanged("Active")
					Me.OnActiveChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Submitby", DbType:="VarChar(50)")>  _
		Public Property Submitby() As String
			Get
				Return Me._Submitby
			End Get
			Set
				If (String.Equals(Me._Submitby, value) = false) Then
					Me.OnSubmitbyChanging(value)
					Me.SendPropertyChanging
					Me._Submitby = value
					Me.SendPropertyChanged("Submitby")
					Me.OnSubmitbyChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubmitOn", DbType:="DateTime")>  _
		Public Property SubmitOn() As System.Nullable(Of Date)
			Get
				Return Me._SubmitOn
			End Get
			Set
				If (Me._SubmitOn.Equals(value) = false) Then
					Me.OnSubmitOnChanging(value)
					Me.SendPropertyChanging
					Me._SubmitOn = value
					Me.SendPropertyChanged("SubmitOn")
					Me.OnSubmitOnChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Users")>  _
	Partial Public Class User
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _UserID As Long
		
		Private _Username As String
		
		Private _Password As String
		
		Private _FirstName As String
		
		Private _LastName As String
		
		Private _Address As String
		
		Private _Email As String
		
		Private _Phone As String
		
		Private _PwdExpiry As System.Nullable(Of Date)
		
		Private _SecQuestion As String
		
		Private _SecAnswer As String
		
		Private _LastLoginDate As System.Nullable(Of Date)
		
		Private _EmployeeID As String
		
		Private _Active As System.Nullable(Of Byte)
		
		Private _SubmittedBy As String
		
		Private _SubmittedOn As System.Nullable(Of Date)
		
		Private _ModifiedBy As String
		
		Private _ModifiedOn As System.Nullable(Of Date)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnUserIDChanging(value As Long)
    End Sub
    Partial Private Sub OnUserIDChanged()
    End Sub
    Partial Private Sub OnUsernameChanging(value As String)
    End Sub
    Partial Private Sub OnUsernameChanged()
    End Sub
    Partial Private Sub OnPasswordChanging(value As String)
    End Sub
    Partial Private Sub OnPasswordChanged()
    End Sub
    Partial Private Sub OnFirstNameChanging(value As String)
    End Sub
    Partial Private Sub OnFirstNameChanged()
    End Sub
    Partial Private Sub OnLastNameChanging(value As String)
    End Sub
    Partial Private Sub OnLastNameChanged()
    End Sub
    Partial Private Sub OnAddressChanging(value As String)
    End Sub
    Partial Private Sub OnAddressChanged()
    End Sub
    Partial Private Sub OnEmailChanging(value As String)
    End Sub
    Partial Private Sub OnEmailChanged()
    End Sub
    Partial Private Sub OnPhoneChanging(value As String)
    End Sub
    Partial Private Sub OnPhoneChanged()
    End Sub
    Partial Private Sub OnPwdExpiryChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnPwdExpiryChanged()
    End Sub
    Partial Private Sub OnSecQuestionChanging(value As String)
    End Sub
    Partial Private Sub OnSecQuestionChanged()
    End Sub
    Partial Private Sub OnSecAnswerChanging(value As String)
    End Sub
    Partial Private Sub OnSecAnswerChanged()
    End Sub
    Partial Private Sub OnLastLoginDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnLastLoginDateChanged()
    End Sub
    Partial Private Sub OnEmployeeIDChanging(value As String)
    End Sub
    Partial Private Sub OnEmployeeIDChanged()
    End Sub
    Partial Private Sub OnActiveChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnActiveChanged()
    End Sub
    Partial Private Sub OnSubmittedByChanging(value As String)
    End Sub
    Partial Private Sub OnSubmittedByChanged()
    End Sub
    Partial Private Sub OnSubmittedOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSubmittedOnChanged()
    End Sub
    Partial Private Sub OnModifiedByChanging(value As String)
    End Sub
    Partial Private Sub OnModifiedByChanged()
    End Sub
    Partial Private Sub OnModifiedOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnModifiedOnChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserID", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property UserID() As Long
			Get
				Return Me._UserID
			End Get
			Set
				If ((Me._UserID = value)  _
							= false) Then
					Me.OnUserIDChanging(value)
					Me.SendPropertyChanging
					Me._UserID = value
					Me.SendPropertyChanged("UserID")
					Me.OnUserIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Username", DbType:="VarChar(64) NOT NULL", CanBeNull:=false)>  _
		Public Property Username() As String
			Get
				Return Me._Username
			End Get
			Set
				If (String.Equals(Me._Username, value) = false) Then
					Me.OnUsernameChanging(value)
					Me.SendPropertyChanging
					Me._Username = value
					Me.SendPropertyChanged("Username")
					Me.OnUsernameChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Password", DbType:="VarChar(256) NOT NULL", CanBeNull:=false)>  _
		Public Property Password() As String
			Get
				Return Me._Password
			End Get
			Set
				If (String.Equals(Me._Password, value) = false) Then
					Me.OnPasswordChanging(value)
					Me.SendPropertyChanging
					Me._Password = value
					Me.SendPropertyChanged("Password")
					Me.OnPasswordChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FirstName", DbType:="VarChar(64)")>  _
		Public Property FirstName() As String
			Get
				Return Me._FirstName
			End Get
			Set
				If (String.Equals(Me._FirstName, value) = false) Then
					Me.OnFirstNameChanging(value)
					Me.SendPropertyChanging
					Me._FirstName = value
					Me.SendPropertyChanged("FirstName")
					Me.OnFirstNameChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastName", DbType:="VarChar(64)")>  _
		Public Property LastName() As String
			Get
				Return Me._LastName
			End Get
			Set
				If (String.Equals(Me._LastName, value) = false) Then
					Me.OnLastNameChanging(value)
					Me.SendPropertyChanging
					Me._LastName = value
					Me.SendPropertyChanged("LastName")
					Me.OnLastNameChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address", DbType:="VarChar(256)")>  _
		Public Property Address() As String
			Get
				Return Me._Address
			End Get
			Set
				If (String.Equals(Me._Address, value) = false) Then
					Me.OnAddressChanging(value)
					Me.SendPropertyChanging
					Me._Address = value
					Me.SendPropertyChanged("Address")
					Me.OnAddressChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Email", DbType:="VarChar(64)")>  _
		Public Property Email() As String
			Get
				Return Me._Email
			End Get
			Set
				If (String.Equals(Me._Email, value) = false) Then
					Me.OnEmailChanging(value)
					Me.SendPropertyChanging
					Me._Email = value
					Me.SendPropertyChanged("Email")
					Me.OnEmailChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Phone", DbType:="VarChar(32)")>  _
		Public Property Phone() As String
			Get
				Return Me._Phone
			End Get
			Set
				If (String.Equals(Me._Phone, value) = false) Then
					Me.OnPhoneChanging(value)
					Me.SendPropertyChanging
					Me._Phone = value
					Me.SendPropertyChanged("Phone")
					Me.OnPhoneChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PwdExpiry", DbType:="DateTime")>  _
		Public Property PwdExpiry() As System.Nullable(Of Date)
			Get
				Return Me._PwdExpiry
			End Get
			Set
				If (Me._PwdExpiry.Equals(value) = false) Then
					Me.OnPwdExpiryChanging(value)
					Me.SendPropertyChanging
					Me._PwdExpiry = value
					Me.SendPropertyChanged("PwdExpiry")
					Me.OnPwdExpiryChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SecQuestion", DbType:="VarChar(128)")>  _
		Public Property SecQuestion() As String
			Get
				Return Me._SecQuestion
			End Get
			Set
				If (String.Equals(Me._SecQuestion, value) = false) Then
					Me.OnSecQuestionChanging(value)
					Me.SendPropertyChanging
					Me._SecQuestion = value
					Me.SendPropertyChanged("SecQuestion")
					Me.OnSecQuestionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SecAnswer", DbType:="VarChar(128)")>  _
		Public Property SecAnswer() As String
			Get
				Return Me._SecAnswer
			End Get
			Set
				If (String.Equals(Me._SecAnswer, value) = false) Then
					Me.OnSecAnswerChanging(value)
					Me.SendPropertyChanging
					Me._SecAnswer = value
					Me.SendPropertyChanged("SecAnswer")
					Me.OnSecAnswerChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastLoginDate", DbType:="DateTime")>  _
		Public Property LastLoginDate() As System.Nullable(Of Date)
			Get
				Return Me._LastLoginDate
			End Get
			Set
				If (Me._LastLoginDate.Equals(value) = false) Then
					Me.OnLastLoginDateChanging(value)
					Me.SendPropertyChanging
					Me._LastLoginDate = value
					Me.SendPropertyChanged("LastLoginDate")
					Me.OnLastLoginDateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EmployeeID", DbType:="VarChar(64)")>  _
		Public Property EmployeeID() As String
			Get
				Return Me._EmployeeID
			End Get
			Set
				If (String.Equals(Me._EmployeeID, value) = false) Then
					Me.OnEmployeeIDChanging(value)
					Me.SendPropertyChanging
					Me._EmployeeID = value
					Me.SendPropertyChanged("EmployeeID")
					Me.OnEmployeeIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Active", DbType:="TinyInt")>  _
		Public Property Active() As System.Nullable(Of Byte)
			Get
				Return Me._Active
			End Get
			Set
				If (Me._Active.Equals(value) = false) Then
					Me.OnActiveChanging(value)
					Me.SendPropertyChanging
					Me._Active = value
					Me.SendPropertyChanged("Active")
					Me.OnActiveChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubmittedBy", DbType:="VarChar(128)")>  _
		Public Property SubmittedBy() As String
			Get
				Return Me._SubmittedBy
			End Get
			Set
				If (String.Equals(Me._SubmittedBy, value) = false) Then
					Me.OnSubmittedByChanging(value)
					Me.SendPropertyChanging
					Me._SubmittedBy = value
					Me.SendPropertyChanged("SubmittedBy")
					Me.OnSubmittedByChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubmittedOn", DbType:="DateTime")>  _
		Public Property SubmittedOn() As System.Nullable(Of Date)
			Get
				Return Me._SubmittedOn
			End Get
			Set
				If (Me._SubmittedOn.Equals(value) = false) Then
					Me.OnSubmittedOnChanging(value)
					Me.SendPropertyChanging
					Me._SubmittedOn = value
					Me.SendPropertyChanged("SubmittedOn")
					Me.OnSubmittedOnChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedBy", DbType:="VarChar(128)")>  _
		Public Property ModifiedBy() As String
			Get
				Return Me._ModifiedBy
			End Get
			Set
				If (String.Equals(Me._ModifiedBy, value) = false) Then
					Me.OnModifiedByChanging(value)
					Me.SendPropertyChanging
					Me._ModifiedBy = value
					Me.SendPropertyChanged("ModifiedBy")
					Me.OnModifiedByChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedOn", DbType:="DateTime")>  _
		Public Property ModifiedOn() As System.Nullable(Of Date)
			Get
				Return Me._ModifiedOn
			End Get
			Set
				If (Me._ModifiedOn.Equals(value) = false) Then
					Me.OnModifiedOnChanging(value)
					Me.SendPropertyChanging
					Me._ModifiedOn = value
					Me.SendPropertyChanged("ModifiedOn")
					Me.OnModifiedOnChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.HRMedical")>  _
	Partial Public Class HRMedical
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _MedID As Integer
		
		Private _EmployeeID As String
		
		Private _MedDate As System.Nullable(Of Date)
		
		Private _AdmType As System.Nullable(Of Byte)
		
		Private _Days As System.Nullable(Of Long)
		
		Private _TreatDesc As String
		
		Private _medHospital As String
		
		Private _MedicalLimit As System.Nullable(Of Decimal)
		
		Private _MedicalCost As System.Nullable(Of Decimal)
		
		Private _LimitBalance As System.Nullable(Of Decimal)
		
		Private _StartDate As System.Nullable(Of Date)
		
		Private _EndDate As System.Nullable(Of Date)
		
		Private _Remarks As String
		
		Private _Tag As String
		
		Private _Deleted As System.Nullable(Of Byte)
		
		Private _Active As System.Nullable(Of Byte)
		
		Private _Approval As System.Nullable(Of Byte)
		
		Private _Submittedby As String
		
		Private _SubmittedOn As System.Nullable(Of Date)
		
		Private _ModifiedBy As String
		
		Private _ModifiedOn As System.Nullable(Of Date)
		
		Private _ApprovedBy As String
		
		Private _ApprovedOn As System.Nullable(Of Date)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnMedIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnMedIDChanged()
    End Sub
    Partial Private Sub OnEmployeeIDChanging(value As String)
    End Sub
    Partial Private Sub OnEmployeeIDChanged()
    End Sub
    Partial Private Sub OnMedDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnMedDateChanged()
    End Sub
    Partial Private Sub OnAdmTypeChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnAdmTypeChanged()
    End Sub
    Partial Private Sub OnDaysChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnDaysChanged()
    End Sub
    Partial Private Sub OnTreatDescChanging(value As String)
    End Sub
    Partial Private Sub OnTreatDescChanged()
    End Sub
    Partial Private Sub OnmedHospitalChanging(value As String)
    End Sub
    Partial Private Sub OnmedHospitalChanged()
    End Sub
    Partial Private Sub OnMedicalLimitChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnMedicalLimitChanged()
    End Sub
    Partial Private Sub OnMedicalCostChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnMedicalCostChanged()
    End Sub
    Partial Private Sub OnLimitBalanceChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnLimitBalanceChanged()
    End Sub
    Partial Private Sub OnStartDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnStartDateChanged()
    End Sub
    Partial Private Sub OnEndDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnEndDateChanged()
    End Sub
    Partial Private Sub OnRemarksChanging(value As String)
    End Sub
    Partial Private Sub OnRemarksChanged()
    End Sub
    Partial Private Sub OnTagChanging(value As String)
    End Sub
    Partial Private Sub OnTagChanged()
    End Sub
    Partial Private Sub OnDeletedChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnDeletedChanged()
    End Sub
    Partial Private Sub OnActiveChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnActiveChanged()
    End Sub
    Partial Private Sub OnApprovalChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnApprovalChanged()
    End Sub
    Partial Private Sub OnSubmittedbyChanging(value As String)
    End Sub
    Partial Private Sub OnSubmittedbyChanged()
    End Sub
    Partial Private Sub OnSubmittedOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSubmittedOnChanged()
    End Sub
    Partial Private Sub OnModifiedByChanging(value As String)
    End Sub
    Partial Private Sub OnModifiedByChanged()
    End Sub
    Partial Private Sub OnModifiedOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnModifiedOnChanged()
    End Sub
    Partial Private Sub OnApprovedByChanging(value As String)
    End Sub
    Partial Private Sub OnApprovedByChanged()
    End Sub
    Partial Private Sub OnApprovedOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnApprovedOnChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MedID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property MedID() As Integer
			Get
				Return Me._MedID
			End Get
			Set
				If ((Me._MedID = value)  _
							= false) Then
					Me.OnMedIDChanging(value)
					Me.SendPropertyChanging
					Me._MedID = value
					Me.SendPropertyChanged("MedID")
					Me.OnMedIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EmployeeID", DbType:="VarChar(50)")>  _
		Public Property EmployeeID() As String
			Get
				Return Me._EmployeeID
			End Get
			Set
				If (String.Equals(Me._EmployeeID, value) = false) Then
					Me.OnEmployeeIDChanging(value)
					Me.SendPropertyChanging
					Me._EmployeeID = value
					Me.SendPropertyChanged("EmployeeID")
					Me.OnEmployeeIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MedDate", DbType:="SmallDateTime")>  _
		Public Property MedDate() As System.Nullable(Of Date)
			Get
				Return Me._MedDate
			End Get
			Set
				If (Me._MedDate.Equals(value) = false) Then
					Me.OnMedDateChanging(value)
					Me.SendPropertyChanging
					Me._MedDate = value
					Me.SendPropertyChanged("MedDate")
					Me.OnMedDateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdmType", DbType:="TinyInt")>  _
		Public Property AdmType() As System.Nullable(Of Byte)
			Get
				Return Me._AdmType
			End Get
			Set
				If (Me._AdmType.Equals(value) = false) Then
					Me.OnAdmTypeChanging(value)
					Me.SendPropertyChanging
					Me._AdmType = value
					Me.SendPropertyChanged("AdmType")
					Me.OnAdmTypeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Days", DbType:="BigInt")>  _
		Public Property Days() As System.Nullable(Of Long)
			Get
				Return Me._Days
			End Get
			Set
				If (Me._Days.Equals(value) = false) Then
					Me.OnDaysChanging(value)
					Me.SendPropertyChanging
					Me._Days = value
					Me.SendPropertyChanged("Days")
					Me.OnDaysChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TreatDesc", DbType:="VarChar(512)")>  _
		Public Property TreatDesc() As String
			Get
				Return Me._TreatDesc
			End Get
			Set
				If (String.Equals(Me._TreatDesc, value) = false) Then
					Me.OnTreatDescChanging(value)
					Me.SendPropertyChanging
					Me._TreatDesc = value
					Me.SendPropertyChanged("TreatDesc")
					Me.OnTreatDescChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_medHospital", DbType:="VarChar(512)")>  _
		Public Property medHospital() As String
			Get
				Return Me._medHospital
			End Get
			Set
				If (String.Equals(Me._medHospital, value) = false) Then
					Me.OnmedHospitalChanging(value)
					Me.SendPropertyChanging
					Me._medHospital = value
					Me.SendPropertyChanged("medHospital")
					Me.OnmedHospitalChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MedicalLimit", DbType:="Money")>  _
		Public Property MedicalLimit() As System.Nullable(Of Decimal)
			Get
				Return Me._MedicalLimit
			End Get
			Set
				If (Me._MedicalLimit.Equals(value) = false) Then
					Me.OnMedicalLimitChanging(value)
					Me.SendPropertyChanging
					Me._MedicalLimit = value
					Me.SendPropertyChanged("MedicalLimit")
					Me.OnMedicalLimitChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MedicalCost", DbType:="Money")>  _
		Public Property MedicalCost() As System.Nullable(Of Decimal)
			Get
				Return Me._MedicalCost
			End Get
			Set
				If (Me._MedicalCost.Equals(value) = false) Then
					Me.OnMedicalCostChanging(value)
					Me.SendPropertyChanging
					Me._MedicalCost = value
					Me.SendPropertyChanged("MedicalCost")
					Me.OnMedicalCostChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LimitBalance", DbType:="Money")>  _
		Public Property LimitBalance() As System.Nullable(Of Decimal)
			Get
				Return Me._LimitBalance
			End Get
			Set
				If (Me._LimitBalance.Equals(value) = false) Then
					Me.OnLimitBalanceChanging(value)
					Me.SendPropertyChanging
					Me._LimitBalance = value
					Me.SendPropertyChanged("LimitBalance")
					Me.OnLimitBalanceChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StartDate", DbType:="DateTime")>  _
		Public Property StartDate() As System.Nullable(Of Date)
			Get
				Return Me._StartDate
			End Get
			Set
				If (Me._StartDate.Equals(value) = false) Then
					Me.OnStartDateChanging(value)
					Me.SendPropertyChanging
					Me._StartDate = value
					Me.SendPropertyChanged("StartDate")
					Me.OnStartDateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EndDate", DbType:="DateTime")>  _
		Public Property EndDate() As System.Nullable(Of Date)
			Get
				Return Me._EndDate
			End Get
			Set
				If (Me._EndDate.Equals(value) = false) Then
					Me.OnEndDateChanging(value)
					Me.SendPropertyChanging
					Me._EndDate = value
					Me.SendPropertyChanged("EndDate")
					Me.OnEndDateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Remarks", DbType:="VarChar(512)")>  _
		Public Property Remarks() As String
			Get
				Return Me._Remarks
			End Get
			Set
				If (String.Equals(Me._Remarks, value) = false) Then
					Me.OnRemarksChanging(value)
					Me.SendPropertyChanging
					Me._Remarks = value
					Me.SendPropertyChanged("Remarks")
					Me.OnRemarksChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tag", DbType:="VarChar(512)")>  _
		Public Property Tag() As String
			Get
				Return Me._Tag
			End Get
			Set
				If (String.Equals(Me._Tag, value) = false) Then
					Me.OnTagChanging(value)
					Me.SendPropertyChanging
					Me._Tag = value
					Me.SendPropertyChanged("Tag")
					Me.OnTagChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Deleted", DbType:="TinyInt")>  _
		Public Property Deleted() As System.Nullable(Of Byte)
			Get
				Return Me._Deleted
			End Get
			Set
				If (Me._Deleted.Equals(value) = false) Then
					Me.OnDeletedChanging(value)
					Me.SendPropertyChanging
					Me._Deleted = value
					Me.SendPropertyChanged("Deleted")
					Me.OnDeletedChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Active", DbType:="TinyInt")>  _
		Public Property Active() As System.Nullable(Of Byte)
			Get
				Return Me._Active
			End Get
			Set
				If (Me._Active.Equals(value) = false) Then
					Me.OnActiveChanging(value)
					Me.SendPropertyChanging
					Me._Active = value
					Me.SendPropertyChanged("Active")
					Me.OnActiveChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Approval", DbType:="TinyInt")>  _
		Public Property Approval() As System.Nullable(Of Byte)
			Get
				Return Me._Approval
			End Get
			Set
				If (Me._Approval.Equals(value) = false) Then
					Me.OnApprovalChanging(value)
					Me.SendPropertyChanging
					Me._Approval = value
					Me.SendPropertyChanged("Approval")
					Me.OnApprovalChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Submittedby", DbType:="VarChar(50)")>  _
		Public Property Submittedby() As String
			Get
				Return Me._Submittedby
			End Get
			Set
				If (String.Equals(Me._Submittedby, value) = false) Then
					Me.OnSubmittedbyChanging(value)
					Me.SendPropertyChanging
					Me._Submittedby = value
					Me.SendPropertyChanged("Submittedby")
					Me.OnSubmittedbyChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubmittedOn", DbType:="DateTime")>  _
		Public Property SubmittedOn() As System.Nullable(Of Date)
			Get
				Return Me._SubmittedOn
			End Get
			Set
				If (Me._SubmittedOn.Equals(value) = false) Then
					Me.OnSubmittedOnChanging(value)
					Me.SendPropertyChanging
					Me._SubmittedOn = value
					Me.SendPropertyChanged("SubmittedOn")
					Me.OnSubmittedOnChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedBy", DbType:="VarChar(50)")>  _
		Public Property ModifiedBy() As String
			Get
				Return Me._ModifiedBy
			End Get
			Set
				If (String.Equals(Me._ModifiedBy, value) = false) Then
					Me.OnModifiedByChanging(value)
					Me.SendPropertyChanging
					Me._ModifiedBy = value
					Me.SendPropertyChanged("ModifiedBy")
					Me.OnModifiedByChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedOn", DbType:="DateTime")>  _
		Public Property ModifiedOn() As System.Nullable(Of Date)
			Get
				Return Me._ModifiedOn
			End Get
			Set
				If (Me._ModifiedOn.Equals(value) = false) Then
					Me.OnModifiedOnChanging(value)
					Me.SendPropertyChanging
					Me._ModifiedOn = value
					Me.SendPropertyChanged("ModifiedOn")
					Me.OnModifiedOnChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApprovedBy", DbType:="VarChar(64)")>  _
		Public Property ApprovedBy() As String
			Get
				Return Me._ApprovedBy
			End Get
			Set
				If (String.Equals(Me._ApprovedBy, value) = false) Then
					Me.OnApprovedByChanging(value)
					Me.SendPropertyChanging
					Me._ApprovedBy = value
					Me.SendPropertyChanged("ApprovedBy")
					Me.OnApprovedByChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApprovedOn", DbType:="DateTime")>  _
		Public Property ApprovedOn() As System.Nullable(Of Date)
			Get
				Return Me._ApprovedOn
			End Get
			Set
				If (Me._ApprovedOn.Equals(value) = false) Then
					Me.OnApprovedOnChanging(value)
					Me.SendPropertyChanging
					Me._ApprovedOn = value
					Me.SendPropertyChanged("ApprovedOn")
					Me.OnApprovedOnChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.HPayGrade")>  _
	Partial Public Class HPayGrade
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _ID As Integer
		
		Private _StaffGrpID As String
		
		Private _Name As String
		
		Private _Description As String
		
		Private _Tag As String
		
		Private _Deleted As System.Nullable(Of Byte)
		
		Private _Active As System.Nullable(Of Byte)
		
		Private _Submitby As String
		
		Private _SubmitOn As System.Nullable(Of Date)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnStaffGrpIDChanging(value As String)
    End Sub
    Partial Private Sub OnStaffGrpIDChanged()
    End Sub
    Partial Private Sub OnNameChanging(value As String)
    End Sub
    Partial Private Sub OnNameChanged()
    End Sub
    Partial Private Sub OnDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnDescriptionChanged()
    End Sub
    Partial Private Sub OnTagChanging(value As String)
    End Sub
    Partial Private Sub OnTagChanged()
    End Sub
    Partial Private Sub OnDeletedChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnDeletedChanged()
    End Sub
    Partial Private Sub OnActiveChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnActiveChanged()
    End Sub
    Partial Private Sub OnSubmitbyChanging(value As String)
    End Sub
    Partial Private Sub OnSubmitbyChanged()
    End Sub
    Partial Private Sub OnSubmitOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSubmitOnChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property ID() As Integer
			Get
				Return Me._ID
			End Get
			Set
				If ((Me._ID = value)  _
							= false) Then
					Me.OnIDChanging(value)
					Me.SendPropertyChanging
					Me._ID = value
					Me.SendPropertyChanged("ID")
					Me.OnIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StaffGrpID", DbType:="VarChar(50)")>  _
		Public Property StaffGrpID() As String
			Get
				Return Me._StaffGrpID
			End Get
			Set
				If (String.Equals(Me._StaffGrpID, value) = false) Then
					Me.OnStaffGrpIDChanging(value)
					Me.SendPropertyChanging
					Me._StaffGrpID = value
					Me.SendPropertyChanged("StaffGrpID")
					Me.OnStaffGrpIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="VarChar(50)")>  _
		Public Property Name() As String
			Get
				Return Me._Name
			End Get
			Set
				If (String.Equals(Me._Name, value) = false) Then
					Me.OnNameChanging(value)
					Me.SendPropertyChanging
					Me._Name = value
					Me.SendPropertyChanged("Name")
					Me.OnNameChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="VarChar(255)")>  _
		Public Property Description() As String
			Get
				Return Me._Description
			End Get
			Set
				If (String.Equals(Me._Description, value) = false) Then
					Me.OnDescriptionChanging(value)
					Me.SendPropertyChanging
					Me._Description = value
					Me.SendPropertyChanged("Description")
					Me.OnDescriptionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tag", DbType:="VarChar(255)")>  _
		Public Property Tag() As String
			Get
				Return Me._Tag
			End Get
			Set
				If (String.Equals(Me._Tag, value) = false) Then
					Me.OnTagChanging(value)
					Me.SendPropertyChanging
					Me._Tag = value
					Me.SendPropertyChanged("Tag")
					Me.OnTagChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Deleted", DbType:="TinyInt")>  _
		Public Property Deleted() As System.Nullable(Of Byte)
			Get
				Return Me._Deleted
			End Get
			Set
				If (Me._Deleted.Equals(value) = false) Then
					Me.OnDeletedChanging(value)
					Me.SendPropertyChanging
					Me._Deleted = value
					Me.SendPropertyChanged("Deleted")
					Me.OnDeletedChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Active", DbType:="TinyInt")>  _
		Public Property Active() As System.Nullable(Of Byte)
			Get
				Return Me._Active
			End Get
			Set
				If (Me._Active.Equals(value) = false) Then
					Me.OnActiveChanging(value)
					Me.SendPropertyChanging
					Me._Active = value
					Me.SendPropertyChanged("Active")
					Me.OnActiveChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Submitby", DbType:="VarChar(50)")>  _
		Public Property Submitby() As String
			Get
				Return Me._Submitby
			End Get
			Set
				If (String.Equals(Me._Submitby, value) = false) Then
					Me.OnSubmitbyChanging(value)
					Me.SendPropertyChanging
					Me._Submitby = value
					Me.SendPropertyChanged("Submitby")
					Me.OnSubmitbyChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubmitOn", DbType:="DateTime")>  _
		Public Property SubmitOn() As System.Nullable(Of Date)
			Get
				Return Me._SubmitOn
			End Get
			Set
				If (Me._SubmitOn.Equals(value) = false) Then
					Me.OnSubmitOnChanging(value)
					Me.SendPropertyChanging
					Me._SubmitOn = value
					Me.SendPropertyChanged("SubmitOn")
					Me.OnSubmitOnChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.HRMedDetails")>  _
	Partial Public Class HRMedDetail
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _MedDetailsID As Long
		
		Private _EmployeeNo As String
		
		Private _Height As String
		
		Private _Weight As String
		
		Private _Bloodgrp As String
		
		Private _Disable As System.Nullable(Of Boolean)
		
		Private _Type As String
		
		Private _Allergics As String
		
		Private _Conditions As String
		
		Private _MedicalLimits As System.Nullable(Of Decimal)
		
		Private _Tag As String
		
		Private _Deleted As System.Nullable(Of Byte)
		
		Private _Active As System.Nullable(Of Byte)
		
		Private _Submitby As String
		
		Private _SubmitOn As System.Nullable(Of Date)
		
		Private _ModifiedBy As String
		
		Private _ModifiedOn As System.Nullable(Of Date)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnMedDetailsIDChanging(value As Long)
    End Sub
    Partial Private Sub OnMedDetailsIDChanged()
    End Sub
    Partial Private Sub OnEmployeeNoChanging(value As String)
    End Sub
    Partial Private Sub OnEmployeeNoChanged()
    End Sub
    Partial Private Sub OnHeightChanging(value As String)
    End Sub
    Partial Private Sub OnHeightChanged()
    End Sub
    Partial Private Sub OnWeightChanging(value As String)
    End Sub
    Partial Private Sub OnWeightChanged()
    End Sub
    Partial Private Sub OnBloodgrpChanging(value As String)
    End Sub
    Partial Private Sub OnBloodgrpChanged()
    End Sub
    Partial Private Sub OnDisableChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnDisableChanged()
    End Sub
    Partial Private Sub OnTypeChanging(value As String)
    End Sub
    Partial Private Sub OnTypeChanged()
    End Sub
    Partial Private Sub OnAllergicsChanging(value As String)
    End Sub
    Partial Private Sub OnAllergicsChanged()
    End Sub
    Partial Private Sub OnConditionsChanging(value As String)
    End Sub
    Partial Private Sub OnConditionsChanged()
    End Sub
    Partial Private Sub OnMedicalLimitsChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnMedicalLimitsChanged()
    End Sub
    Partial Private Sub OnTagChanging(value As String)
    End Sub
    Partial Private Sub OnTagChanged()
    End Sub
    Partial Private Sub OnDeletedChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnDeletedChanged()
    End Sub
    Partial Private Sub OnActiveChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnActiveChanged()
    End Sub
    Partial Private Sub OnSubmitbyChanging(value As String)
    End Sub
    Partial Private Sub OnSubmitbyChanged()
    End Sub
    Partial Private Sub OnSubmitOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSubmitOnChanged()
    End Sub
    Partial Private Sub OnModifiedByChanging(value As String)
    End Sub
    Partial Private Sub OnModifiedByChanged()
    End Sub
    Partial Private Sub OnModifiedOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnModifiedOnChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MedDetailsID", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property MedDetailsID() As Long
			Get
				Return Me._MedDetailsID
			End Get
			Set
				If ((Me._MedDetailsID = value)  _
							= false) Then
					Me.OnMedDetailsIDChanging(value)
					Me.SendPropertyChanging
					Me._MedDetailsID = value
					Me.SendPropertyChanged("MedDetailsID")
					Me.OnMedDetailsIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EmployeeNo", DbType:="VarChar(50)")>  _
		Public Property EmployeeNo() As String
			Get
				Return Me._EmployeeNo
			End Get
			Set
				If (String.Equals(Me._EmployeeNo, value) = false) Then
					Me.OnEmployeeNoChanging(value)
					Me.SendPropertyChanging
					Me._EmployeeNo = value
					Me.SendPropertyChanged("EmployeeNo")
					Me.OnEmployeeNoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Height", DbType:="VarChar(32)")>  _
		Public Property Height() As String
			Get
				Return Me._Height
			End Get
			Set
				If (String.Equals(Me._Height, value) = false) Then
					Me.OnHeightChanging(value)
					Me.SendPropertyChanging
					Me._Height = value
					Me.SendPropertyChanged("Height")
					Me.OnHeightChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Weight", DbType:="VarChar(32)")>  _
		Public Property Weight() As String
			Get
				Return Me._Weight
			End Get
			Set
				If (String.Equals(Me._Weight, value) = false) Then
					Me.OnWeightChanging(value)
					Me.SendPropertyChanging
					Me._Weight = value
					Me.SendPropertyChanged("Weight")
					Me.OnWeightChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Bloodgrp", DbType:="VarChar(32)")>  _
		Public Property Bloodgrp() As String
			Get
				Return Me._Bloodgrp
			End Get
			Set
				If (String.Equals(Me._Bloodgrp, value) = false) Then
					Me.OnBloodgrpChanging(value)
					Me.SendPropertyChanging
					Me._Bloodgrp = value
					Me.SendPropertyChanged("Bloodgrp")
					Me.OnBloodgrpChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Disable", DbType:="Bit")>  _
		Public Property Disable() As System.Nullable(Of Boolean)
			Get
				Return Me._Disable
			End Get
			Set
				If (Me._Disable.Equals(value) = false) Then
					Me.OnDisableChanging(value)
					Me.SendPropertyChanging
					Me._Disable = value
					Me.SendPropertyChanged("Disable")
					Me.OnDisableChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Type", DbType:="VarChar(32)")>  _
		Public Property Type() As String
			Get
				Return Me._Type
			End Get
			Set
				If (String.Equals(Me._Type, value) = false) Then
					Me.OnTypeChanging(value)
					Me.SendPropertyChanging
					Me._Type = value
					Me.SendPropertyChanged("Type")
					Me.OnTypeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Allergics", DbType:="VarChar(256)")>  _
		Public Property Allergics() As String
			Get
				Return Me._Allergics
			End Get
			Set
				If (String.Equals(Me._Allergics, value) = false) Then
					Me.OnAllergicsChanging(value)
					Me.SendPropertyChanging
					Me._Allergics = value
					Me.SendPropertyChanged("Allergics")
					Me.OnAllergicsChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Conditions", DbType:="VarChar(256)")>  _
		Public Property Conditions() As String
			Get
				Return Me._Conditions
			End Get
			Set
				If (String.Equals(Me._Conditions, value) = false) Then
					Me.OnConditionsChanging(value)
					Me.SendPropertyChanging
					Me._Conditions = value
					Me.SendPropertyChanged("Conditions")
					Me.OnConditionsChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MedicalLimits", DbType:="Money")>  _
		Public Property MedicalLimits() As System.Nullable(Of Decimal)
			Get
				Return Me._MedicalLimits
			End Get
			Set
				If (Me._MedicalLimits.Equals(value) = false) Then
					Me.OnMedicalLimitsChanging(value)
					Me.SendPropertyChanging
					Me._MedicalLimits = value
					Me.SendPropertyChanged("MedicalLimits")
					Me.OnMedicalLimitsChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tag", DbType:="VarChar(255)")>  _
		Public Property Tag() As String
			Get
				Return Me._Tag
			End Get
			Set
				If (String.Equals(Me._Tag, value) = false) Then
					Me.OnTagChanging(value)
					Me.SendPropertyChanging
					Me._Tag = value
					Me.SendPropertyChanged("Tag")
					Me.OnTagChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Deleted", DbType:="TinyInt")>  _
		Public Property Deleted() As System.Nullable(Of Byte)
			Get
				Return Me._Deleted
			End Get
			Set
				If (Me._Deleted.Equals(value) = false) Then
					Me.OnDeletedChanging(value)
					Me.SendPropertyChanging
					Me._Deleted = value
					Me.SendPropertyChanged("Deleted")
					Me.OnDeletedChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Active", DbType:="TinyInt")>  _
		Public Property Active() As System.Nullable(Of Byte)
			Get
				Return Me._Active
			End Get
			Set
				If (Me._Active.Equals(value) = false) Then
					Me.OnActiveChanging(value)
					Me.SendPropertyChanging
					Me._Active = value
					Me.SendPropertyChanged("Active")
					Me.OnActiveChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Submitby", DbType:="VarChar(50)")>  _
		Public Property Submitby() As String
			Get
				Return Me._Submitby
			End Get
			Set
				If (String.Equals(Me._Submitby, value) = false) Then
					Me.OnSubmitbyChanging(value)
					Me.SendPropertyChanging
					Me._Submitby = value
					Me.SendPropertyChanged("Submitby")
					Me.OnSubmitbyChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubmitOn", DbType:="DateTime")>  _
		Public Property SubmitOn() As System.Nullable(Of Date)
			Get
				Return Me._SubmitOn
			End Get
			Set
				If (Me._SubmitOn.Equals(value) = false) Then
					Me.OnSubmitOnChanging(value)
					Me.SendPropertyChanging
					Me._SubmitOn = value
					Me.SendPropertyChanged("SubmitOn")
					Me.OnSubmitOnChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedBy", DbType:="VarChar(50)")>  _
		Public Property ModifiedBy() As String
			Get
				Return Me._ModifiedBy
			End Get
			Set
				If (String.Equals(Me._ModifiedBy, value) = false) Then
					Me.OnModifiedByChanging(value)
					Me.SendPropertyChanging
					Me._ModifiedBy = value
					Me.SendPropertyChanged("ModifiedBy")
					Me.OnModifiedByChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedOn", DbType:="DateTime")>  _
		Public Property ModifiedOn() As System.Nullable(Of Date)
			Get
				Return Me._ModifiedOn
			End Get
			Set
				If (Me._ModifiedOn.Equals(value) = false) Then
					Me.OnModifiedOnChanging(value)
					Me.SendPropertyChanging
					Me._ModifiedOn = value
					Me.SendPropertyChanged("ModifiedOn")
					Me.OnModifiedOnChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.UserPermission")>  _
	Partial Public Class UserPermission
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _UserID As Long
		
		Private _PermissionID As Long
		
		Private _SubmittedBy As String
		
		Private _SubmittedOn As System.Nullable(Of Date)
		
		Private _ModifiedBy As String
		
		Private _ModifiedOn As System.Nullable(Of Date)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnUserIDChanging(value As Long)
    End Sub
    Partial Private Sub OnUserIDChanged()
    End Sub
    Partial Private Sub OnPermissionIDChanging(value As Long)
    End Sub
    Partial Private Sub OnPermissionIDChanged()
    End Sub
    Partial Private Sub OnSubmittedByChanging(value As String)
    End Sub
    Partial Private Sub OnSubmittedByChanged()
    End Sub
    Partial Private Sub OnSubmittedOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSubmittedOnChanged()
    End Sub
    Partial Private Sub OnModifiedByChanging(value As String)
    End Sub
    Partial Private Sub OnModifiedByChanged()
    End Sub
    Partial Private Sub OnModifiedOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnModifiedOnChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserID", DbType:="BigInt NOT NULL", IsPrimaryKey:=true)>  _
		Public Property UserID() As Long
			Get
				Return Me._UserID
			End Get
			Set
				If ((Me._UserID = value)  _
							= false) Then
					Me.OnUserIDChanging(value)
					Me.SendPropertyChanging
					Me._UserID = value
					Me.SendPropertyChanged("UserID")
					Me.OnUserIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PermissionID", DbType:="BigInt NOT NULL", IsPrimaryKey:=true)>  _
		Public Property PermissionID() As Long
			Get
				Return Me._PermissionID
			End Get
			Set
				If ((Me._PermissionID = value)  _
							= false) Then
					Me.OnPermissionIDChanging(value)
					Me.SendPropertyChanging
					Me._PermissionID = value
					Me.SendPropertyChanged("PermissionID")
					Me.OnPermissionIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubmittedBy", DbType:="VarChar(128)")>  _
		Public Property SubmittedBy() As String
			Get
				Return Me._SubmittedBy
			End Get
			Set
				If (String.Equals(Me._SubmittedBy, value) = false) Then
					Me.OnSubmittedByChanging(value)
					Me.SendPropertyChanging
					Me._SubmittedBy = value
					Me.SendPropertyChanged("SubmittedBy")
					Me.OnSubmittedByChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubmittedOn", DbType:="DateTime")>  _
		Public Property SubmittedOn() As System.Nullable(Of Date)
			Get
				Return Me._SubmittedOn
			End Get
			Set
				If (Me._SubmittedOn.Equals(value) = false) Then
					Me.OnSubmittedOnChanging(value)
					Me.SendPropertyChanging
					Me._SubmittedOn = value
					Me.SendPropertyChanged("SubmittedOn")
					Me.OnSubmittedOnChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedBy", DbType:="VarChar(128)")>  _
		Public Property ModifiedBy() As String
			Get
				Return Me._ModifiedBy
			End Get
			Set
				If (String.Equals(Me._ModifiedBy, value) = false) Then
					Me.OnModifiedByChanging(value)
					Me.SendPropertyChanging
					Me._ModifiedBy = value
					Me.SendPropertyChanged("ModifiedBy")
					Me.OnModifiedByChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedOn", DbType:="DateTime")>  _
		Public Property ModifiedOn() As System.Nullable(Of Date)
			Get
				Return Me._ModifiedOn
			End Get
			Set
				If (Me._ModifiedOn.Equals(value) = false) Then
					Me.OnModifiedOnChanging(value)
					Me.SendPropertyChanging
					Me._ModifiedOn = value
					Me.SendPropertyChanged("ModifiedOn")
					Me.OnModifiedOnChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.HRLeave")>  _
	Partial Public Class HRLeave
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _LeaveID As Integer
		
		Private _EmployeeNo As String
		
		Private _LeaveType As String
		
		Private _LDate As System.Nullable(Of Date)
		
		Private _Duration As System.Nullable(Of Long)
		
		Private _DMY As String
		
		Private _StartDate As System.Nullable(Of Date)
		
		Private _EndDate As System.Nullable(Of Date)
		
		Private _LeaveArrears As System.Nullable(Of Decimal)
		
		Private _LeaveAllow As System.Nullable(Of Decimal)
		
		Private _Purpose As String
		
		Private _Remarks As String
		
		Private _Tag As String
		
		Private _Deleted As System.Nullable(Of Byte)
		
		Private _Active As System.Nullable(Of Byte)
		
		Private _Approval As System.Nullable(Of Byte)
		
		Private _Submitby As String
		
		Private _SubmitOn As System.Nullable(Of Date)
		
		Private _ModifiedBy As String
		
		Private _ModifiedOn As System.Nullable(Of Date)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnLeaveIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnLeaveIDChanged()
    End Sub
    Partial Private Sub OnEmployeeNoChanging(value As String)
    End Sub
    Partial Private Sub OnEmployeeNoChanged()
    End Sub
    Partial Private Sub OnLeaveTypeChanging(value As String)
    End Sub
    Partial Private Sub OnLeaveTypeChanged()
    End Sub
    Partial Private Sub OnLDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnLDateChanged()
    End Sub
    Partial Private Sub OnDurationChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnDurationChanged()
    End Sub
    Partial Private Sub OnDMYChanging(value As String)
    End Sub
    Partial Private Sub OnDMYChanged()
    End Sub
    Partial Private Sub OnStartDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnStartDateChanged()
    End Sub
    Partial Private Sub OnEndDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnEndDateChanged()
    End Sub
    Partial Private Sub OnLeaveArrearsChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnLeaveArrearsChanged()
    End Sub
    Partial Private Sub OnLeaveAllowChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnLeaveAllowChanged()
    End Sub
    Partial Private Sub OnPurposeChanging(value As String)
    End Sub
    Partial Private Sub OnPurposeChanged()
    End Sub
    Partial Private Sub OnRemarksChanging(value As String)
    End Sub
    Partial Private Sub OnRemarksChanged()
    End Sub
    Partial Private Sub OnTagChanging(value As String)
    End Sub
    Partial Private Sub OnTagChanged()
    End Sub
    Partial Private Sub OnDeletedChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnDeletedChanged()
    End Sub
    Partial Private Sub OnActiveChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnActiveChanged()
    End Sub
    Partial Private Sub OnApprovalChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnApprovalChanged()
    End Sub
    Partial Private Sub OnSubmitbyChanging(value As String)
    End Sub
    Partial Private Sub OnSubmitbyChanged()
    End Sub
    Partial Private Sub OnSubmitOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSubmitOnChanged()
    End Sub
    Partial Private Sub OnModifiedByChanging(value As String)
    End Sub
    Partial Private Sub OnModifiedByChanged()
    End Sub
    Partial Private Sub OnModifiedOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnModifiedOnChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LeaveID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property LeaveID() As Integer
			Get
				Return Me._LeaveID
			End Get
			Set
				If ((Me._LeaveID = value)  _
							= false) Then
					Me.OnLeaveIDChanging(value)
					Me.SendPropertyChanging
					Me._LeaveID = value
					Me.SendPropertyChanged("LeaveID")
					Me.OnLeaveIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EmployeeNo", DbType:="VarChar(64)")>  _
		Public Property EmployeeNo() As String
			Get
				Return Me._EmployeeNo
			End Get
			Set
				If (String.Equals(Me._EmployeeNo, value) = false) Then
					Me.OnEmployeeNoChanging(value)
					Me.SendPropertyChanging
					Me._EmployeeNo = value
					Me.SendPropertyChanged("EmployeeNo")
					Me.OnEmployeeNoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LeaveType", DbType:="VarChar(256)")>  _
		Public Property LeaveType() As String
			Get
				Return Me._LeaveType
			End Get
			Set
				If (String.Equals(Me._LeaveType, value) = false) Then
					Me.OnLeaveTypeChanging(value)
					Me.SendPropertyChanging
					Me._LeaveType = value
					Me.SendPropertyChanged("LeaveType")
					Me.OnLeaveTypeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LDate", DbType:="SmallDateTime")>  _
		Public Property LDate() As System.Nullable(Of Date)
			Get
				Return Me._LDate
			End Get
			Set
				If (Me._LDate.Equals(value) = false) Then
					Me.OnLDateChanging(value)
					Me.SendPropertyChanging
					Me._LDate = value
					Me.SendPropertyChanged("LDate")
					Me.OnLDateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Duration", DbType:="BigInt")>  _
		Public Property Duration() As System.Nullable(Of Long)
			Get
				Return Me._Duration
			End Get
			Set
				If (Me._Duration.Equals(value) = false) Then
					Me.OnDurationChanging(value)
					Me.SendPropertyChanging
					Me._Duration = value
					Me.SendPropertyChanged("Duration")
					Me.OnDurationChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DMY", DbType:="VarChar(256)")>  _
		Public Property DMY() As String
			Get
				Return Me._DMY
			End Get
			Set
				If (String.Equals(Me._DMY, value) = false) Then
					Me.OnDMYChanging(value)
					Me.SendPropertyChanging
					Me._DMY = value
					Me.SendPropertyChanged("DMY")
					Me.OnDMYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StartDate", DbType:="SmallDateTime")>  _
		Public Property StartDate() As System.Nullable(Of Date)
			Get
				Return Me._StartDate
			End Get
			Set
				If (Me._StartDate.Equals(value) = false) Then
					Me.OnStartDateChanging(value)
					Me.SendPropertyChanging
					Me._StartDate = value
					Me.SendPropertyChanged("StartDate")
					Me.OnStartDateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EndDate", DbType:="SmallDateTime")>  _
		Public Property EndDate() As System.Nullable(Of Date)
			Get
				Return Me._EndDate
			End Get
			Set
				If (Me._EndDate.Equals(value) = false) Then
					Me.OnEndDateChanging(value)
					Me.SendPropertyChanging
					Me._EndDate = value
					Me.SendPropertyChanged("EndDate")
					Me.OnEndDateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LeaveArrears", DbType:="Money")>  _
		Public Property LeaveArrears() As System.Nullable(Of Decimal)
			Get
				Return Me._LeaveArrears
			End Get
			Set
				If (Me._LeaveArrears.Equals(value) = false) Then
					Me.OnLeaveArrearsChanging(value)
					Me.SendPropertyChanging
					Me._LeaveArrears = value
					Me.SendPropertyChanged("LeaveArrears")
					Me.OnLeaveArrearsChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LeaveAllow", DbType:="Money")>  _
		Public Property LeaveAllow() As System.Nullable(Of Decimal)
			Get
				Return Me._LeaveAllow
			End Get
			Set
				If (Me._LeaveAllow.Equals(value) = false) Then
					Me.OnLeaveAllowChanging(value)
					Me.SendPropertyChanging
					Me._LeaveAllow = value
					Me.SendPropertyChanged("LeaveAllow")
					Me.OnLeaveAllowChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Purpose", DbType:="VarChar(256)")>  _
		Public Property Purpose() As String
			Get
				Return Me._Purpose
			End Get
			Set
				If (String.Equals(Me._Purpose, value) = false) Then
					Me.OnPurposeChanging(value)
					Me.SendPropertyChanging
					Me._Purpose = value
					Me.SendPropertyChanged("Purpose")
					Me.OnPurposeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Remarks", DbType:="VarChar(512)")>  _
		Public Property Remarks() As String
			Get
				Return Me._Remarks
			End Get
			Set
				If (String.Equals(Me._Remarks, value) = false) Then
					Me.OnRemarksChanging(value)
					Me.SendPropertyChanging
					Me._Remarks = value
					Me.SendPropertyChanged("Remarks")
					Me.OnRemarksChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tag", DbType:="VarChar(512)")>  _
		Public Property Tag() As String
			Get
				Return Me._Tag
			End Get
			Set
				If (String.Equals(Me._Tag, value) = false) Then
					Me.OnTagChanging(value)
					Me.SendPropertyChanging
					Me._Tag = value
					Me.SendPropertyChanged("Tag")
					Me.OnTagChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Deleted", DbType:="TinyInt")>  _
		Public Property Deleted() As System.Nullable(Of Byte)
			Get
				Return Me._Deleted
			End Get
			Set
				If (Me._Deleted.Equals(value) = false) Then
					Me.OnDeletedChanging(value)
					Me.SendPropertyChanging
					Me._Deleted = value
					Me.SendPropertyChanged("Deleted")
					Me.OnDeletedChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Active", DbType:="TinyInt")>  _
		Public Property Active() As System.Nullable(Of Byte)
			Get
				Return Me._Active
			End Get
			Set
				If (Me._Active.Equals(value) = false) Then
					Me.OnActiveChanging(value)
					Me.SendPropertyChanging
					Me._Active = value
					Me.SendPropertyChanged("Active")
					Me.OnActiveChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Approval", DbType:="TinyInt")>  _
		Public Property Approval() As System.Nullable(Of Byte)
			Get
				Return Me._Approval
			End Get
			Set
				If (Me._Approval.Equals(value) = false) Then
					Me.OnApprovalChanging(value)
					Me.SendPropertyChanging
					Me._Approval = value
					Me.SendPropertyChanged("Approval")
					Me.OnApprovalChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Submitby", DbType:="VarChar(64)")>  _
		Public Property Submitby() As String
			Get
				Return Me._Submitby
			End Get
			Set
				If (String.Equals(Me._Submitby, value) = false) Then
					Me.OnSubmitbyChanging(value)
					Me.SendPropertyChanging
					Me._Submitby = value
					Me.SendPropertyChanged("Submitby")
					Me.OnSubmitbyChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubmitOn", DbType:="DateTime")>  _
		Public Property SubmitOn() As System.Nullable(Of Date)
			Get
				Return Me._SubmitOn
			End Get
			Set
				If (Me._SubmitOn.Equals(value) = false) Then
					Me.OnSubmitOnChanging(value)
					Me.SendPropertyChanging
					Me._SubmitOn = value
					Me.SendPropertyChanged("SubmitOn")
					Me.OnSubmitOnChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedBy", DbType:="VarChar(64)")>  _
		Public Property ModifiedBy() As String
			Get
				Return Me._ModifiedBy
			End Get
			Set
				If (String.Equals(Me._ModifiedBy, value) = false) Then
					Me.OnModifiedByChanging(value)
					Me.SendPropertyChanging
					Me._ModifiedBy = value
					Me.SendPropertyChanged("ModifiedBy")
					Me.OnModifiedByChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedOn", DbType:="DateTime")>  _
		Public Property ModifiedOn() As System.Nullable(Of Date)
			Get
				Return Me._ModifiedOn
			End Get
			Set
				If (Me._ModifiedOn.Equals(value) = false) Then
					Me.OnModifiedOnChanging(value)
					Me.SendPropertyChanging
					Me._ModifiedOn = value
					Me.SendPropertyChanged("ModifiedOn")
					Me.OnModifiedOnChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Permissions")>  _
	Partial Public Class Permission
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _PermissionID As Long
		
		Private _PermissionName As String
		
		Private _Module As String
		
		Private _Category As String
		
		Private _Remarks As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnPermissionIDChanging(value As Long)
    End Sub
    Partial Private Sub OnPermissionIDChanged()
    End Sub
    Partial Private Sub OnPermissionNameChanging(value As String)
    End Sub
    Partial Private Sub OnPermissionNameChanged()
    End Sub
    Partial Private Sub OnModuleChanging(value As String)
    End Sub
    Partial Private Sub OnModuleChanged()
    End Sub
    Partial Private Sub OnCategoryChanging(value As String)
    End Sub
    Partial Private Sub OnCategoryChanged()
    End Sub
    Partial Private Sub OnRemarksChanging(value As String)
    End Sub
    Partial Private Sub OnRemarksChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PermissionID", DbType:="BigInt NOT NULL", IsPrimaryKey:=true)>  _
		Public Property PermissionID() As Long
			Get
				Return Me._PermissionID
			End Get
			Set
				If ((Me._PermissionID = value)  _
							= false) Then
					Me.OnPermissionIDChanging(value)
					Me.SendPropertyChanging
					Me._PermissionID = value
					Me.SendPropertyChanged("PermissionID")
					Me.OnPermissionIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PermissionName", DbType:="VarChar(128) NOT NULL", CanBeNull:=false)>  _
		Public Property PermissionName() As String
			Get
				Return Me._PermissionName
			End Get
			Set
				If (String.Equals(Me._PermissionName, value) = false) Then
					Me.OnPermissionNameChanging(value)
					Me.SendPropertyChanging
					Me._PermissionName = value
					Me.SendPropertyChanged("PermissionName")
					Me.OnPermissionNameChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="Module", Storage:="_Module", DbType:="VarChar(16)")>  _
		Public Property [Module]() As String
			Get
				Return Me._Module
			End Get
			Set
				If (String.Equals(Me._Module, value) = false) Then
					Me.OnModuleChanging(value)
					Me.SendPropertyChanging
					Me._Module = value
					Me.SendPropertyChanged("[Module]")
					Me.OnModuleChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Category", DbType:="VarChar(32)")>  _
		Public Property Category() As String
			Get
				Return Me._Category
			End Get
			Set
				If (String.Equals(Me._Category, value) = false) Then
					Me.OnCategoryChanging(value)
					Me.SendPropertyChanging
					Me._Category = value
					Me.SendPropertyChanged("Category")
					Me.OnCategoryChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Remarks", DbType:="VarChar(256)")>  _
		Public Property Remarks() As String
			Get
				Return Me._Remarks
			End Get
			Set
				If (String.Equals(Me._Remarks, value) = false) Then
					Me.OnRemarksChanging(value)
					Me.SendPropertyChanging
					Me._Remarks = value
					Me.SendPropertyChanged("Remarks")
					Me.OnRemarksChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.HRLGAs")>  _
	Partial Public Class HRLGA
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _LGAID As String
		
		Private _LGAName As String
		
		Private _StateID As String
		
		Private _CountryID As String
		
		Private _LgaSign As System.Nullable(Of Char)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnLGAIDChanging(value As String)
    End Sub
    Partial Private Sub OnLGAIDChanged()
    End Sub
    Partial Private Sub OnLGANameChanging(value As String)
    End Sub
    Partial Private Sub OnLGANameChanged()
    End Sub
    Partial Private Sub OnStateIDChanging(value As String)
    End Sub
    Partial Private Sub OnStateIDChanged()
    End Sub
    Partial Private Sub OnCountryIDChanging(value As String)
    End Sub
    Partial Private Sub OnCountryIDChanged()
    End Sub
    Partial Private Sub OnLgaSignChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnLgaSignChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LGAID", DbType:="VarChar(10) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property LGAID() As String
			Get
				Return Me._LGAID
			End Get
			Set
				If (String.Equals(Me._LGAID, value) = false) Then
					Me.OnLGAIDChanging(value)
					Me.SendPropertyChanging
					Me._LGAID = value
					Me.SendPropertyChanged("LGAID")
					Me.OnLGAIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LGAName", DbType:="VarChar(50)")>  _
		Public Property LGAName() As String
			Get
				Return Me._LGAName
			End Get
			Set
				If (String.Equals(Me._LGAName, value) = false) Then
					Me.OnLGANameChanging(value)
					Me.SendPropertyChanging
					Me._LGAName = value
					Me.SendPropertyChanged("LGAName")
					Me.OnLGANameChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StateID", DbType:="Char(2) NOT NULL", CanBeNull:=false)>  _
		Public Property StateID() As String
			Get
				Return Me._StateID
			End Get
			Set
				If (String.Equals(Me._StateID, value) = false) Then
					Me.OnStateIDChanging(value)
					Me.SendPropertyChanging
					Me._StateID = value
					Me.SendPropertyChanged("StateID")
					Me.OnStateIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CountryID", DbType:="Char(3)")>  _
		Public Property CountryID() As String
			Get
				Return Me._CountryID
			End Get
			Set
				If (String.Equals(Me._CountryID, value) = false) Then
					Me.OnCountryIDChanging(value)
					Me.SendPropertyChanging
					Me._CountryID = value
					Me.SendPropertyChanged("CountryID")
					Me.OnCountryIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LgaSign", DbType:="Char(1)")>  _
		Public Property LgaSign() As System.Nullable(Of Char)
			Get
				Return Me._LgaSign
			End Get
			Set
				If (Me._LgaSign.Equals(value) = false) Then
					Me.OnLgaSignChanging(value)
					Me.SendPropertyChanging
					Me._LgaSign = value
					Me.SendPropertyChanged("LgaSign")
					Me.OnLgaSignChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.HRStates")>  _
	Partial Public Class HRState
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _StateID As String
		
		Private _StateName As String
		
		Private _StateCountry As String
		
		Private _StateSign As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnStateIDChanging(value As String)
    End Sub
    Partial Private Sub OnStateIDChanged()
    End Sub
    Partial Private Sub OnStateNameChanging(value As String)
    End Sub
    Partial Private Sub OnStateNameChanged()
    End Sub
    Partial Private Sub OnStateCountryChanging(value As String)
    End Sub
    Partial Private Sub OnStateCountryChanged()
    End Sub
    Partial Private Sub OnStateSignChanging(value As String)
    End Sub
    Partial Private Sub OnStateSignChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StateID", DbType:="Char(2) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property StateID() As String
			Get
				Return Me._StateID
			End Get
			Set
				If (String.Equals(Me._StateID, value) = false) Then
					Me.OnStateIDChanging(value)
					Me.SendPropertyChanging
					Me._StateID = value
					Me.SendPropertyChanged("StateID")
					Me.OnStateIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StateName", DbType:="VarChar(50)")>  _
		Public Property StateName() As String
			Get
				Return Me._StateName
			End Get
			Set
				If (String.Equals(Me._StateName, value) = false) Then
					Me.OnStateNameChanging(value)
					Me.SendPropertyChanging
					Me._StateName = value
					Me.SendPropertyChanged("StateName")
					Me.OnStateNameChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StateCountry", DbType:="Char(3)")>  _
		Public Property StateCountry() As String
			Get
				Return Me._StateCountry
			End Get
			Set
				If (String.Equals(Me._StateCountry, value) = false) Then
					Me.OnStateCountryChanging(value)
					Me.SendPropertyChanging
					Me._StateCountry = value
					Me.SendPropertyChanged("StateCountry")
					Me.OnStateCountryChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StateSign", DbType:="Char(10)")>  _
		Public Property StateSign() As String
			Get
				Return Me._StateSign
			End Get
			Set
				If (String.Equals(Me._StateSign, value) = false) Then
					Me.OnStateSignChanging(value)
					Me.SendPropertyChanging
					Me._StateSign = value
					Me.SendPropertyChanged("StateSign")
					Me.OnStateSignChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.HRTrainHistory")>  _
	Partial Public Class HRTrainHistory
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _TrainHisID As Integer
		
		Private _EmployeeID As String
		
		Private _DueDate As System.Nullable(Of Date)
		
		Private _TrainDesc As String
		
		Private _Duration As System.Nullable(Of Long)
		
		Private _Frequency As String
		
		Private _TrainCadreID As String
		
		Private _TrainCadre As String
		
		Private _TrainVenue As String
		
		Private _Organisers As String
		
		Private _CourseCost As System.Nullable(Of Decimal)
		
		Private _AccomCost As System.Nullable(Of Decimal)
		
		Private _TranspCost As System.Nullable(Of Decimal)
		
		Private _feedingCost As System.Nullable(Of Decimal)
		
		Private _ReimbDate As System.Nullable(Of Date)
		
		Private _StartDate As System.Nullable(Of Date)
		
		Private _EndDate As System.Nullable(Of Date)
		
		Private _CertObtained As String
		
		Private _Remarks As String
		
		Private _Tag As String
		
		Private _Deleted As System.Nullable(Of Byte)
		
		Private _Active As System.Nullable(Of Byte)
		
		Private _Approval As System.Nullable(Of Byte)
		
		Private _Submittedby As String
		
		Private _SubmittedOn As System.Nullable(Of Date)
		
		Private _ModifiedBy As String
		
		Private _ModifiedOn As System.Nullable(Of Date)
		
		Private _Approvedby As String
		
		Private _ApprovedOn As System.Nullable(Of Date)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnTrainHisIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnTrainHisIDChanged()
    End Sub
    Partial Private Sub OnEmployeeIDChanging(value As String)
    End Sub
    Partial Private Sub OnEmployeeIDChanged()
    End Sub
    Partial Private Sub OnDueDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDueDateChanged()
    End Sub
    Partial Private Sub OnTrainDescChanging(value As String)
    End Sub
    Partial Private Sub OnTrainDescChanged()
    End Sub
    Partial Private Sub OnDurationChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnDurationChanged()
    End Sub
    Partial Private Sub OnFrequencyChanging(value As String)
    End Sub
    Partial Private Sub OnFrequencyChanged()
    End Sub
    Partial Private Sub OnTrainCadreIDChanging(value As String)
    End Sub
    Partial Private Sub OnTrainCadreIDChanged()
    End Sub
    Partial Private Sub OnTrainCadreChanging(value As String)
    End Sub
    Partial Private Sub OnTrainCadreChanged()
    End Sub
    Partial Private Sub OnTrainVenueChanging(value As String)
    End Sub
    Partial Private Sub OnTrainVenueChanged()
    End Sub
    Partial Private Sub OnOrganisersChanging(value As String)
    End Sub
    Partial Private Sub OnOrganisersChanged()
    End Sub
    Partial Private Sub OnCourseCostChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnCourseCostChanged()
    End Sub
    Partial Private Sub OnAccomCostChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnAccomCostChanged()
    End Sub
    Partial Private Sub OnTranspCostChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnTranspCostChanged()
    End Sub
    Partial Private Sub OnfeedingCostChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnfeedingCostChanged()
    End Sub
    Partial Private Sub OnReimbDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnReimbDateChanged()
    End Sub
    Partial Private Sub OnStartDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnStartDateChanged()
    End Sub
    Partial Private Sub OnEndDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnEndDateChanged()
    End Sub
    Partial Private Sub OnCertObtainedChanging(value As String)
    End Sub
    Partial Private Sub OnCertObtainedChanged()
    End Sub
    Partial Private Sub OnRemarksChanging(value As String)
    End Sub
    Partial Private Sub OnRemarksChanged()
    End Sub
    Partial Private Sub OnTagChanging(value As String)
    End Sub
    Partial Private Sub OnTagChanged()
    End Sub
    Partial Private Sub OnDeletedChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnDeletedChanged()
    End Sub
    Partial Private Sub OnActiveChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnActiveChanged()
    End Sub
    Partial Private Sub OnApprovalChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnApprovalChanged()
    End Sub
    Partial Private Sub OnSubmittedbyChanging(value As String)
    End Sub
    Partial Private Sub OnSubmittedbyChanged()
    End Sub
    Partial Private Sub OnSubmittedOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSubmittedOnChanged()
    End Sub
    Partial Private Sub OnModifiedByChanging(value As String)
    End Sub
    Partial Private Sub OnModifiedByChanged()
    End Sub
    Partial Private Sub OnModifiedOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnModifiedOnChanged()
    End Sub
    Partial Private Sub OnApprovedbyChanging(value As String)
    End Sub
    Partial Private Sub OnApprovedbyChanged()
    End Sub
    Partial Private Sub OnApprovedOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnApprovedOnChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TrainHisID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property TrainHisID() As Integer
			Get
				Return Me._TrainHisID
			End Get
			Set
				If ((Me._TrainHisID = value)  _
							= false) Then
					Me.OnTrainHisIDChanging(value)
					Me.SendPropertyChanging
					Me._TrainHisID = value
					Me.SendPropertyChanged("TrainHisID")
					Me.OnTrainHisIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EmployeeID", DbType:="VarChar(120)")>  _
		Public Property EmployeeID() As String
			Get
				Return Me._EmployeeID
			End Get
			Set
				If (String.Equals(Me._EmployeeID, value) = false) Then
					Me.OnEmployeeIDChanging(value)
					Me.SendPropertyChanging
					Me._EmployeeID = value
					Me.SendPropertyChanged("EmployeeID")
					Me.OnEmployeeIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DueDate", DbType:="SmallDateTime")>  _
		Public Property DueDate() As System.Nullable(Of Date)
			Get
				Return Me._DueDate
			End Get
			Set
				If (Me._DueDate.Equals(value) = false) Then
					Me.OnDueDateChanging(value)
					Me.SendPropertyChanging
					Me._DueDate = value
					Me.SendPropertyChanged("DueDate")
					Me.OnDueDateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TrainDesc", DbType:="VarChar(512)")>  _
		Public Property TrainDesc() As String
			Get
				Return Me._TrainDesc
			End Get
			Set
				If (String.Equals(Me._TrainDesc, value) = false) Then
					Me.OnTrainDescChanging(value)
					Me.SendPropertyChanging
					Me._TrainDesc = value
					Me.SendPropertyChanged("TrainDesc")
					Me.OnTrainDescChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Duration", DbType:="BigInt")>  _
		Public Property Duration() As System.Nullable(Of Long)
			Get
				Return Me._Duration
			End Get
			Set
				If (Me._Duration.Equals(value) = false) Then
					Me.OnDurationChanging(value)
					Me.SendPropertyChanging
					Me._Duration = value
					Me.SendPropertyChanged("Duration")
					Me.OnDurationChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Frequency", DbType:="VarChar(64)")>  _
		Public Property Frequency() As String
			Get
				Return Me._Frequency
			End Get
			Set
				If (String.Equals(Me._Frequency, value) = false) Then
					Me.OnFrequencyChanging(value)
					Me.SendPropertyChanging
					Me._Frequency = value
					Me.SendPropertyChanged("Frequency")
					Me.OnFrequencyChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TrainCadreID", DbType:="VarChar(64)")>  _
		Public Property TrainCadreID() As String
			Get
				Return Me._TrainCadreID
			End Get
			Set
				If (String.Equals(Me._TrainCadreID, value) = false) Then
					Me.OnTrainCadreIDChanging(value)
					Me.SendPropertyChanging
					Me._TrainCadreID = value
					Me.SendPropertyChanged("TrainCadreID")
					Me.OnTrainCadreIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TrainCadre", DbType:="VarChar(256)")>  _
		Public Property TrainCadre() As String
			Get
				Return Me._TrainCadre
			End Get
			Set
				If (String.Equals(Me._TrainCadre, value) = false) Then
					Me.OnTrainCadreChanging(value)
					Me.SendPropertyChanging
					Me._TrainCadre = value
					Me.SendPropertyChanged("TrainCadre")
					Me.OnTrainCadreChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TrainVenue", DbType:="VarChar(512)")>  _
		Public Property TrainVenue() As String
			Get
				Return Me._TrainVenue
			End Get
			Set
				If (String.Equals(Me._TrainVenue, value) = false) Then
					Me.OnTrainVenueChanging(value)
					Me.SendPropertyChanging
					Me._TrainVenue = value
					Me.SendPropertyChanged("TrainVenue")
					Me.OnTrainVenueChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Organisers", DbType:="VarChar(512)")>  _
		Public Property Organisers() As String
			Get
				Return Me._Organisers
			End Get
			Set
				If (String.Equals(Me._Organisers, value) = false) Then
					Me.OnOrganisersChanging(value)
					Me.SendPropertyChanging
					Me._Organisers = value
					Me.SendPropertyChanged("Organisers")
					Me.OnOrganisersChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CourseCost", DbType:="Money")>  _
		Public Property CourseCost() As System.Nullable(Of Decimal)
			Get
				Return Me._CourseCost
			End Get
			Set
				If (Me._CourseCost.Equals(value) = false) Then
					Me.OnCourseCostChanging(value)
					Me.SendPropertyChanging
					Me._CourseCost = value
					Me.SendPropertyChanged("CourseCost")
					Me.OnCourseCostChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccomCost", DbType:="Money")>  _
		Public Property AccomCost() As System.Nullable(Of Decimal)
			Get
				Return Me._AccomCost
			End Get
			Set
				If (Me._AccomCost.Equals(value) = false) Then
					Me.OnAccomCostChanging(value)
					Me.SendPropertyChanging
					Me._AccomCost = value
					Me.SendPropertyChanged("AccomCost")
					Me.OnAccomCostChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TranspCost", DbType:="Money")>  _
		Public Property TranspCost() As System.Nullable(Of Decimal)
			Get
				Return Me._TranspCost
			End Get
			Set
				If (Me._TranspCost.Equals(value) = false) Then
					Me.OnTranspCostChanging(value)
					Me.SendPropertyChanging
					Me._TranspCost = value
					Me.SendPropertyChanged("TranspCost")
					Me.OnTranspCostChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_feedingCost", DbType:="Money")>  _
		Public Property feedingCost() As System.Nullable(Of Decimal)
			Get
				Return Me._feedingCost
			End Get
			Set
				If (Me._feedingCost.Equals(value) = false) Then
					Me.OnfeedingCostChanging(value)
					Me.SendPropertyChanging
					Me._feedingCost = value
					Me.SendPropertyChanged("feedingCost")
					Me.OnfeedingCostChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ReimbDate", DbType:="SmallDateTime")>  _
		Public Property ReimbDate() As System.Nullable(Of Date)
			Get
				Return Me._ReimbDate
			End Get
			Set
				If (Me._ReimbDate.Equals(value) = false) Then
					Me.OnReimbDateChanging(value)
					Me.SendPropertyChanging
					Me._ReimbDate = value
					Me.SendPropertyChanged("ReimbDate")
					Me.OnReimbDateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StartDate", DbType:="SmallDateTime")>  _
		Public Property StartDate() As System.Nullable(Of Date)
			Get
				Return Me._StartDate
			End Get
			Set
				If (Me._StartDate.Equals(value) = false) Then
					Me.OnStartDateChanging(value)
					Me.SendPropertyChanging
					Me._StartDate = value
					Me.SendPropertyChanged("StartDate")
					Me.OnStartDateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EndDate", DbType:="SmallDateTime")>  _
		Public Property EndDate() As System.Nullable(Of Date)
			Get
				Return Me._EndDate
			End Get
			Set
				If (Me._EndDate.Equals(value) = false) Then
					Me.OnEndDateChanging(value)
					Me.SendPropertyChanging
					Me._EndDate = value
					Me.SendPropertyChanged("EndDate")
					Me.OnEndDateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CertObtained", DbType:="VarChar(64)")>  _
		Public Property CertObtained() As String
			Get
				Return Me._CertObtained
			End Get
			Set
				If (String.Equals(Me._CertObtained, value) = false) Then
					Me.OnCertObtainedChanging(value)
					Me.SendPropertyChanging
					Me._CertObtained = value
					Me.SendPropertyChanged("CertObtained")
					Me.OnCertObtainedChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Remarks", DbType:="VarChar(255)")>  _
		Public Property Remarks() As String
			Get
				Return Me._Remarks
			End Get
			Set
				If (String.Equals(Me._Remarks, value) = false) Then
					Me.OnRemarksChanging(value)
					Me.SendPropertyChanging
					Me._Remarks = value
					Me.SendPropertyChanged("Remarks")
					Me.OnRemarksChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tag", DbType:="VarChar(255)")>  _
		Public Property Tag() As String
			Get
				Return Me._Tag
			End Get
			Set
				If (String.Equals(Me._Tag, value) = false) Then
					Me.OnTagChanging(value)
					Me.SendPropertyChanging
					Me._Tag = value
					Me.SendPropertyChanged("Tag")
					Me.OnTagChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Deleted", DbType:="TinyInt")>  _
		Public Property Deleted() As System.Nullable(Of Byte)
			Get
				Return Me._Deleted
			End Get
			Set
				If (Me._Deleted.Equals(value) = false) Then
					Me.OnDeletedChanging(value)
					Me.SendPropertyChanging
					Me._Deleted = value
					Me.SendPropertyChanged("Deleted")
					Me.OnDeletedChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Active", DbType:="TinyInt")>  _
		Public Property Active() As System.Nullable(Of Byte)
			Get
				Return Me._Active
			End Get
			Set
				If (Me._Active.Equals(value) = false) Then
					Me.OnActiveChanging(value)
					Me.SendPropertyChanging
					Me._Active = value
					Me.SendPropertyChanged("Active")
					Me.OnActiveChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Approval", DbType:="TinyInt")>  _
		Public Property Approval() As System.Nullable(Of Byte)
			Get
				Return Me._Approval
			End Get
			Set
				If (Me._Approval.Equals(value) = false) Then
					Me.OnApprovalChanging(value)
					Me.SendPropertyChanging
					Me._Approval = value
					Me.SendPropertyChanged("Approval")
					Me.OnApprovalChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Submittedby", DbType:="VarChar(50)")>  _
		Public Property Submittedby() As String
			Get
				Return Me._Submittedby
			End Get
			Set
				If (String.Equals(Me._Submittedby, value) = false) Then
					Me.OnSubmittedbyChanging(value)
					Me.SendPropertyChanging
					Me._Submittedby = value
					Me.SendPropertyChanged("Submittedby")
					Me.OnSubmittedbyChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubmittedOn", DbType:="DateTime")>  _
		Public Property SubmittedOn() As System.Nullable(Of Date)
			Get
				Return Me._SubmittedOn
			End Get
			Set
				If (Me._SubmittedOn.Equals(value) = false) Then
					Me.OnSubmittedOnChanging(value)
					Me.SendPropertyChanging
					Me._SubmittedOn = value
					Me.SendPropertyChanged("SubmittedOn")
					Me.OnSubmittedOnChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedBy", DbType:="VarChar(50)")>  _
		Public Property ModifiedBy() As String
			Get
				Return Me._ModifiedBy
			End Get
			Set
				If (String.Equals(Me._ModifiedBy, value) = false) Then
					Me.OnModifiedByChanging(value)
					Me.SendPropertyChanging
					Me._ModifiedBy = value
					Me.SendPropertyChanged("ModifiedBy")
					Me.OnModifiedByChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedOn", DbType:="DateTime")>  _
		Public Property ModifiedOn() As System.Nullable(Of Date)
			Get
				Return Me._ModifiedOn
			End Get
			Set
				If (Me._ModifiedOn.Equals(value) = false) Then
					Me.OnModifiedOnChanging(value)
					Me.SendPropertyChanging
					Me._ModifiedOn = value
					Me.SendPropertyChanged("ModifiedOn")
					Me.OnModifiedOnChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Approvedby", DbType:="VarChar(64)")>  _
		Public Property Approvedby() As String
			Get
				Return Me._Approvedby
			End Get
			Set
				If (String.Equals(Me._Approvedby, value) = false) Then
					Me.OnApprovedbyChanging(value)
					Me.SendPropertyChanging
					Me._Approvedby = value
					Me.SendPropertyChanged("Approvedby")
					Me.OnApprovedbyChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApprovedOn", DbType:="SmallDateTime")>  _
		Public Property ApprovedOn() As System.Nullable(Of Date)
			Get
				Return Me._ApprovedOn
			End Get
			Set
				If (Me._ApprovedOn.Equals(value) = false) Then
					Me.OnApprovedOnChanging(value)
					Me.SendPropertyChanging
					Me._ApprovedOn = value
					Me.SendPropertyChanged("ApprovedOn")
					Me.OnApprovedOnChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.LoanType")>  _
	Partial Public Class LoanType
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _TypeID As Long
		
		Private _LoanType As String
		
		Private _LoanRate As System.Nullable(Of Double)
		
		Private _A1 As System.Nullable(Of Decimal)
		
		Private _A2 As System.Nullable(Of Decimal)
		
		Private _Remarks As String
		
		Private _Tag As String
		
		Private _SubmittedBy As String
		
		Private _SubmittedOn As System.Nullable(Of Date)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnTypeIDChanging(value As Long)
    End Sub
    Partial Private Sub OnTypeIDChanged()
    End Sub
    Partial Private Sub OnLoanTypeChanging(value As String)
    End Sub
    Partial Private Sub OnLoanTypeChanged()
    End Sub
    Partial Private Sub OnLoanRateChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnLoanRateChanged()
    End Sub
    Partial Private Sub OnA1Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnA1Changed()
    End Sub
    Partial Private Sub OnA2Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnA2Changed()
    End Sub
    Partial Private Sub OnRemarksChanging(value As String)
    End Sub
    Partial Private Sub OnRemarksChanged()
    End Sub
    Partial Private Sub OnTagChanging(value As String)
    End Sub
    Partial Private Sub OnTagChanged()
    End Sub
    Partial Private Sub OnSubmittedByChanging(value As String)
    End Sub
    Partial Private Sub OnSubmittedByChanged()
    End Sub
    Partial Private Sub OnSubmittedOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSubmittedOnChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TypeID", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property TypeID() As Long
			Get
				Return Me._TypeID
			End Get
			Set
				If ((Me._TypeID = value)  _
							= false) Then
					Me.OnTypeIDChanging(value)
					Me.SendPropertyChanging
					Me._TypeID = value
					Me.SendPropertyChanged("TypeID")
					Me.OnTypeIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LoanType", DbType:="VarChar(256)")>  _
		Public Property LoanType() As String
			Get
				Return Me._LoanType
			End Get
			Set
				If (String.Equals(Me._LoanType, value) = false) Then
					Me.OnLoanTypeChanging(value)
					Me.SendPropertyChanging
					Me._LoanType = value
					Me.SendPropertyChanged("LoanType")
					Me.OnLoanTypeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LoanRate", DbType:="Float")>  _
		Public Property LoanRate() As System.Nullable(Of Double)
			Get
				Return Me._LoanRate
			End Get
			Set
				If (Me._LoanRate.Equals(value) = false) Then
					Me.OnLoanRateChanging(value)
					Me.SendPropertyChanging
					Me._LoanRate = value
					Me.SendPropertyChanged("LoanRate")
					Me.OnLoanRateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A1", DbType:="Money")>  _
		Public Property A1() As System.Nullable(Of Decimal)
			Get
				Return Me._A1
			End Get
			Set
				If (Me._A1.Equals(value) = false) Then
					Me.OnA1Changing(value)
					Me.SendPropertyChanging
					Me._A1 = value
					Me.SendPropertyChanged("A1")
					Me.OnA1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A2", DbType:="Money")>  _
		Public Property A2() As System.Nullable(Of Decimal)
			Get
				Return Me._A2
			End Get
			Set
				If (Me._A2.Equals(value) = false) Then
					Me.OnA2Changing(value)
					Me.SendPropertyChanging
					Me._A2 = value
					Me.SendPropertyChanged("A2")
					Me.OnA2Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Remarks", DbType:="VarChar(50)")>  _
		Public Property Remarks() As String
			Get
				Return Me._Remarks
			End Get
			Set
				If (String.Equals(Me._Remarks, value) = false) Then
					Me.OnRemarksChanging(value)
					Me.SendPropertyChanging
					Me._Remarks = value
					Me.SendPropertyChanged("Remarks")
					Me.OnRemarksChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tag", DbType:="VarChar(50)")>  _
		Public Property Tag() As String
			Get
				Return Me._Tag
			End Get
			Set
				If (String.Equals(Me._Tag, value) = false) Then
					Me.OnTagChanging(value)
					Me.SendPropertyChanging
					Me._Tag = value
					Me.SendPropertyChanged("Tag")
					Me.OnTagChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubmittedBy", DbType:="VarChar(50)")>  _
		Public Property SubmittedBy() As String
			Get
				Return Me._SubmittedBy
			End Get
			Set
				If (String.Equals(Me._SubmittedBy, value) = false) Then
					Me.OnSubmittedByChanging(value)
					Me.SendPropertyChanging
					Me._SubmittedBy = value
					Me.SendPropertyChanged("SubmittedBy")
					Me.OnSubmittedByChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubmittedOn", DbType:="DateTime")>  _
		Public Property SubmittedOn() As System.Nullable(Of Date)
			Get
				Return Me._SubmittedOn
			End Get
			Set
				If (Me._SubmittedOn.Equals(value) = false) Then
					Me.OnSubmittedOnChanging(value)
					Me.SendPropertyChanging
					Me._SubmittedOn = value
					Me.SendPropertyChanged("SubmittedOn")
					Me.OnSubmittedOnChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.PaySlips")>  _
	Partial Public Class PaySlip
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _ID As Integer
		
		Private _SheetID As System.Nullable(Of Integer)
		
		Private _EmployeeID As String
		
		Private _Surname As String
		
		Private _OtherNames As String
		
		Private _Period As String
		
		Private _Basic As System.Nullable(Of Decimal)
		
		Private _Housing As System.Nullable(Of Decimal)
		
		Private _Transport As System.Nullable(Of Decimal)
		
		Private _A1 As System.Nullable(Of Decimal)
		
		Private _A2 As System.Nullable(Of Decimal)
		
		Private _A3 As System.Nullable(Of Decimal)
		
		Private _A4 As System.Nullable(Of Decimal)
		
		Private _A5 As System.Nullable(Of Decimal)
		
		Private _A6 As System.Nullable(Of Decimal)
		
		Private _A7 As System.Nullable(Of Decimal)
		
		Private _A8 As System.Nullable(Of Decimal)
		
		Private _A9 As System.Nullable(Of Decimal)
		
		Private _A10 As System.Nullable(Of Decimal)
		
		Private _A11 As System.Nullable(Of Decimal)
		
		Private _A12 As System.Nullable(Of Decimal)
		
		Private _A13 As System.Nullable(Of Decimal)
		
		Private _A14 As System.Nullable(Of Decimal)
		
		Private _A15 As System.Nullable(Of Decimal)
		
		Private _A16 As System.Nullable(Of Decimal)
		
		Private _A17 As System.Nullable(Of Decimal)
		
		Private _A18 As System.Nullable(Of Decimal)
		
		Private _A19 As System.Nullable(Of Decimal)
		
		Private _A20 As System.Nullable(Of Decimal)
		
		Private _A21 As System.Nullable(Of Decimal)
		
		Private _A22 As System.Nullable(Of Decimal)
		
		Private _A23 As System.Nullable(Of Decimal)
		
		Private _A24 As System.Nullable(Of Decimal)
		
		Private _A25 As System.Nullable(Of Decimal)
		
		Private _A26 As System.Nullable(Of Decimal)
		
		Private _A27 As System.Nullable(Of Decimal)
		
		Private _A28 As System.Nullable(Of Decimal)
		
		Private _A29 As System.Nullable(Of Decimal)
		
		Private _A30 As System.Nullable(Of Decimal)
		
		Private _ATotal As System.Nullable(Of Decimal)
		
		Private _GrossPay As System.Nullable(Of Decimal)
		
		Private _D1 As System.Nullable(Of Decimal)
		
		Private _D2 As System.Nullable(Of Decimal)
		
		Private _D3 As System.Nullable(Of Decimal)
		
		Private _D4 As System.Nullable(Of Decimal)
		
		Private _D5 As System.Nullable(Of Decimal)
		
		Private _D6 As System.Nullable(Of Decimal)
		
		Private _D7 As System.Nullable(Of Decimal)
		
		Private _D8 As System.Nullable(Of Decimal)
		
		Private _D9 As System.Nullable(Of Decimal)
		
		Private _D10 As System.Nullable(Of Decimal)
		
		Private _D11 As System.Nullable(Of Decimal)
		
		Private _D12 As System.Nullable(Of Decimal)
		
		Private _D13 As System.Nullable(Of Decimal)
		
		Private _D14 As System.Nullable(Of Decimal)
		
		Private _D15 As System.Nullable(Of Decimal)
		
		Private _D16 As System.Nullable(Of Decimal)
		
		Private _D17 As System.Nullable(Of Decimal)
		
		Private _D18 As System.Nullable(Of Decimal)
		
		Private _D19 As System.Nullable(Of Decimal)
		
		Private _D20 As System.Nullable(Of Decimal)
		
		Private _D21 As System.Nullable(Of Decimal)
		
		Private _D22 As System.Nullable(Of Decimal)
		
		Private _D23 As System.Nullable(Of Decimal)
		
		Private _D24 As System.Nullable(Of Decimal)
		
		Private _D25 As System.Nullable(Of Decimal)
		
		Private _D26 As System.Nullable(Of Decimal)
		
		Private _D27 As System.Nullable(Of Decimal)
		
		Private _D28 As System.Nullable(Of Decimal)
		
		Private _D29 As System.Nullable(Of Decimal)
		
		Private _D30 As System.Nullable(Of Decimal)
		
		Private _D31 As System.Nullable(Of Decimal)
		
		Private _D32 As System.Nullable(Of Decimal)
		
		Private _D33 As System.Nullable(Of Decimal)
		
		Private _D34 As System.Nullable(Of Decimal)
		
		Private _D35 As System.Nullable(Of Decimal)
		
		Private _D36 As System.Nullable(Of Decimal)
		
		Private _D37 As System.Nullable(Of Decimal)
		
		Private _D38 As System.Nullable(Of Decimal)
		
		Private _D39 As System.Nullable(Of Decimal)
		
		Private _D40 As System.Nullable(Of Decimal)
		
		Private _D41 As System.Nullable(Of Decimal)
		
		Private _D42 As System.Nullable(Of Decimal)
		
		Private _D43 As System.Nullable(Of Decimal)
		
		Private _D44 As System.Nullable(Of Decimal)
		
		Private _D45 As System.Nullable(Of Decimal)
		
		Private _D46 As System.Nullable(Of Decimal)
		
		Private _D47 As System.Nullable(Of Decimal)
		
		Private _D48 As System.Nullable(Of Decimal)
		
		Private _D49 As System.Nullable(Of Decimal)
		
		Private _D50 As System.Nullable(Of Decimal)
		
		Private _DTotal As System.Nullable(Of Decimal)
		
		Private _NetPay As System.Nullable(Of Decimal)
		
		Private _Confirmation As String
		
		Private _BranchID As String
		
		Private _DeptID As String
		
		Private _UnitID As String
		
		Private _Step As String
		
		Private _GradeID As System.Nullable(Of Long)
		
		Private _Grade As String
		
		Private _EmployeeStatus As String
		
		Private _Detail As String
		
		Private _TransGUID As String
		
		Private _TransSTATUS As String
		
		Private _SubmittedBy As String
		
		Private _SubmittedOn As System.Nullable(Of Date)
		
		Private _ModifiedBy As String
		
		Private _ModifiedOn As System.Nullable(Of Date)
		
		Private _BatchGUID As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnSheetIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSheetIDChanged()
    End Sub
    Partial Private Sub OnEmployeeIDChanging(value As String)
    End Sub
    Partial Private Sub OnEmployeeIDChanged()
    End Sub
    Partial Private Sub OnSurnameChanging(value As String)
    End Sub
    Partial Private Sub OnSurnameChanged()
    End Sub
    Partial Private Sub OnOtherNamesChanging(value As String)
    End Sub
    Partial Private Sub OnOtherNamesChanged()
    End Sub
    Partial Private Sub OnPeriodChanging(value As String)
    End Sub
    Partial Private Sub OnPeriodChanged()
    End Sub
    Partial Private Sub OnBasicChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnBasicChanged()
    End Sub
    Partial Private Sub OnHousingChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnHousingChanged()
    End Sub
    Partial Private Sub OnTransportChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnTransportChanged()
    End Sub
    Partial Private Sub OnA1Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnA1Changed()
    End Sub
    Partial Private Sub OnA2Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnA2Changed()
    End Sub
    Partial Private Sub OnA3Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnA3Changed()
    End Sub
    Partial Private Sub OnA4Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnA4Changed()
    End Sub
    Partial Private Sub OnA5Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnA5Changed()
    End Sub
    Partial Private Sub OnA6Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnA6Changed()
    End Sub
    Partial Private Sub OnA7Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnA7Changed()
    End Sub
    Partial Private Sub OnA8Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnA8Changed()
    End Sub
    Partial Private Sub OnA9Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnA9Changed()
    End Sub
    Partial Private Sub OnA10Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnA10Changed()
    End Sub
    Partial Private Sub OnA11Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnA11Changed()
    End Sub
    Partial Private Sub OnA12Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnA12Changed()
    End Sub
    Partial Private Sub OnA13Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnA13Changed()
    End Sub
    Partial Private Sub OnA14Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnA14Changed()
    End Sub
    Partial Private Sub OnA15Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnA15Changed()
    End Sub
    Partial Private Sub OnA16Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnA16Changed()
    End Sub
    Partial Private Sub OnA17Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnA17Changed()
    End Sub
    Partial Private Sub OnA18Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnA18Changed()
    End Sub
    Partial Private Sub OnA19Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnA19Changed()
    End Sub
    Partial Private Sub OnA20Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnA20Changed()
    End Sub
    Partial Private Sub OnA21Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnA21Changed()
    End Sub
    Partial Private Sub OnA22Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnA22Changed()
    End Sub
    Partial Private Sub OnA23Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnA23Changed()
    End Sub
    Partial Private Sub OnA24Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnA24Changed()
    End Sub
    Partial Private Sub OnA25Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnA25Changed()
    End Sub
    Partial Private Sub OnA26Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnA26Changed()
    End Sub
    Partial Private Sub OnA27Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnA27Changed()
    End Sub
    Partial Private Sub OnA28Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnA28Changed()
    End Sub
    Partial Private Sub OnA29Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnA29Changed()
    End Sub
    Partial Private Sub OnA30Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnA30Changed()
    End Sub
    Partial Private Sub OnATotalChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnATotalChanged()
    End Sub
    Partial Private Sub OnGrossPayChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnGrossPayChanged()
    End Sub
    Partial Private Sub OnD1Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnD1Changed()
    End Sub
    Partial Private Sub OnD2Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnD2Changed()
    End Sub
    Partial Private Sub OnD3Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnD3Changed()
    End Sub
    Partial Private Sub OnD4Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnD4Changed()
    End Sub
    Partial Private Sub OnD5Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnD5Changed()
    End Sub
    Partial Private Sub OnD6Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnD6Changed()
    End Sub
    Partial Private Sub OnD7Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnD7Changed()
    End Sub
    Partial Private Sub OnD8Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnD8Changed()
    End Sub
    Partial Private Sub OnD9Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnD9Changed()
    End Sub
    Partial Private Sub OnD10Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnD10Changed()
    End Sub
    Partial Private Sub OnD11Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnD11Changed()
    End Sub
    Partial Private Sub OnD12Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnD12Changed()
    End Sub
    Partial Private Sub OnD13Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnD13Changed()
    End Sub
    Partial Private Sub OnD14Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnD14Changed()
    End Sub
    Partial Private Sub OnD15Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnD15Changed()
    End Sub
    Partial Private Sub OnD16Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnD16Changed()
    End Sub
    Partial Private Sub OnD17Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnD17Changed()
    End Sub
    Partial Private Sub OnD18Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnD18Changed()
    End Sub
    Partial Private Sub OnD19Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnD19Changed()
    End Sub
    Partial Private Sub OnD20Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnD20Changed()
    End Sub
    Partial Private Sub OnD21Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnD21Changed()
    End Sub
    Partial Private Sub OnD22Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnD22Changed()
    End Sub
    Partial Private Sub OnD23Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnD23Changed()
    End Sub
    Partial Private Sub OnD24Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnD24Changed()
    End Sub
    Partial Private Sub OnD25Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnD25Changed()
    End Sub
    Partial Private Sub OnD26Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnD26Changed()
    End Sub
    Partial Private Sub OnD27Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnD27Changed()
    End Sub
    Partial Private Sub OnD28Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnD28Changed()
    End Sub
    Partial Private Sub OnD29Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnD29Changed()
    End Sub
    Partial Private Sub OnD30Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnD30Changed()
    End Sub
    Partial Private Sub OnD31Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnD31Changed()
    End Sub
    Partial Private Sub OnD32Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnD32Changed()
    End Sub
    Partial Private Sub OnD33Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnD33Changed()
    End Sub
    Partial Private Sub OnD34Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnD34Changed()
    End Sub
    Partial Private Sub OnD35Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnD35Changed()
    End Sub
    Partial Private Sub OnD36Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnD36Changed()
    End Sub
    Partial Private Sub OnD37Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnD37Changed()
    End Sub
    Partial Private Sub OnD38Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnD38Changed()
    End Sub
    Partial Private Sub OnD39Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnD39Changed()
    End Sub
    Partial Private Sub OnD40Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnD40Changed()
    End Sub
    Partial Private Sub OnD41Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnD41Changed()
    End Sub
    Partial Private Sub OnD42Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnD42Changed()
    End Sub
    Partial Private Sub OnD43Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnD43Changed()
    End Sub
    Partial Private Sub OnD44Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnD44Changed()
    End Sub
    Partial Private Sub OnD45Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnD45Changed()
    End Sub
    Partial Private Sub OnD46Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnD46Changed()
    End Sub
    Partial Private Sub OnD47Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnD47Changed()
    End Sub
    Partial Private Sub OnD48Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnD48Changed()
    End Sub
    Partial Private Sub OnD49Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnD49Changed()
    End Sub
    Partial Private Sub OnD50Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnD50Changed()
    End Sub
    Partial Private Sub OnDTotalChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnDTotalChanged()
    End Sub
    Partial Private Sub OnNetPayChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnNetPayChanged()
    End Sub
    Partial Private Sub OnConfirmationChanging(value As String)
    End Sub
    Partial Private Sub OnConfirmationChanged()
    End Sub
    Partial Private Sub OnBranchIDChanging(value As String)
    End Sub
    Partial Private Sub OnBranchIDChanged()
    End Sub
    Partial Private Sub OnDeptIDChanging(value As String)
    End Sub
    Partial Private Sub OnDeptIDChanged()
    End Sub
    Partial Private Sub OnUnitIDChanging(value As String)
    End Sub
    Partial Private Sub OnUnitIDChanged()
    End Sub
    Partial Private Sub OnStepChanging(value As String)
    End Sub
    Partial Private Sub OnStepChanged()
    End Sub
    Partial Private Sub OnGradeIDChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnGradeIDChanged()
    End Sub
    Partial Private Sub OnGradeChanging(value As String)
    End Sub
    Partial Private Sub OnGradeChanged()
    End Sub
    Partial Private Sub OnEmployeeStatusChanging(value As String)
    End Sub
    Partial Private Sub OnEmployeeStatusChanged()
    End Sub
    Partial Private Sub OnDetailChanging(value As String)
    End Sub
    Partial Private Sub OnDetailChanged()
    End Sub
    Partial Private Sub OnTransGUIDChanging(value As String)
    End Sub
    Partial Private Sub OnTransGUIDChanged()
    End Sub
    Partial Private Sub OnTransSTATUSChanging(value As String)
    End Sub
    Partial Private Sub OnTransSTATUSChanged()
    End Sub
    Partial Private Sub OnSubmittedByChanging(value As String)
    End Sub
    Partial Private Sub OnSubmittedByChanged()
    End Sub
    Partial Private Sub OnSubmittedOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSubmittedOnChanged()
    End Sub
    Partial Private Sub OnModifiedByChanging(value As String)
    End Sub
    Partial Private Sub OnModifiedByChanged()
    End Sub
    Partial Private Sub OnModifiedOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnModifiedOnChanged()
    End Sub
    Partial Private Sub OnBatchGUIDChanging(value As String)
    End Sub
    Partial Private Sub OnBatchGUIDChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property ID() As Integer
			Get
				Return Me._ID
			End Get
			Set
				If ((Me._ID = value)  _
							= false) Then
					Me.OnIDChanging(value)
					Me.SendPropertyChanging
					Me._ID = value
					Me.SendPropertyChanged("ID")
					Me.OnIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SheetID", DbType:="Int")>  _
		Public Property SheetID() As System.Nullable(Of Integer)
			Get
				Return Me._SheetID
			End Get
			Set
				If (Me._SheetID.Equals(value) = false) Then
					Me.OnSheetIDChanging(value)
					Me.SendPropertyChanging
					Me._SheetID = value
					Me.SendPropertyChanged("SheetID")
					Me.OnSheetIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EmployeeID", DbType:="VarChar(50)")>  _
		Public Property EmployeeID() As String
			Get
				Return Me._EmployeeID
			End Get
			Set
				If (String.Equals(Me._EmployeeID, value) = false) Then
					Me.OnEmployeeIDChanging(value)
					Me.SendPropertyChanging
					Me._EmployeeID = value
					Me.SendPropertyChanged("EmployeeID")
					Me.OnEmployeeIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Surname", DbType:="VarChar(64)")>  _
		Public Property Surname() As String
			Get
				Return Me._Surname
			End Get
			Set
				If (String.Equals(Me._Surname, value) = false) Then
					Me.OnSurnameChanging(value)
					Me.SendPropertyChanging
					Me._Surname = value
					Me.SendPropertyChanged("Surname")
					Me.OnSurnameChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OtherNames", DbType:="VarChar(64)")>  _
		Public Property OtherNames() As String
			Get
				Return Me._OtherNames
			End Get
			Set
				If (String.Equals(Me._OtherNames, value) = false) Then
					Me.OnOtherNamesChanging(value)
					Me.SendPropertyChanging
					Me._OtherNames = value
					Me.SendPropertyChanged("OtherNames")
					Me.OnOtherNamesChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Period", DbType:="VarChar(50)")>  _
		Public Property Period() As String
			Get
				Return Me._Period
			End Get
			Set
				If (String.Equals(Me._Period, value) = false) Then
					Me.OnPeriodChanging(value)
					Me.SendPropertyChanging
					Me._Period = value
					Me.SendPropertyChanged("Period")
					Me.OnPeriodChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Basic", DbType:="Money")>  _
		Public Property Basic() As System.Nullable(Of Decimal)
			Get
				Return Me._Basic
			End Get
			Set
				If (Me._Basic.Equals(value) = false) Then
					Me.OnBasicChanging(value)
					Me.SendPropertyChanging
					Me._Basic = value
					Me.SendPropertyChanged("Basic")
					Me.OnBasicChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Housing", DbType:="Money")>  _
		Public Property Housing() As System.Nullable(Of Decimal)
			Get
				Return Me._Housing
			End Get
			Set
				If (Me._Housing.Equals(value) = false) Then
					Me.OnHousingChanging(value)
					Me.SendPropertyChanging
					Me._Housing = value
					Me.SendPropertyChanged("Housing")
					Me.OnHousingChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Transport", DbType:="Money")>  _
		Public Property Transport() As System.Nullable(Of Decimal)
			Get
				Return Me._Transport
			End Get
			Set
				If (Me._Transport.Equals(value) = false) Then
					Me.OnTransportChanging(value)
					Me.SendPropertyChanging
					Me._Transport = value
					Me.SendPropertyChanged("Transport")
					Me.OnTransportChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A1", DbType:="Money")>  _
		Public Property A1() As System.Nullable(Of Decimal)
			Get
				Return Me._A1
			End Get
			Set
				If (Me._A1.Equals(value) = false) Then
					Me.OnA1Changing(value)
					Me.SendPropertyChanging
					Me._A1 = value
					Me.SendPropertyChanged("A1")
					Me.OnA1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A2", DbType:="Money")>  _
		Public Property A2() As System.Nullable(Of Decimal)
			Get
				Return Me._A2
			End Get
			Set
				If (Me._A2.Equals(value) = false) Then
					Me.OnA2Changing(value)
					Me.SendPropertyChanging
					Me._A2 = value
					Me.SendPropertyChanged("A2")
					Me.OnA2Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A3", DbType:="Money")>  _
		Public Property A3() As System.Nullable(Of Decimal)
			Get
				Return Me._A3
			End Get
			Set
				If (Me._A3.Equals(value) = false) Then
					Me.OnA3Changing(value)
					Me.SendPropertyChanging
					Me._A3 = value
					Me.SendPropertyChanged("A3")
					Me.OnA3Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A4", DbType:="Money")>  _
		Public Property A4() As System.Nullable(Of Decimal)
			Get
				Return Me._A4
			End Get
			Set
				If (Me._A4.Equals(value) = false) Then
					Me.OnA4Changing(value)
					Me.SendPropertyChanging
					Me._A4 = value
					Me.SendPropertyChanged("A4")
					Me.OnA4Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A5", DbType:="Money")>  _
		Public Property A5() As System.Nullable(Of Decimal)
			Get
				Return Me._A5
			End Get
			Set
				If (Me._A5.Equals(value) = false) Then
					Me.OnA5Changing(value)
					Me.SendPropertyChanging
					Me._A5 = value
					Me.SendPropertyChanged("A5")
					Me.OnA5Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A6", DbType:="Money")>  _
		Public Property A6() As System.Nullable(Of Decimal)
			Get
				Return Me._A6
			End Get
			Set
				If (Me._A6.Equals(value) = false) Then
					Me.OnA6Changing(value)
					Me.SendPropertyChanging
					Me._A6 = value
					Me.SendPropertyChanged("A6")
					Me.OnA6Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A7", DbType:="Money")>  _
		Public Property A7() As System.Nullable(Of Decimal)
			Get
				Return Me._A7
			End Get
			Set
				If (Me._A7.Equals(value) = false) Then
					Me.OnA7Changing(value)
					Me.SendPropertyChanging
					Me._A7 = value
					Me.SendPropertyChanged("A7")
					Me.OnA7Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A8", DbType:="Money")>  _
		Public Property A8() As System.Nullable(Of Decimal)
			Get
				Return Me._A8
			End Get
			Set
				If (Me._A8.Equals(value) = false) Then
					Me.OnA8Changing(value)
					Me.SendPropertyChanging
					Me._A8 = value
					Me.SendPropertyChanged("A8")
					Me.OnA8Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A9", DbType:="Money")>  _
		Public Property A9() As System.Nullable(Of Decimal)
			Get
				Return Me._A9
			End Get
			Set
				If (Me._A9.Equals(value) = false) Then
					Me.OnA9Changing(value)
					Me.SendPropertyChanging
					Me._A9 = value
					Me.SendPropertyChanged("A9")
					Me.OnA9Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A10", DbType:="Money")>  _
		Public Property A10() As System.Nullable(Of Decimal)
			Get
				Return Me._A10
			End Get
			Set
				If (Me._A10.Equals(value) = false) Then
					Me.OnA10Changing(value)
					Me.SendPropertyChanging
					Me._A10 = value
					Me.SendPropertyChanged("A10")
					Me.OnA10Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A11", DbType:="Money")>  _
		Public Property A11() As System.Nullable(Of Decimal)
			Get
				Return Me._A11
			End Get
			Set
				If (Me._A11.Equals(value) = false) Then
					Me.OnA11Changing(value)
					Me.SendPropertyChanging
					Me._A11 = value
					Me.SendPropertyChanged("A11")
					Me.OnA11Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A12", DbType:="Money")>  _
		Public Property A12() As System.Nullable(Of Decimal)
			Get
				Return Me._A12
			End Get
			Set
				If (Me._A12.Equals(value) = false) Then
					Me.OnA12Changing(value)
					Me.SendPropertyChanging
					Me._A12 = value
					Me.SendPropertyChanged("A12")
					Me.OnA12Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A13", DbType:="Money")>  _
		Public Property A13() As System.Nullable(Of Decimal)
			Get
				Return Me._A13
			End Get
			Set
				If (Me._A13.Equals(value) = false) Then
					Me.OnA13Changing(value)
					Me.SendPropertyChanging
					Me._A13 = value
					Me.SendPropertyChanged("A13")
					Me.OnA13Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A14", DbType:="Money")>  _
		Public Property A14() As System.Nullable(Of Decimal)
			Get
				Return Me._A14
			End Get
			Set
				If (Me._A14.Equals(value) = false) Then
					Me.OnA14Changing(value)
					Me.SendPropertyChanging
					Me._A14 = value
					Me.SendPropertyChanged("A14")
					Me.OnA14Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A15", DbType:="Money")>  _
		Public Property A15() As System.Nullable(Of Decimal)
			Get
				Return Me._A15
			End Get
			Set
				If (Me._A15.Equals(value) = false) Then
					Me.OnA15Changing(value)
					Me.SendPropertyChanging
					Me._A15 = value
					Me.SendPropertyChanged("A15")
					Me.OnA15Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A16", DbType:="Money")>  _
		Public Property A16() As System.Nullable(Of Decimal)
			Get
				Return Me._A16
			End Get
			Set
				If (Me._A16.Equals(value) = false) Then
					Me.OnA16Changing(value)
					Me.SendPropertyChanging
					Me._A16 = value
					Me.SendPropertyChanged("A16")
					Me.OnA16Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A17", DbType:="Money")>  _
		Public Property A17() As System.Nullable(Of Decimal)
			Get
				Return Me._A17
			End Get
			Set
				If (Me._A17.Equals(value) = false) Then
					Me.OnA17Changing(value)
					Me.SendPropertyChanging
					Me._A17 = value
					Me.SendPropertyChanged("A17")
					Me.OnA17Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A18", DbType:="Money")>  _
		Public Property A18() As System.Nullable(Of Decimal)
			Get
				Return Me._A18
			End Get
			Set
				If (Me._A18.Equals(value) = false) Then
					Me.OnA18Changing(value)
					Me.SendPropertyChanging
					Me._A18 = value
					Me.SendPropertyChanged("A18")
					Me.OnA18Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A19", DbType:="Money")>  _
		Public Property A19() As System.Nullable(Of Decimal)
			Get
				Return Me._A19
			End Get
			Set
				If (Me._A19.Equals(value) = false) Then
					Me.OnA19Changing(value)
					Me.SendPropertyChanging
					Me._A19 = value
					Me.SendPropertyChanged("A19")
					Me.OnA19Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A20", DbType:="Money")>  _
		Public Property A20() As System.Nullable(Of Decimal)
			Get
				Return Me._A20
			End Get
			Set
				If (Me._A20.Equals(value) = false) Then
					Me.OnA20Changing(value)
					Me.SendPropertyChanging
					Me._A20 = value
					Me.SendPropertyChanged("A20")
					Me.OnA20Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A21", DbType:="Money")>  _
		Public Property A21() As System.Nullable(Of Decimal)
			Get
				Return Me._A21
			End Get
			Set
				If (Me._A21.Equals(value) = false) Then
					Me.OnA21Changing(value)
					Me.SendPropertyChanging
					Me._A21 = value
					Me.SendPropertyChanged("A21")
					Me.OnA21Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A22", DbType:="Money")>  _
		Public Property A22() As System.Nullable(Of Decimal)
			Get
				Return Me._A22
			End Get
			Set
				If (Me._A22.Equals(value) = false) Then
					Me.OnA22Changing(value)
					Me.SendPropertyChanging
					Me._A22 = value
					Me.SendPropertyChanged("A22")
					Me.OnA22Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A23", DbType:="Money")>  _
		Public Property A23() As System.Nullable(Of Decimal)
			Get
				Return Me._A23
			End Get
			Set
				If (Me._A23.Equals(value) = false) Then
					Me.OnA23Changing(value)
					Me.SendPropertyChanging
					Me._A23 = value
					Me.SendPropertyChanged("A23")
					Me.OnA23Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A24", DbType:="Money")>  _
		Public Property A24() As System.Nullable(Of Decimal)
			Get
				Return Me._A24
			End Get
			Set
				If (Me._A24.Equals(value) = false) Then
					Me.OnA24Changing(value)
					Me.SendPropertyChanging
					Me._A24 = value
					Me.SendPropertyChanged("A24")
					Me.OnA24Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A25", DbType:="Money")>  _
		Public Property A25() As System.Nullable(Of Decimal)
			Get
				Return Me._A25
			End Get
			Set
				If (Me._A25.Equals(value) = false) Then
					Me.OnA25Changing(value)
					Me.SendPropertyChanging
					Me._A25 = value
					Me.SendPropertyChanged("A25")
					Me.OnA25Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A26", DbType:="Money")>  _
		Public Property A26() As System.Nullable(Of Decimal)
			Get
				Return Me._A26
			End Get
			Set
				If (Me._A26.Equals(value) = false) Then
					Me.OnA26Changing(value)
					Me.SendPropertyChanging
					Me._A26 = value
					Me.SendPropertyChanged("A26")
					Me.OnA26Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A27", DbType:="Money")>  _
		Public Property A27() As System.Nullable(Of Decimal)
			Get
				Return Me._A27
			End Get
			Set
				If (Me._A27.Equals(value) = false) Then
					Me.OnA27Changing(value)
					Me.SendPropertyChanging
					Me._A27 = value
					Me.SendPropertyChanged("A27")
					Me.OnA27Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A28", DbType:="Money")>  _
		Public Property A28() As System.Nullable(Of Decimal)
			Get
				Return Me._A28
			End Get
			Set
				If (Me._A28.Equals(value) = false) Then
					Me.OnA28Changing(value)
					Me.SendPropertyChanging
					Me._A28 = value
					Me.SendPropertyChanged("A28")
					Me.OnA28Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A29", DbType:="Money")>  _
		Public Property A29() As System.Nullable(Of Decimal)
			Get
				Return Me._A29
			End Get
			Set
				If (Me._A29.Equals(value) = false) Then
					Me.OnA29Changing(value)
					Me.SendPropertyChanging
					Me._A29 = value
					Me.SendPropertyChanged("A29")
					Me.OnA29Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A30", DbType:="Money")>  _
		Public Property A30() As System.Nullable(Of Decimal)
			Get
				Return Me._A30
			End Get
			Set
				If (Me._A30.Equals(value) = false) Then
					Me.OnA30Changing(value)
					Me.SendPropertyChanging
					Me._A30 = value
					Me.SendPropertyChanged("A30")
					Me.OnA30Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ATotal", DbType:="Money")>  _
		Public Property ATotal() As System.Nullable(Of Decimal)
			Get
				Return Me._ATotal
			End Get
			Set
				If (Me._ATotal.Equals(value) = false) Then
					Me.OnATotalChanging(value)
					Me.SendPropertyChanging
					Me._ATotal = value
					Me.SendPropertyChanged("ATotal")
					Me.OnATotalChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GrossPay", DbType:="Money")>  _
		Public Property GrossPay() As System.Nullable(Of Decimal)
			Get
				Return Me._GrossPay
			End Get
			Set
				If (Me._GrossPay.Equals(value) = false) Then
					Me.OnGrossPayChanging(value)
					Me.SendPropertyChanging
					Me._GrossPay = value
					Me.SendPropertyChanged("GrossPay")
					Me.OnGrossPayChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_D1", DbType:="Money")>  _
		Public Property D1() As System.Nullable(Of Decimal)
			Get
				Return Me._D1
			End Get
			Set
				If (Me._D1.Equals(value) = false) Then
					Me.OnD1Changing(value)
					Me.SendPropertyChanging
					Me._D1 = value
					Me.SendPropertyChanged("D1")
					Me.OnD1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_D2", DbType:="Money")>  _
		Public Property D2() As System.Nullable(Of Decimal)
			Get
				Return Me._D2
			End Get
			Set
				If (Me._D2.Equals(value) = false) Then
					Me.OnD2Changing(value)
					Me.SendPropertyChanging
					Me._D2 = value
					Me.SendPropertyChanged("D2")
					Me.OnD2Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_D3", DbType:="Money")>  _
		Public Property D3() As System.Nullable(Of Decimal)
			Get
				Return Me._D3
			End Get
			Set
				If (Me._D3.Equals(value) = false) Then
					Me.OnD3Changing(value)
					Me.SendPropertyChanging
					Me._D3 = value
					Me.SendPropertyChanged("D3")
					Me.OnD3Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_D4", DbType:="Money")>  _
		Public Property D4() As System.Nullable(Of Decimal)
			Get
				Return Me._D4
			End Get
			Set
				If (Me._D4.Equals(value) = false) Then
					Me.OnD4Changing(value)
					Me.SendPropertyChanging
					Me._D4 = value
					Me.SendPropertyChanged("D4")
					Me.OnD4Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_D5", DbType:="Money")>  _
		Public Property D5() As System.Nullable(Of Decimal)
			Get
				Return Me._D5
			End Get
			Set
				If (Me._D5.Equals(value) = false) Then
					Me.OnD5Changing(value)
					Me.SendPropertyChanging
					Me._D5 = value
					Me.SendPropertyChanged("D5")
					Me.OnD5Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_D6", DbType:="Money")>  _
		Public Property D6() As System.Nullable(Of Decimal)
			Get
				Return Me._D6
			End Get
			Set
				If (Me._D6.Equals(value) = false) Then
					Me.OnD6Changing(value)
					Me.SendPropertyChanging
					Me._D6 = value
					Me.SendPropertyChanged("D6")
					Me.OnD6Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_D7", DbType:="Money")>  _
		Public Property D7() As System.Nullable(Of Decimal)
			Get
				Return Me._D7
			End Get
			Set
				If (Me._D7.Equals(value) = false) Then
					Me.OnD7Changing(value)
					Me.SendPropertyChanging
					Me._D7 = value
					Me.SendPropertyChanged("D7")
					Me.OnD7Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_D8", DbType:="Money")>  _
		Public Property D8() As System.Nullable(Of Decimal)
			Get
				Return Me._D8
			End Get
			Set
				If (Me._D8.Equals(value) = false) Then
					Me.OnD8Changing(value)
					Me.SendPropertyChanging
					Me._D8 = value
					Me.SendPropertyChanged("D8")
					Me.OnD8Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_D9", DbType:="Money")>  _
		Public Property D9() As System.Nullable(Of Decimal)
			Get
				Return Me._D9
			End Get
			Set
				If (Me._D9.Equals(value) = false) Then
					Me.OnD9Changing(value)
					Me.SendPropertyChanging
					Me._D9 = value
					Me.SendPropertyChanged("D9")
					Me.OnD9Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_D10", DbType:="Money")>  _
		Public Property D10() As System.Nullable(Of Decimal)
			Get
				Return Me._D10
			End Get
			Set
				If (Me._D10.Equals(value) = false) Then
					Me.OnD10Changing(value)
					Me.SendPropertyChanging
					Me._D10 = value
					Me.SendPropertyChanged("D10")
					Me.OnD10Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_D11", DbType:="Money")>  _
		Public Property D11() As System.Nullable(Of Decimal)
			Get
				Return Me._D11
			End Get
			Set
				If (Me._D11.Equals(value) = false) Then
					Me.OnD11Changing(value)
					Me.SendPropertyChanging
					Me._D11 = value
					Me.SendPropertyChanged("D11")
					Me.OnD11Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_D12", DbType:="Money")>  _
		Public Property D12() As System.Nullable(Of Decimal)
			Get
				Return Me._D12
			End Get
			Set
				If (Me._D12.Equals(value) = false) Then
					Me.OnD12Changing(value)
					Me.SendPropertyChanging
					Me._D12 = value
					Me.SendPropertyChanged("D12")
					Me.OnD12Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_D13", DbType:="Money")>  _
		Public Property D13() As System.Nullable(Of Decimal)
			Get
				Return Me._D13
			End Get
			Set
				If (Me._D13.Equals(value) = false) Then
					Me.OnD13Changing(value)
					Me.SendPropertyChanging
					Me._D13 = value
					Me.SendPropertyChanged("D13")
					Me.OnD13Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_D14", DbType:="Money")>  _
		Public Property D14() As System.Nullable(Of Decimal)
			Get
				Return Me._D14
			End Get
			Set
				If (Me._D14.Equals(value) = false) Then
					Me.OnD14Changing(value)
					Me.SendPropertyChanging
					Me._D14 = value
					Me.SendPropertyChanged("D14")
					Me.OnD14Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_D15", DbType:="Money")>  _
		Public Property D15() As System.Nullable(Of Decimal)
			Get
				Return Me._D15
			End Get
			Set
				If (Me._D15.Equals(value) = false) Then
					Me.OnD15Changing(value)
					Me.SendPropertyChanging
					Me._D15 = value
					Me.SendPropertyChanged("D15")
					Me.OnD15Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_D16", DbType:="Money")>  _
		Public Property D16() As System.Nullable(Of Decimal)
			Get
				Return Me._D16
			End Get
			Set
				If (Me._D16.Equals(value) = false) Then
					Me.OnD16Changing(value)
					Me.SendPropertyChanging
					Me._D16 = value
					Me.SendPropertyChanged("D16")
					Me.OnD16Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_D17", DbType:="Money")>  _
		Public Property D17() As System.Nullable(Of Decimal)
			Get
				Return Me._D17
			End Get
			Set
				If (Me._D17.Equals(value) = false) Then
					Me.OnD17Changing(value)
					Me.SendPropertyChanging
					Me._D17 = value
					Me.SendPropertyChanged("D17")
					Me.OnD17Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_D18", DbType:="Money")>  _
		Public Property D18() As System.Nullable(Of Decimal)
			Get
				Return Me._D18
			End Get
			Set
				If (Me._D18.Equals(value) = false) Then
					Me.OnD18Changing(value)
					Me.SendPropertyChanging
					Me._D18 = value
					Me.SendPropertyChanged("D18")
					Me.OnD18Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_D19", DbType:="Money")>  _
		Public Property D19() As System.Nullable(Of Decimal)
			Get
				Return Me._D19
			End Get
			Set
				If (Me._D19.Equals(value) = false) Then
					Me.OnD19Changing(value)
					Me.SendPropertyChanging
					Me._D19 = value
					Me.SendPropertyChanged("D19")
					Me.OnD19Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_D20", DbType:="Money")>  _
		Public Property D20() As System.Nullable(Of Decimal)
			Get
				Return Me._D20
			End Get
			Set
				If (Me._D20.Equals(value) = false) Then
					Me.OnD20Changing(value)
					Me.SendPropertyChanging
					Me._D20 = value
					Me.SendPropertyChanged("D20")
					Me.OnD20Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_D21", DbType:="Money")>  _
		Public Property D21() As System.Nullable(Of Decimal)
			Get
				Return Me._D21
			End Get
			Set
				If (Me._D21.Equals(value) = false) Then
					Me.OnD21Changing(value)
					Me.SendPropertyChanging
					Me._D21 = value
					Me.SendPropertyChanged("D21")
					Me.OnD21Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_D22", DbType:="Money")>  _
		Public Property D22() As System.Nullable(Of Decimal)
			Get
				Return Me._D22
			End Get
			Set
				If (Me._D22.Equals(value) = false) Then
					Me.OnD22Changing(value)
					Me.SendPropertyChanging
					Me._D22 = value
					Me.SendPropertyChanged("D22")
					Me.OnD22Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_D23", DbType:="Money")>  _
		Public Property D23() As System.Nullable(Of Decimal)
			Get
				Return Me._D23
			End Get
			Set
				If (Me._D23.Equals(value) = false) Then
					Me.OnD23Changing(value)
					Me.SendPropertyChanging
					Me._D23 = value
					Me.SendPropertyChanged("D23")
					Me.OnD23Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_D24", DbType:="Money")>  _
		Public Property D24() As System.Nullable(Of Decimal)
			Get
				Return Me._D24
			End Get
			Set
				If (Me._D24.Equals(value) = false) Then
					Me.OnD24Changing(value)
					Me.SendPropertyChanging
					Me._D24 = value
					Me.SendPropertyChanged("D24")
					Me.OnD24Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_D25", DbType:="Money")>  _
		Public Property D25() As System.Nullable(Of Decimal)
			Get
				Return Me._D25
			End Get
			Set
				If (Me._D25.Equals(value) = false) Then
					Me.OnD25Changing(value)
					Me.SendPropertyChanging
					Me._D25 = value
					Me.SendPropertyChanged("D25")
					Me.OnD25Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_D26", DbType:="Money")>  _
		Public Property D26() As System.Nullable(Of Decimal)
			Get
				Return Me._D26
			End Get
			Set
				If (Me._D26.Equals(value) = false) Then
					Me.OnD26Changing(value)
					Me.SendPropertyChanging
					Me._D26 = value
					Me.SendPropertyChanged("D26")
					Me.OnD26Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_D27", DbType:="Money")>  _
		Public Property D27() As System.Nullable(Of Decimal)
			Get
				Return Me._D27
			End Get
			Set
				If (Me._D27.Equals(value) = false) Then
					Me.OnD27Changing(value)
					Me.SendPropertyChanging
					Me._D27 = value
					Me.SendPropertyChanged("D27")
					Me.OnD27Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_D28", DbType:="Money")>  _
		Public Property D28() As System.Nullable(Of Decimal)
			Get
				Return Me._D28
			End Get
			Set
				If (Me._D28.Equals(value) = false) Then
					Me.OnD28Changing(value)
					Me.SendPropertyChanging
					Me._D28 = value
					Me.SendPropertyChanged("D28")
					Me.OnD28Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_D29", DbType:="Money")>  _
		Public Property D29() As System.Nullable(Of Decimal)
			Get
				Return Me._D29
			End Get
			Set
				If (Me._D29.Equals(value) = false) Then
					Me.OnD29Changing(value)
					Me.SendPropertyChanging
					Me._D29 = value
					Me.SendPropertyChanged("D29")
					Me.OnD29Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_D30", DbType:="Money")>  _
		Public Property D30() As System.Nullable(Of Decimal)
			Get
				Return Me._D30
			End Get
			Set
				If (Me._D30.Equals(value) = false) Then
					Me.OnD30Changing(value)
					Me.SendPropertyChanging
					Me._D30 = value
					Me.SendPropertyChanged("D30")
					Me.OnD30Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_D31", DbType:="Money")>  _
		Public Property D31() As System.Nullable(Of Decimal)
			Get
				Return Me._D31
			End Get
			Set
				If (Me._D31.Equals(value) = false) Then
					Me.OnD31Changing(value)
					Me.SendPropertyChanging
					Me._D31 = value
					Me.SendPropertyChanged("D31")
					Me.OnD31Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_D32", DbType:="Money")>  _
		Public Property D32() As System.Nullable(Of Decimal)
			Get
				Return Me._D32
			End Get
			Set
				If (Me._D32.Equals(value) = false) Then
					Me.OnD32Changing(value)
					Me.SendPropertyChanging
					Me._D32 = value
					Me.SendPropertyChanged("D32")
					Me.OnD32Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_D33", DbType:="Money")>  _
		Public Property D33() As System.Nullable(Of Decimal)
			Get
				Return Me._D33
			End Get
			Set
				If (Me._D33.Equals(value) = false) Then
					Me.OnD33Changing(value)
					Me.SendPropertyChanging
					Me._D33 = value
					Me.SendPropertyChanged("D33")
					Me.OnD33Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_D34", DbType:="Money")>  _
		Public Property D34() As System.Nullable(Of Decimal)
			Get
				Return Me._D34
			End Get
			Set
				If (Me._D34.Equals(value) = false) Then
					Me.OnD34Changing(value)
					Me.SendPropertyChanging
					Me._D34 = value
					Me.SendPropertyChanged("D34")
					Me.OnD34Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_D35", DbType:="Money")>  _
		Public Property D35() As System.Nullable(Of Decimal)
			Get
				Return Me._D35
			End Get
			Set
				If (Me._D35.Equals(value) = false) Then
					Me.OnD35Changing(value)
					Me.SendPropertyChanging
					Me._D35 = value
					Me.SendPropertyChanged("D35")
					Me.OnD35Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_D36", DbType:="Money")>  _
		Public Property D36() As System.Nullable(Of Decimal)
			Get
				Return Me._D36
			End Get
			Set
				If (Me._D36.Equals(value) = false) Then
					Me.OnD36Changing(value)
					Me.SendPropertyChanging
					Me._D36 = value
					Me.SendPropertyChanged("D36")
					Me.OnD36Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_D37", DbType:="Money")>  _
		Public Property D37() As System.Nullable(Of Decimal)
			Get
				Return Me._D37
			End Get
			Set
				If (Me._D37.Equals(value) = false) Then
					Me.OnD37Changing(value)
					Me.SendPropertyChanging
					Me._D37 = value
					Me.SendPropertyChanged("D37")
					Me.OnD37Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_D38", DbType:="Money")>  _
		Public Property D38() As System.Nullable(Of Decimal)
			Get
				Return Me._D38
			End Get
			Set
				If (Me._D38.Equals(value) = false) Then
					Me.OnD38Changing(value)
					Me.SendPropertyChanging
					Me._D38 = value
					Me.SendPropertyChanged("D38")
					Me.OnD38Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_D39", DbType:="Money")>  _
		Public Property D39() As System.Nullable(Of Decimal)
			Get
				Return Me._D39
			End Get
			Set
				If (Me._D39.Equals(value) = false) Then
					Me.OnD39Changing(value)
					Me.SendPropertyChanging
					Me._D39 = value
					Me.SendPropertyChanged("D39")
					Me.OnD39Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_D40", DbType:="Money")>  _
		Public Property D40() As System.Nullable(Of Decimal)
			Get
				Return Me._D40
			End Get
			Set
				If (Me._D40.Equals(value) = false) Then
					Me.OnD40Changing(value)
					Me.SendPropertyChanging
					Me._D40 = value
					Me.SendPropertyChanged("D40")
					Me.OnD40Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_D41", DbType:="Money")>  _
		Public Property D41() As System.Nullable(Of Decimal)
			Get
				Return Me._D41
			End Get
			Set
				If (Me._D41.Equals(value) = false) Then
					Me.OnD41Changing(value)
					Me.SendPropertyChanging
					Me._D41 = value
					Me.SendPropertyChanged("D41")
					Me.OnD41Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_D42", DbType:="Money")>  _
		Public Property D42() As System.Nullable(Of Decimal)
			Get
				Return Me._D42
			End Get
			Set
				If (Me._D42.Equals(value) = false) Then
					Me.OnD42Changing(value)
					Me.SendPropertyChanging
					Me._D42 = value
					Me.SendPropertyChanged("D42")
					Me.OnD42Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_D43", DbType:="Money")>  _
		Public Property D43() As System.Nullable(Of Decimal)
			Get
				Return Me._D43
			End Get
			Set
				If (Me._D43.Equals(value) = false) Then
					Me.OnD43Changing(value)
					Me.SendPropertyChanging
					Me._D43 = value
					Me.SendPropertyChanged("D43")
					Me.OnD43Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_D44", DbType:="Money")>  _
		Public Property D44() As System.Nullable(Of Decimal)
			Get
				Return Me._D44
			End Get
			Set
				If (Me._D44.Equals(value) = false) Then
					Me.OnD44Changing(value)
					Me.SendPropertyChanging
					Me._D44 = value
					Me.SendPropertyChanged("D44")
					Me.OnD44Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_D45", DbType:="Money")>  _
		Public Property D45() As System.Nullable(Of Decimal)
			Get
				Return Me._D45
			End Get
			Set
				If (Me._D45.Equals(value) = false) Then
					Me.OnD45Changing(value)
					Me.SendPropertyChanging
					Me._D45 = value
					Me.SendPropertyChanged("D45")
					Me.OnD45Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_D46", DbType:="Money")>  _
		Public Property D46() As System.Nullable(Of Decimal)
			Get
				Return Me._D46
			End Get
			Set
				If (Me._D46.Equals(value) = false) Then
					Me.OnD46Changing(value)
					Me.SendPropertyChanging
					Me._D46 = value
					Me.SendPropertyChanged("D46")
					Me.OnD46Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_D47", DbType:="Money")>  _
		Public Property D47() As System.Nullable(Of Decimal)
			Get
				Return Me._D47
			End Get
			Set
				If (Me._D47.Equals(value) = false) Then
					Me.OnD47Changing(value)
					Me.SendPropertyChanging
					Me._D47 = value
					Me.SendPropertyChanged("D47")
					Me.OnD47Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_D48", DbType:="Money")>  _
		Public Property D48() As System.Nullable(Of Decimal)
			Get
				Return Me._D48
			End Get
			Set
				If (Me._D48.Equals(value) = false) Then
					Me.OnD48Changing(value)
					Me.SendPropertyChanging
					Me._D48 = value
					Me.SendPropertyChanged("D48")
					Me.OnD48Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_D49", DbType:="Money")>  _
		Public Property D49() As System.Nullable(Of Decimal)
			Get
				Return Me._D49
			End Get
			Set
				If (Me._D49.Equals(value) = false) Then
					Me.OnD49Changing(value)
					Me.SendPropertyChanging
					Me._D49 = value
					Me.SendPropertyChanged("D49")
					Me.OnD49Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_D50", DbType:="Money")>  _
		Public Property D50() As System.Nullable(Of Decimal)
			Get
				Return Me._D50
			End Get
			Set
				If (Me._D50.Equals(value) = false) Then
					Me.OnD50Changing(value)
					Me.SendPropertyChanging
					Me._D50 = value
					Me.SendPropertyChanged("D50")
					Me.OnD50Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DTotal", DbType:="Money")>  _
		Public Property DTotal() As System.Nullable(Of Decimal)
			Get
				Return Me._DTotal
			End Get
			Set
				If (Me._DTotal.Equals(value) = false) Then
					Me.OnDTotalChanging(value)
					Me.SendPropertyChanging
					Me._DTotal = value
					Me.SendPropertyChanged("DTotal")
					Me.OnDTotalChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NetPay", DbType:="Money")>  _
		Public Property NetPay() As System.Nullable(Of Decimal)
			Get
				Return Me._NetPay
			End Get
			Set
				If (Me._NetPay.Equals(value) = false) Then
					Me.OnNetPayChanging(value)
					Me.SendPropertyChanging
					Me._NetPay = value
					Me.SendPropertyChanged("NetPay")
					Me.OnNetPayChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Confirmation", DbType:="VarChar(32)")>  _
		Public Property Confirmation() As String
			Get
				Return Me._Confirmation
			End Get
			Set
				If (String.Equals(Me._Confirmation, value) = false) Then
					Me.OnConfirmationChanging(value)
					Me.SendPropertyChanging
					Me._Confirmation = value
					Me.SendPropertyChanged("Confirmation")
					Me.OnConfirmationChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BranchID", DbType:="VarChar(32)")>  _
		Public Property BranchID() As String
			Get
				Return Me._BranchID
			End Get
			Set
				If (String.Equals(Me._BranchID, value) = false) Then
					Me.OnBranchIDChanging(value)
					Me.SendPropertyChanging
					Me._BranchID = value
					Me.SendPropertyChanged("BranchID")
					Me.OnBranchIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DeptID", DbType:="VarChar(32)")>  _
		Public Property DeptID() As String
			Get
				Return Me._DeptID
			End Get
			Set
				If (String.Equals(Me._DeptID, value) = false) Then
					Me.OnDeptIDChanging(value)
					Me.SendPropertyChanging
					Me._DeptID = value
					Me.SendPropertyChanged("DeptID")
					Me.OnDeptIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UnitID", DbType:="VarChar(32)")>  _
		Public Property UnitID() As String
			Get
				Return Me._UnitID
			End Get
			Set
				If (String.Equals(Me._UnitID, value) = false) Then
					Me.OnUnitIDChanging(value)
					Me.SendPropertyChanging
					Me._UnitID = value
					Me.SendPropertyChanged("UnitID")
					Me.OnUnitIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="Step", Storage:="_Step", DbType:="VarChar(50)")>  _
		Public Property [Step]() As String
			Get
				Return Me._Step
			End Get
			Set
				If (String.Equals(Me._Step, value) = false) Then
					Me.OnStepChanging(value)
					Me.SendPropertyChanging
					Me._Step = value
					Me.SendPropertyChanged("[Step]")
					Me.OnStepChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GradeID", DbType:="BigInt")>  _
		Public Property GradeID() As System.Nullable(Of Long)
			Get
				Return Me._GradeID
			End Get
			Set
				If (Me._GradeID.Equals(value) = false) Then
					Me.OnGradeIDChanging(value)
					Me.SendPropertyChanging
					Me._GradeID = value
					Me.SendPropertyChanged("GradeID")
					Me.OnGradeIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Grade", DbType:="VarChar(64)")>  _
		Public Property Grade() As String
			Get
				Return Me._Grade
			End Get
			Set
				If (String.Equals(Me._Grade, value) = false) Then
					Me.OnGradeChanging(value)
					Me.SendPropertyChanging
					Me._Grade = value
					Me.SendPropertyChanged("Grade")
					Me.OnGradeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EmployeeStatus", DbType:="VarChar(32)")>  _
		Public Property EmployeeStatus() As String
			Get
				Return Me._EmployeeStatus
			End Get
			Set
				If (String.Equals(Me._EmployeeStatus, value) = false) Then
					Me.OnEmployeeStatusChanging(value)
					Me.SendPropertyChanging
					Me._EmployeeStatus = value
					Me.SendPropertyChanged("EmployeeStatus")
					Me.OnEmployeeStatusChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Detail", DbType:="VarChar(255)")>  _
		Public Property Detail() As String
			Get
				Return Me._Detail
			End Get
			Set
				If (String.Equals(Me._Detail, value) = false) Then
					Me.OnDetailChanging(value)
					Me.SendPropertyChanging
					Me._Detail = value
					Me.SendPropertyChanged("Detail")
					Me.OnDetailChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TransGUID", DbType:="VarChar(255)")>  _
		Public Property TransGUID() As String
			Get
				Return Me._TransGUID
			End Get
			Set
				If (String.Equals(Me._TransGUID, value) = false) Then
					Me.OnTransGUIDChanging(value)
					Me.SendPropertyChanging
					Me._TransGUID = value
					Me.SendPropertyChanged("TransGUID")
					Me.OnTransGUIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TransSTATUS", DbType:="VarChar(255)")>  _
		Public Property TransSTATUS() As String
			Get
				Return Me._TransSTATUS
			End Get
			Set
				If (String.Equals(Me._TransSTATUS, value) = false) Then
					Me.OnTransSTATUSChanging(value)
					Me.SendPropertyChanging
					Me._TransSTATUS = value
					Me.SendPropertyChanged("TransSTATUS")
					Me.OnTransSTATUSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubmittedBy", DbType:="VarChar(255)")>  _
		Public Property SubmittedBy() As String
			Get
				Return Me._SubmittedBy
			End Get
			Set
				If (String.Equals(Me._SubmittedBy, value) = false) Then
					Me.OnSubmittedByChanging(value)
					Me.SendPropertyChanging
					Me._SubmittedBy = value
					Me.SendPropertyChanged("SubmittedBy")
					Me.OnSubmittedByChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubmittedOn", DbType:="DateTime")>  _
		Public Property SubmittedOn() As System.Nullable(Of Date)
			Get
				Return Me._SubmittedOn
			End Get
			Set
				If (Me._SubmittedOn.Equals(value) = false) Then
					Me.OnSubmittedOnChanging(value)
					Me.SendPropertyChanging
					Me._SubmittedOn = value
					Me.SendPropertyChanged("SubmittedOn")
					Me.OnSubmittedOnChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedBy", DbType:="VarChar(32)")>  _
		Public Property ModifiedBy() As String
			Get
				Return Me._ModifiedBy
			End Get
			Set
				If (String.Equals(Me._ModifiedBy, value) = false) Then
					Me.OnModifiedByChanging(value)
					Me.SendPropertyChanging
					Me._ModifiedBy = value
					Me.SendPropertyChanged("ModifiedBy")
					Me.OnModifiedByChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedOn", DbType:="DateTime")>  _
		Public Property ModifiedOn() As System.Nullable(Of Date)
			Get
				Return Me._ModifiedOn
			End Get
			Set
				If (Me._ModifiedOn.Equals(value) = false) Then
					Me.OnModifiedOnChanging(value)
					Me.SendPropertyChanging
					Me._ModifiedOn = value
					Me.SendPropertyChanged("ModifiedOn")
					Me.OnModifiedOnChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BatchGUID", DbType:="VarChar(255)")>  _
		Public Property BatchGUID() As String
			Get
				Return Me._BatchGUID
			End Get
			Set
				If (String.Equals(Me._BatchGUID, value) = false) Then
					Me.OnBatchGUIDChanging(value)
					Me.SendPropertyChanging
					Me._BatchGUID = value
					Me.SendPropertyChanged("BatchGUID")
					Me.OnBatchGUIDChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Loans")>  _
	Partial Public Class Loan
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _LoanID As Long
		
		Private _EmployeeID As String
		
		Private _Surname As String
		
		Private _Othernames As String
		
		Private _TransactionType As String
		
		Private _DedID As System.Nullable(Of Long)
		
		Private _LoanName As String
		
		Private _Amount As System.Nullable(Of Decimal)
		
		Private _AmtPaid As System.Nullable(Of Decimal)
		
		Private _TotalAmtDue As System.Nullable(Of Decimal)
		
		Private _StartDate As System.Nullable(Of Date)
		
		Private _DueDate As System.Nullable(Of Date)
		
		Private _InterestRate As System.Nullable(Of Decimal)
		
		Private _IntAmt As System.Nullable(Of Decimal)
		
		Private _MonthlyDed As System.Nullable(Of Decimal)
		
		Private _Duration As String
		
		Private _Tdate As System.Nullable(Of Date)
		
		Private _Deleted As System.Nullable(Of Byte)
		
		Private _Active As System.Nullable(Of Byte)
		
		Private _TransSTATUS As String
		
		Private _Submittedby As String
		
		Private _SubmittedOn As System.Nullable(Of Date)
		
		Private _ModifiedBy As String
		
		Private _ModifiedOn As System.Nullable(Of Date)
		
		Private _Approvedby As String
		
		Private _ApprovedOn As System.Nullable(Of Date)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnLoanIDChanging(value As Long)
    End Sub
    Partial Private Sub OnLoanIDChanged()
    End Sub
    Partial Private Sub OnEmployeeIDChanging(value As String)
    End Sub
    Partial Private Sub OnEmployeeIDChanged()
    End Sub
    Partial Private Sub OnSurnameChanging(value As String)
    End Sub
    Partial Private Sub OnSurnameChanged()
    End Sub
    Partial Private Sub OnOthernamesChanging(value As String)
    End Sub
    Partial Private Sub OnOthernamesChanged()
    End Sub
    Partial Private Sub OnTransactionTypeChanging(value As String)
    End Sub
    Partial Private Sub OnTransactionTypeChanged()
    End Sub
    Partial Private Sub OnDedIDChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnDedIDChanged()
    End Sub
    Partial Private Sub OnLoanNameChanging(value As String)
    End Sub
    Partial Private Sub OnLoanNameChanged()
    End Sub
    Partial Private Sub OnAmountChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnAmountChanged()
    End Sub
    Partial Private Sub OnAmtPaidChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnAmtPaidChanged()
    End Sub
    Partial Private Sub OnTotalAmtDueChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnTotalAmtDueChanged()
    End Sub
    Partial Private Sub OnStartDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnStartDateChanged()
    End Sub
    Partial Private Sub OnDueDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDueDateChanged()
    End Sub
    Partial Private Sub OnInterestRateChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnInterestRateChanged()
    End Sub
    Partial Private Sub OnIntAmtChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnIntAmtChanged()
    End Sub
    Partial Private Sub OnMonthlyDedChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnMonthlyDedChanged()
    End Sub
    Partial Private Sub OnDurationChanging(value As String)
    End Sub
    Partial Private Sub OnDurationChanged()
    End Sub
    Partial Private Sub OnTdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnTdateChanged()
    End Sub
    Partial Private Sub OnDeletedChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnDeletedChanged()
    End Sub
    Partial Private Sub OnActiveChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnActiveChanged()
    End Sub
    Partial Private Sub OnTransSTATUSChanging(value As String)
    End Sub
    Partial Private Sub OnTransSTATUSChanged()
    End Sub
    Partial Private Sub OnSubmittedbyChanging(value As String)
    End Sub
    Partial Private Sub OnSubmittedbyChanged()
    End Sub
    Partial Private Sub OnSubmittedOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSubmittedOnChanged()
    End Sub
    Partial Private Sub OnModifiedByChanging(value As String)
    End Sub
    Partial Private Sub OnModifiedByChanged()
    End Sub
    Partial Private Sub OnModifiedOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnModifiedOnChanged()
    End Sub
    Partial Private Sub OnApprovedbyChanging(value As String)
    End Sub
    Partial Private Sub OnApprovedbyChanged()
    End Sub
    Partial Private Sub OnApprovedOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnApprovedOnChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LoanID", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property LoanID() As Long
			Get
				Return Me._LoanID
			End Get
			Set
				If ((Me._LoanID = value)  _
							= false) Then
					Me.OnLoanIDChanging(value)
					Me.SendPropertyChanging
					Me._LoanID = value
					Me.SendPropertyChanged("LoanID")
					Me.OnLoanIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EmployeeID", DbType:="VarChar(32) NOT NULL", CanBeNull:=false)>  _
		Public Property EmployeeID() As String
			Get
				Return Me._EmployeeID
			End Get
			Set
				If (String.Equals(Me._EmployeeID, value) = false) Then
					Me.OnEmployeeIDChanging(value)
					Me.SendPropertyChanging
					Me._EmployeeID = value
					Me.SendPropertyChanged("EmployeeID")
					Me.OnEmployeeIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Surname", DbType:="VarChar(128)")>  _
		Public Property Surname() As String
			Get
				Return Me._Surname
			End Get
			Set
				If (String.Equals(Me._Surname, value) = false) Then
					Me.OnSurnameChanging(value)
					Me.SendPropertyChanging
					Me._Surname = value
					Me.SendPropertyChanged("Surname")
					Me.OnSurnameChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Othernames", DbType:="VarChar(128)")>  _
		Public Property Othernames() As String
			Get
				Return Me._Othernames
			End Get
			Set
				If (String.Equals(Me._Othernames, value) = false) Then
					Me.OnOthernamesChanging(value)
					Me.SendPropertyChanging
					Me._Othernames = value
					Me.SendPropertyChanged("Othernames")
					Me.OnOthernamesChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TransactionType", DbType:="VarChar(32)")>  _
		Public Property TransactionType() As String
			Get
				Return Me._TransactionType
			End Get
			Set
				If (String.Equals(Me._TransactionType, value) = false) Then
					Me.OnTransactionTypeChanging(value)
					Me.SendPropertyChanging
					Me._TransactionType = value
					Me.SendPropertyChanged("TransactionType")
					Me.OnTransactionTypeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DedID", DbType:="BigInt")>  _
		Public Property DedID() As System.Nullable(Of Long)
			Get
				Return Me._DedID
			End Get
			Set
				If (Me._DedID.Equals(value) = false) Then
					Me.OnDedIDChanging(value)
					Me.SendPropertyChanging
					Me._DedID = value
					Me.SendPropertyChanged("DedID")
					Me.OnDedIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LoanName", DbType:="VarChar(32)")>  _
		Public Property LoanName() As String
			Get
				Return Me._LoanName
			End Get
			Set
				If (String.Equals(Me._LoanName, value) = false) Then
					Me.OnLoanNameChanging(value)
					Me.SendPropertyChanging
					Me._LoanName = value
					Me.SendPropertyChanged("LoanName")
					Me.OnLoanNameChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Amount", DbType:="Money")>  _
		Public Property Amount() As System.Nullable(Of Decimal)
			Get
				Return Me._Amount
			End Get
			Set
				If (Me._Amount.Equals(value) = false) Then
					Me.OnAmountChanging(value)
					Me.SendPropertyChanging
					Me._Amount = value
					Me.SendPropertyChanged("Amount")
					Me.OnAmountChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AmtPaid", DbType:="Money")>  _
		Public Property AmtPaid() As System.Nullable(Of Decimal)
			Get
				Return Me._AmtPaid
			End Get
			Set
				If (Me._AmtPaid.Equals(value) = false) Then
					Me.OnAmtPaidChanging(value)
					Me.SendPropertyChanging
					Me._AmtPaid = value
					Me.SendPropertyChanged("AmtPaid")
					Me.OnAmtPaidChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TotalAmtDue", DbType:="Money")>  _
		Public Property TotalAmtDue() As System.Nullable(Of Decimal)
			Get
				Return Me._TotalAmtDue
			End Get
			Set
				If (Me._TotalAmtDue.Equals(value) = false) Then
					Me.OnTotalAmtDueChanging(value)
					Me.SendPropertyChanging
					Me._TotalAmtDue = value
					Me.SendPropertyChanged("TotalAmtDue")
					Me.OnTotalAmtDueChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StartDate", DbType:="DateTime")>  _
		Public Property StartDate() As System.Nullable(Of Date)
			Get
				Return Me._StartDate
			End Get
			Set
				If (Me._StartDate.Equals(value) = false) Then
					Me.OnStartDateChanging(value)
					Me.SendPropertyChanging
					Me._StartDate = value
					Me.SendPropertyChanged("StartDate")
					Me.OnStartDateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DueDate", DbType:="DateTime")>  _
		Public Property DueDate() As System.Nullable(Of Date)
			Get
				Return Me._DueDate
			End Get
			Set
				If (Me._DueDate.Equals(value) = false) Then
					Me.OnDueDateChanging(value)
					Me.SendPropertyChanging
					Me._DueDate = value
					Me.SendPropertyChanged("DueDate")
					Me.OnDueDateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InterestRate", DbType:="Decimal(18,0)")>  _
		Public Property InterestRate() As System.Nullable(Of Decimal)
			Get
				Return Me._InterestRate
			End Get
			Set
				If (Me._InterestRate.Equals(value) = false) Then
					Me.OnInterestRateChanging(value)
					Me.SendPropertyChanging
					Me._InterestRate = value
					Me.SendPropertyChanged("InterestRate")
					Me.OnInterestRateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IntAmt", DbType:="Money")>  _
		Public Property IntAmt() As System.Nullable(Of Decimal)
			Get
				Return Me._IntAmt
			End Get
			Set
				If (Me._IntAmt.Equals(value) = false) Then
					Me.OnIntAmtChanging(value)
					Me.SendPropertyChanging
					Me._IntAmt = value
					Me.SendPropertyChanged("IntAmt")
					Me.OnIntAmtChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MonthlyDed", DbType:="Money")>  _
		Public Property MonthlyDed() As System.Nullable(Of Decimal)
			Get
				Return Me._MonthlyDed
			End Get
			Set
				If (Me._MonthlyDed.Equals(value) = false) Then
					Me.OnMonthlyDedChanging(value)
					Me.SendPropertyChanging
					Me._MonthlyDed = value
					Me.SendPropertyChanged("MonthlyDed")
					Me.OnMonthlyDedChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Duration", DbType:="VarChar(50)")>  _
		Public Property Duration() As String
			Get
				Return Me._Duration
			End Get
			Set
				If (String.Equals(Me._Duration, value) = false) Then
					Me.OnDurationChanging(value)
					Me.SendPropertyChanging
					Me._Duration = value
					Me.SendPropertyChanged("Duration")
					Me.OnDurationChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tdate", DbType:="DateTime")>  _
		Public Property Tdate() As System.Nullable(Of Date)
			Get
				Return Me._Tdate
			End Get
			Set
				If (Me._Tdate.Equals(value) = false) Then
					Me.OnTdateChanging(value)
					Me.SendPropertyChanging
					Me._Tdate = value
					Me.SendPropertyChanged("Tdate")
					Me.OnTdateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Deleted", DbType:="TinyInt")>  _
		Public Property Deleted() As System.Nullable(Of Byte)
			Get
				Return Me._Deleted
			End Get
			Set
				If (Me._Deleted.Equals(value) = false) Then
					Me.OnDeletedChanging(value)
					Me.SendPropertyChanging
					Me._Deleted = value
					Me.SendPropertyChanged("Deleted")
					Me.OnDeletedChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Active", DbType:="TinyInt")>  _
		Public Property Active() As System.Nullable(Of Byte)
			Get
				Return Me._Active
			End Get
			Set
				If (Me._Active.Equals(value) = false) Then
					Me.OnActiveChanging(value)
					Me.SendPropertyChanging
					Me._Active = value
					Me.SendPropertyChanged("Active")
					Me.OnActiveChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TransSTATUS", DbType:="VarChar(64)")>  _
		Public Property TransSTATUS() As String
			Get
				Return Me._TransSTATUS
			End Get
			Set
				If (String.Equals(Me._TransSTATUS, value) = false) Then
					Me.OnTransSTATUSChanging(value)
					Me.SendPropertyChanging
					Me._TransSTATUS = value
					Me.SendPropertyChanged("TransSTATUS")
					Me.OnTransSTATUSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Submittedby", DbType:="VarChar(64)")>  _
		Public Property Submittedby() As String
			Get
				Return Me._Submittedby
			End Get
			Set
				If (String.Equals(Me._Submittedby, value) = false) Then
					Me.OnSubmittedbyChanging(value)
					Me.SendPropertyChanging
					Me._Submittedby = value
					Me.SendPropertyChanged("Submittedby")
					Me.OnSubmittedbyChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubmittedOn", DbType:="DateTime")>  _
		Public Property SubmittedOn() As System.Nullable(Of Date)
			Get
				Return Me._SubmittedOn
			End Get
			Set
				If (Me._SubmittedOn.Equals(value) = false) Then
					Me.OnSubmittedOnChanging(value)
					Me.SendPropertyChanging
					Me._SubmittedOn = value
					Me.SendPropertyChanged("SubmittedOn")
					Me.OnSubmittedOnChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedBy", DbType:="VarChar(64)")>  _
		Public Property ModifiedBy() As String
			Get
				Return Me._ModifiedBy
			End Get
			Set
				If (String.Equals(Me._ModifiedBy, value) = false) Then
					Me.OnModifiedByChanging(value)
					Me.SendPropertyChanging
					Me._ModifiedBy = value
					Me.SendPropertyChanged("ModifiedBy")
					Me.OnModifiedByChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedOn", DbType:="DateTime")>  _
		Public Property ModifiedOn() As System.Nullable(Of Date)
			Get
				Return Me._ModifiedOn
			End Get
			Set
				If (Me._ModifiedOn.Equals(value) = false) Then
					Me.OnModifiedOnChanging(value)
					Me.SendPropertyChanging
					Me._ModifiedOn = value
					Me.SendPropertyChanged("ModifiedOn")
					Me.OnModifiedOnChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Approvedby", DbType:="VarChar(64)")>  _
		Public Property Approvedby() As String
			Get
				Return Me._Approvedby
			End Get
			Set
				If (String.Equals(Me._Approvedby, value) = false) Then
					Me.OnApprovedbyChanging(value)
					Me.SendPropertyChanging
					Me._Approvedby = value
					Me.SendPropertyChanged("Approvedby")
					Me.OnApprovedbyChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApprovedOn", DbType:="DateTime")>  _
		Public Property ApprovedOn() As System.Nullable(Of Date)
			Get
				Return Me._ApprovedOn
			End Get
			Set
				If (Me._ApprovedOn.Equals(value) = false) Then
					Me.OnApprovedOnChanging(value)
					Me.SendPropertyChanging
					Me._ApprovedOn = value
					Me.SendPropertyChanged("ApprovedOn")
					Me.OnApprovedOnChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.HREmployees")>  _
	Partial Public Class HREmployee
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _EmployeeID As String
		
		Private _StaffIDNo As String
		
		Private _Title As String
		
		Private _Surname As String
		
		Private _OtherNames As String
		
		Private _Address As String
		
		Private _State As String
		
		Private _Country As String
		
		Private _Sex As String
		
		Private _BirthDate As System.Nullable(Of Date)
		
		Private _MaritalStatus As String
		
		Private _StateOrigin As String
		
		Private _NationalIDNo As String
		
		Private _AcctNo1 As String
		
		Private _AcctName1 As String
		
		Private _AcctNo2 As String
		
		Private _AcctName2 As String
		
		Private _HMOName As String
		
		Private _HMOID As String
		
		Private _BranchID As String
		
		Private _Branch As String
		
		Private _DeptID As String
		
		Private _Dept As String
		
		Private _UnitID As String
		
		Private _Unit As String
		
		Private _GradeID As System.Nullable(Of Long)
		
		Private _Grade As String
		
		Private _HireDate As System.Nullable(Of Date)
		
		Private _Telephone As String
		
		Private _MobilePhone As String
		
		Private _Email2 As String
		
		Private _Email As String
		
		Private _NextKin As String
		
		Private _KinAddress As String
		
		Private _KinPhone As String
		
		Private _KinRelationship As String
		
		Private _Height As String
		
		Private _Weight As String
		
		Private _Smoker As System.Nullable(Of Long)
		
		Private _DisableType As String
		
		Private _Remarks As String
		
		Private _Tag As String
		
		Private _Photo As System.Data.Linq.Binary
		
		Private _PayFirstMonth As String
		
		Private _SheetID2 As System.Nullable(Of Long)
		
		Private _ConfirmStatus As String
		
		Private _ConfirmDuration As System.Nullable(Of Long)
		
		Private _ConfirmationDate As System.Nullable(Of Date)
		
		Private _RetiredDate As System.Nullable(Of Date)
		
		Private _Deleted As System.Nullable(Of Byte)
		
		Private _Active As System.Nullable(Of Byte)
		
		Private _Submitby As String
		
		Private _SubmitOn As System.Nullable(Of Date)
		
		Private _ModifiedBy As String
		
		Private _ModifiedOn As System.Nullable(Of Date)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnEmployeeIDChanging(value As String)
    End Sub
    Partial Private Sub OnEmployeeIDChanged()
    End Sub
    Partial Private Sub OnStaffIDNoChanging(value As String)
    End Sub
    Partial Private Sub OnStaffIDNoChanged()
    End Sub
    Partial Private Sub OnTitleChanging(value As String)
    End Sub
    Partial Private Sub OnTitleChanged()
    End Sub
    Partial Private Sub OnSurnameChanging(value As String)
    End Sub
    Partial Private Sub OnSurnameChanged()
    End Sub
    Partial Private Sub OnOtherNamesChanging(value As String)
    End Sub
    Partial Private Sub OnOtherNamesChanged()
    End Sub
    Partial Private Sub OnAddressChanging(value As String)
    End Sub
    Partial Private Sub OnAddressChanged()
    End Sub
    Partial Private Sub OnStateChanging(value As String)
    End Sub
    Partial Private Sub OnStateChanged()
    End Sub
    Partial Private Sub OnCountryChanging(value As String)
    End Sub
    Partial Private Sub OnCountryChanged()
    End Sub
    Partial Private Sub OnSexChanging(value As String)
    End Sub
    Partial Private Sub OnSexChanged()
    End Sub
    Partial Private Sub OnBirthDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnBirthDateChanged()
    End Sub
    Partial Private Sub OnMaritalStatusChanging(value As String)
    End Sub
    Partial Private Sub OnMaritalStatusChanged()
    End Sub
    Partial Private Sub OnStateOriginChanging(value As String)
    End Sub
    Partial Private Sub OnStateOriginChanged()
    End Sub
    Partial Private Sub OnNationalIDNoChanging(value As String)
    End Sub
    Partial Private Sub OnNationalIDNoChanged()
    End Sub
    Partial Private Sub OnAcctNo1Changing(value As String)
    End Sub
    Partial Private Sub OnAcctNo1Changed()
    End Sub
    Partial Private Sub OnAcctName1Changing(value As String)
    End Sub
    Partial Private Sub OnAcctName1Changed()
    End Sub
    Partial Private Sub OnAcctNo2Changing(value As String)
    End Sub
    Partial Private Sub OnAcctNo2Changed()
    End Sub
    Partial Private Sub OnAcctName2Changing(value As String)
    End Sub
    Partial Private Sub OnAcctName2Changed()
    End Sub
    Partial Private Sub OnHMONameChanging(value As String)
    End Sub
    Partial Private Sub OnHMONameChanged()
    End Sub
    Partial Private Sub OnHMOIDChanging(value As String)
    End Sub
    Partial Private Sub OnHMOIDChanged()
    End Sub
    Partial Private Sub OnBranchIDChanging(value As String)
    End Sub
    Partial Private Sub OnBranchIDChanged()
    End Sub
    Partial Private Sub OnBranchChanging(value As String)
    End Sub
    Partial Private Sub OnBranchChanged()
    End Sub
    Partial Private Sub OnDeptIDChanging(value As String)
    End Sub
    Partial Private Sub OnDeptIDChanged()
    End Sub
    Partial Private Sub OnDeptChanging(value As String)
    End Sub
    Partial Private Sub OnDeptChanged()
    End Sub
    Partial Private Sub OnUnitIDChanging(value As String)
    End Sub
    Partial Private Sub OnUnitIDChanged()
    End Sub
    Partial Private Sub OnUnitChanging(value As String)
    End Sub
    Partial Private Sub OnUnitChanged()
    End Sub
    Partial Private Sub OnGradeIDChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnGradeIDChanged()
    End Sub
    Partial Private Sub OnGradeChanging(value As String)
    End Sub
    Partial Private Sub OnGradeChanged()
    End Sub
    Partial Private Sub OnHireDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnHireDateChanged()
    End Sub
    Partial Private Sub OnTelephoneChanging(value As String)
    End Sub
    Partial Private Sub OnTelephoneChanged()
    End Sub
    Partial Private Sub OnMobilePhoneChanging(value As String)
    End Sub
    Partial Private Sub OnMobilePhoneChanged()
    End Sub
    Partial Private Sub OnEmail2Changing(value As String)
    End Sub
    Partial Private Sub OnEmail2Changed()
    End Sub
    Partial Private Sub OnEmailChanging(value As String)
    End Sub
    Partial Private Sub OnEmailChanged()
    End Sub
    Partial Private Sub OnNextKinChanging(value As String)
    End Sub
    Partial Private Sub OnNextKinChanged()
    End Sub
    Partial Private Sub OnKinAddressChanging(value As String)
    End Sub
    Partial Private Sub OnKinAddressChanged()
    End Sub
    Partial Private Sub OnKinPhoneChanging(value As String)
    End Sub
    Partial Private Sub OnKinPhoneChanged()
    End Sub
    Partial Private Sub OnKinRelationshipChanging(value As String)
    End Sub
    Partial Private Sub OnKinRelationshipChanged()
    End Sub
    Partial Private Sub OnHeightChanging(value As String)
    End Sub
    Partial Private Sub OnHeightChanged()
    End Sub
    Partial Private Sub OnWeightChanging(value As String)
    End Sub
    Partial Private Sub OnWeightChanged()
    End Sub
    Partial Private Sub OnSmokerChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnSmokerChanged()
    End Sub
    Partial Private Sub OnDisableTypeChanging(value As String)
    End Sub
    Partial Private Sub OnDisableTypeChanged()
    End Sub
    Partial Private Sub OnRemarksChanging(value As String)
    End Sub
    Partial Private Sub OnRemarksChanged()
    End Sub
    Partial Private Sub OnTagChanging(value As String)
    End Sub
    Partial Private Sub OnTagChanged()
    End Sub
    Partial Private Sub OnPhotoChanging(value As System.Data.Linq.Binary)
    End Sub
    Partial Private Sub OnPhotoChanged()
    End Sub
    Partial Private Sub OnPayFirstMonthChanging(value As String)
    End Sub
    Partial Private Sub OnPayFirstMonthChanged()
    End Sub
    Partial Private Sub OnSheetID2Changing(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnSheetID2Changed()
    End Sub
    Partial Private Sub OnConfirmStatusChanging(value As String)
    End Sub
    Partial Private Sub OnConfirmStatusChanged()
    End Sub
    Partial Private Sub OnConfirmDurationChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnConfirmDurationChanged()
    End Sub
    Partial Private Sub OnConfirmationDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnConfirmationDateChanged()
    End Sub
    Partial Private Sub OnRetiredDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnRetiredDateChanged()
    End Sub
    Partial Private Sub OnDeletedChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnDeletedChanged()
    End Sub
    Partial Private Sub OnActiveChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnActiveChanged()
    End Sub
    Partial Private Sub OnSubmitbyChanging(value As String)
    End Sub
    Partial Private Sub OnSubmitbyChanged()
    End Sub
    Partial Private Sub OnSubmitOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSubmitOnChanged()
    End Sub
    Partial Private Sub OnModifiedByChanging(value As String)
    End Sub
    Partial Private Sub OnModifiedByChanged()
    End Sub
    Partial Private Sub OnModifiedOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnModifiedOnChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EmployeeID", DbType:="VarChar(64) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property EmployeeID() As String
			Get
				Return Me._EmployeeID
			End Get
			Set
				If (String.Equals(Me._EmployeeID, value) = false) Then
					Me.OnEmployeeIDChanging(value)
					Me.SendPropertyChanging
					Me._EmployeeID = value
					Me.SendPropertyChanged("EmployeeID")
					Me.OnEmployeeIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StaffIDNo", DbType:="VarChar(64)")>  _
		Public Property StaffIDNo() As String
			Get
				Return Me._StaffIDNo
			End Get
			Set
				If (String.Equals(Me._StaffIDNo, value) = false) Then
					Me.OnStaffIDNoChanging(value)
					Me.SendPropertyChanging
					Me._StaffIDNo = value
					Me.SendPropertyChanged("StaffIDNo")
					Me.OnStaffIDNoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Title", DbType:="VarChar(64)")>  _
		Public Property Title() As String
			Get
				Return Me._Title
			End Get
			Set
				If (String.Equals(Me._Title, value) = false) Then
					Me.OnTitleChanging(value)
					Me.SendPropertyChanging
					Me._Title = value
					Me.SendPropertyChanged("Title")
					Me.OnTitleChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Surname", DbType:="VarChar(128)")>  _
		Public Property Surname() As String
			Get
				Return Me._Surname
			End Get
			Set
				If (String.Equals(Me._Surname, value) = false) Then
					Me.OnSurnameChanging(value)
					Me.SendPropertyChanging
					Me._Surname = value
					Me.SendPropertyChanged("Surname")
					Me.OnSurnameChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OtherNames", DbType:="VarChar(128)")>  _
		Public Property OtherNames() As String
			Get
				Return Me._OtherNames
			End Get
			Set
				If (String.Equals(Me._OtherNames, value) = false) Then
					Me.OnOtherNamesChanging(value)
					Me.SendPropertyChanging
					Me._OtherNames = value
					Me.SendPropertyChanged("OtherNames")
					Me.OnOtherNamesChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address", DbType:="VarChar(256)")>  _
		Public Property Address() As String
			Get
				Return Me._Address
			End Get
			Set
				If (String.Equals(Me._Address, value) = false) Then
					Me.OnAddressChanging(value)
					Me.SendPropertyChanging
					Me._Address = value
					Me.SendPropertyChanged("Address")
					Me.OnAddressChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_State", DbType:="VarChar(64)")>  _
		Public Property State() As String
			Get
				Return Me._State
			End Get
			Set
				If (String.Equals(Me._State, value) = false) Then
					Me.OnStateChanging(value)
					Me.SendPropertyChanging
					Me._State = value
					Me.SendPropertyChanged("State")
					Me.OnStateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Country", DbType:="VarChar(64)")>  _
		Public Property Country() As String
			Get
				Return Me._Country
			End Get
			Set
				If (String.Equals(Me._Country, value) = false) Then
					Me.OnCountryChanging(value)
					Me.SendPropertyChanging
					Me._Country = value
					Me.SendPropertyChanged("Country")
					Me.OnCountryChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Sex", DbType:="VarChar(64)")>  _
		Public Property Sex() As String
			Get
				Return Me._Sex
			End Get
			Set
				If (String.Equals(Me._Sex, value) = false) Then
					Me.OnSexChanging(value)
					Me.SendPropertyChanging
					Me._Sex = value
					Me.SendPropertyChanged("Sex")
					Me.OnSexChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BirthDate", DbType:="SmallDateTime")>  _
		Public Property BirthDate() As System.Nullable(Of Date)
			Get
				Return Me._BirthDate
			End Get
			Set
				If (Me._BirthDate.Equals(value) = false) Then
					Me.OnBirthDateChanging(value)
					Me.SendPropertyChanging
					Me._BirthDate = value
					Me.SendPropertyChanged("BirthDate")
					Me.OnBirthDateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MaritalStatus", DbType:="VarChar(64)")>  _
		Public Property MaritalStatus() As String
			Get
				Return Me._MaritalStatus
			End Get
			Set
				If (String.Equals(Me._MaritalStatus, value) = false) Then
					Me.OnMaritalStatusChanging(value)
					Me.SendPropertyChanging
					Me._MaritalStatus = value
					Me.SendPropertyChanged("MaritalStatus")
					Me.OnMaritalStatusChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StateOrigin", DbType:="VarChar(64)")>  _
		Public Property StateOrigin() As String
			Get
				Return Me._StateOrigin
			End Get
			Set
				If (String.Equals(Me._StateOrigin, value) = false) Then
					Me.OnStateOriginChanging(value)
					Me.SendPropertyChanging
					Me._StateOrigin = value
					Me.SendPropertyChanged("StateOrigin")
					Me.OnStateOriginChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NationalIDNo", DbType:="VarChar(64)")>  _
		Public Property NationalIDNo() As String
			Get
				Return Me._NationalIDNo
			End Get
			Set
				If (String.Equals(Me._NationalIDNo, value) = false) Then
					Me.OnNationalIDNoChanging(value)
					Me.SendPropertyChanging
					Me._NationalIDNo = value
					Me.SendPropertyChanged("NationalIDNo")
					Me.OnNationalIDNoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AcctNo1", DbType:="VarChar(64)")>  _
		Public Property AcctNo1() As String
			Get
				Return Me._AcctNo1
			End Get
			Set
				If (String.Equals(Me._AcctNo1, value) = false) Then
					Me.OnAcctNo1Changing(value)
					Me.SendPropertyChanging
					Me._AcctNo1 = value
					Me.SendPropertyChanged("AcctNo1")
					Me.OnAcctNo1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AcctName1", DbType:="VarChar(64)")>  _
		Public Property AcctName1() As String
			Get
				Return Me._AcctName1
			End Get
			Set
				If (String.Equals(Me._AcctName1, value) = false) Then
					Me.OnAcctName1Changing(value)
					Me.SendPropertyChanging
					Me._AcctName1 = value
					Me.SendPropertyChanged("AcctName1")
					Me.OnAcctName1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AcctNo2", DbType:="VarChar(64)")>  _
		Public Property AcctNo2() As String
			Get
				Return Me._AcctNo2
			End Get
			Set
				If (String.Equals(Me._AcctNo2, value) = false) Then
					Me.OnAcctNo2Changing(value)
					Me.SendPropertyChanging
					Me._AcctNo2 = value
					Me.SendPropertyChanged("AcctNo2")
					Me.OnAcctNo2Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AcctName2", DbType:="VarChar(64)")>  _
		Public Property AcctName2() As String
			Get
				Return Me._AcctName2
			End Get
			Set
				If (String.Equals(Me._AcctName2, value) = false) Then
					Me.OnAcctName2Changing(value)
					Me.SendPropertyChanging
					Me._AcctName2 = value
					Me.SendPropertyChanged("AcctName2")
					Me.OnAcctName2Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HMOName", DbType:="VarChar(64)")>  _
		Public Property HMOName() As String
			Get
				Return Me._HMOName
			End Get
			Set
				If (String.Equals(Me._HMOName, value) = false) Then
					Me.OnHMONameChanging(value)
					Me.SendPropertyChanging
					Me._HMOName = value
					Me.SendPropertyChanged("HMOName")
					Me.OnHMONameChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HMOID", DbType:="VarChar(64)")>  _
		Public Property HMOID() As String
			Get
				Return Me._HMOID
			End Get
			Set
				If (String.Equals(Me._HMOID, value) = false) Then
					Me.OnHMOIDChanging(value)
					Me.SendPropertyChanging
					Me._HMOID = value
					Me.SendPropertyChanged("HMOID")
					Me.OnHMOIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BranchID", DbType:="VarChar(64)")>  _
		Public Property BranchID() As String
			Get
				Return Me._BranchID
			End Get
			Set
				If (String.Equals(Me._BranchID, value) = false) Then
					Me.OnBranchIDChanging(value)
					Me.SendPropertyChanging
					Me._BranchID = value
					Me.SendPropertyChanged("BranchID")
					Me.OnBranchIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Branch", DbType:="VarChar(64)")>  _
		Public Property Branch() As String
			Get
				Return Me._Branch
			End Get
			Set
				If (String.Equals(Me._Branch, value) = false) Then
					Me.OnBranchChanging(value)
					Me.SendPropertyChanging
					Me._Branch = value
					Me.SendPropertyChanged("Branch")
					Me.OnBranchChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DeptID", DbType:="VarChar(64)")>  _
		Public Property DeptID() As String
			Get
				Return Me._DeptID
			End Get
			Set
				If (String.Equals(Me._DeptID, value) = false) Then
					Me.OnDeptIDChanging(value)
					Me.SendPropertyChanging
					Me._DeptID = value
					Me.SendPropertyChanged("DeptID")
					Me.OnDeptIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Dept", DbType:="VarChar(64)")>  _
		Public Property Dept() As String
			Get
				Return Me._Dept
			End Get
			Set
				If (String.Equals(Me._Dept, value) = false) Then
					Me.OnDeptChanging(value)
					Me.SendPropertyChanging
					Me._Dept = value
					Me.SendPropertyChanged("Dept")
					Me.OnDeptChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UnitID", DbType:="VarChar(64)")>  _
		Public Property UnitID() As String
			Get
				Return Me._UnitID
			End Get
			Set
				If (String.Equals(Me._UnitID, value) = false) Then
					Me.OnUnitIDChanging(value)
					Me.SendPropertyChanging
					Me._UnitID = value
					Me.SendPropertyChanged("UnitID")
					Me.OnUnitIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Unit", DbType:="VarChar(64)")>  _
		Public Property Unit() As String
			Get
				Return Me._Unit
			End Get
			Set
				If (String.Equals(Me._Unit, value) = false) Then
					Me.OnUnitChanging(value)
					Me.SendPropertyChanging
					Me._Unit = value
					Me.SendPropertyChanged("Unit")
					Me.OnUnitChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GradeID", DbType:="BigInt")>  _
		Public Property GradeID() As System.Nullable(Of Long)
			Get
				Return Me._GradeID
			End Get
			Set
				If (Me._GradeID.Equals(value) = false) Then
					Me.OnGradeIDChanging(value)
					Me.SendPropertyChanging
					Me._GradeID = value
					Me.SendPropertyChanged("GradeID")
					Me.OnGradeIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Grade", DbType:="VarChar(64)")>  _
		Public Property Grade() As String
			Get
				Return Me._Grade
			End Get
			Set
				If (String.Equals(Me._Grade, value) = false) Then
					Me.OnGradeChanging(value)
					Me.SendPropertyChanging
					Me._Grade = value
					Me.SendPropertyChanged("Grade")
					Me.OnGradeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HireDate", DbType:="SmallDateTime")>  _
		Public Property HireDate() As System.Nullable(Of Date)
			Get
				Return Me._HireDate
			End Get
			Set
				If (Me._HireDate.Equals(value) = false) Then
					Me.OnHireDateChanging(value)
					Me.SendPropertyChanging
					Me._HireDate = value
					Me.SendPropertyChanged("HireDate")
					Me.OnHireDateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Telephone", DbType:="VarChar(64)")>  _
		Public Property Telephone() As String
			Get
				Return Me._Telephone
			End Get
			Set
				If (String.Equals(Me._Telephone, value) = false) Then
					Me.OnTelephoneChanging(value)
					Me.SendPropertyChanging
					Me._Telephone = value
					Me.SendPropertyChanged("Telephone")
					Me.OnTelephoneChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MobilePhone", DbType:="VarChar(64)")>  _
		Public Property MobilePhone() As String
			Get
				Return Me._MobilePhone
			End Get
			Set
				If (String.Equals(Me._MobilePhone, value) = false) Then
					Me.OnMobilePhoneChanging(value)
					Me.SendPropertyChanging
					Me._MobilePhone = value
					Me.SendPropertyChanged("MobilePhone")
					Me.OnMobilePhoneChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Email2", DbType:="VarChar(64)")>  _
		Public Property Email2() As String
			Get
				Return Me._Email2
			End Get
			Set
				If (String.Equals(Me._Email2, value) = false) Then
					Me.OnEmail2Changing(value)
					Me.SendPropertyChanging
					Me._Email2 = value
					Me.SendPropertyChanged("Email2")
					Me.OnEmail2Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Email", DbType:="VarChar(64)")>  _
		Public Property Email() As String
			Get
				Return Me._Email
			End Get
			Set
				If (String.Equals(Me._Email, value) = false) Then
					Me.OnEmailChanging(value)
					Me.SendPropertyChanging
					Me._Email = value
					Me.SendPropertyChanged("Email")
					Me.OnEmailChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NextKin", DbType:="VarChar(256)")>  _
		Public Property NextKin() As String
			Get
				Return Me._NextKin
			End Get
			Set
				If (String.Equals(Me._NextKin, value) = false) Then
					Me.OnNextKinChanging(value)
					Me.SendPropertyChanging
					Me._NextKin = value
					Me.SendPropertyChanged("NextKin")
					Me.OnNextKinChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_KinAddress", DbType:="VarChar(256)")>  _
		Public Property KinAddress() As String
			Get
				Return Me._KinAddress
			End Get
			Set
				If (String.Equals(Me._KinAddress, value) = false) Then
					Me.OnKinAddressChanging(value)
					Me.SendPropertyChanging
					Me._KinAddress = value
					Me.SendPropertyChanged("KinAddress")
					Me.OnKinAddressChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_KinPhone", DbType:="VarChar(64)")>  _
		Public Property KinPhone() As String
			Get
				Return Me._KinPhone
			End Get
			Set
				If (String.Equals(Me._KinPhone, value) = false) Then
					Me.OnKinPhoneChanging(value)
					Me.SendPropertyChanging
					Me._KinPhone = value
					Me.SendPropertyChanged("KinPhone")
					Me.OnKinPhoneChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_KinRelationship", DbType:="VarChar(256)")>  _
		Public Property KinRelationship() As String
			Get
				Return Me._KinRelationship
			End Get
			Set
				If (String.Equals(Me._KinRelationship, value) = false) Then
					Me.OnKinRelationshipChanging(value)
					Me.SendPropertyChanging
					Me._KinRelationship = value
					Me.SendPropertyChanged("KinRelationship")
					Me.OnKinRelationshipChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Height", DbType:="VarChar(64)")>  _
		Public Property Height() As String
			Get
				Return Me._Height
			End Get
			Set
				If (String.Equals(Me._Height, value) = false) Then
					Me.OnHeightChanging(value)
					Me.SendPropertyChanging
					Me._Height = value
					Me.SendPropertyChanged("Height")
					Me.OnHeightChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Weight", DbType:="VarChar(64)")>  _
		Public Property Weight() As String
			Get
				Return Me._Weight
			End Get
			Set
				If (String.Equals(Me._Weight, value) = false) Then
					Me.OnWeightChanging(value)
					Me.SendPropertyChanging
					Me._Weight = value
					Me.SendPropertyChanged("Weight")
					Me.OnWeightChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Smoker", DbType:="BigInt")>  _
		Public Property Smoker() As System.Nullable(Of Long)
			Get
				Return Me._Smoker
			End Get
			Set
				If (Me._Smoker.Equals(value) = false) Then
					Me.OnSmokerChanging(value)
					Me.SendPropertyChanging
					Me._Smoker = value
					Me.SendPropertyChanged("Smoker")
					Me.OnSmokerChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DisableType", DbType:="VarChar(64)")>  _
		Public Property DisableType() As String
			Get
				Return Me._DisableType
			End Get
			Set
				If (String.Equals(Me._DisableType, value) = false) Then
					Me.OnDisableTypeChanging(value)
					Me.SendPropertyChanging
					Me._DisableType = value
					Me.SendPropertyChanged("DisableType")
					Me.OnDisableTypeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Remarks", DbType:="VarChar(256)")>  _
		Public Property Remarks() As String
			Get
				Return Me._Remarks
			End Get
			Set
				If (String.Equals(Me._Remarks, value) = false) Then
					Me.OnRemarksChanging(value)
					Me.SendPropertyChanging
					Me._Remarks = value
					Me.SendPropertyChanged("Remarks")
					Me.OnRemarksChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tag", DbType:="VarChar(256)")>  _
		Public Property Tag() As String
			Get
				Return Me._Tag
			End Get
			Set
				If (String.Equals(Me._Tag, value) = false) Then
					Me.OnTagChanging(value)
					Me.SendPropertyChanging
					Me._Tag = value
					Me.SendPropertyChanged("Tag")
					Me.OnTagChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Photo", DbType:="Image", CanBeNull:=true, UpdateCheck:=UpdateCheck.Never)>  _
		Public Property Photo() As System.Data.Linq.Binary
			Get
				Return Me._Photo
			End Get
			Set
				If (Object.Equals(Me._Photo, value) = false) Then
					Me.OnPhotoChanging(value)
					Me.SendPropertyChanging
					Me._Photo = value
					Me.SendPropertyChanged("Photo")
					Me.OnPhotoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PayFirstMonth", DbType:="VarChar(50)")>  _
		Public Property PayFirstMonth() As String
			Get
				Return Me._PayFirstMonth
			End Get
			Set
				If (String.Equals(Me._PayFirstMonth, value) = false) Then
					Me.OnPayFirstMonthChanging(value)
					Me.SendPropertyChanging
					Me._PayFirstMonth = value
					Me.SendPropertyChanged("PayFirstMonth")
					Me.OnPayFirstMonthChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SheetID2", DbType:="BigInt")>  _
		Public Property SheetID2() As System.Nullable(Of Long)
			Get
				Return Me._SheetID2
			End Get
			Set
				If (Me._SheetID2.Equals(value) = false) Then
					Me.OnSheetID2Changing(value)
					Me.SendPropertyChanging
					Me._SheetID2 = value
					Me.SendPropertyChanged("SheetID2")
					Me.OnSheetID2Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ConfirmStatus", DbType:="VarChar(50)")>  _
		Public Property ConfirmStatus() As String
			Get
				Return Me._ConfirmStatus
			End Get
			Set
				If (String.Equals(Me._ConfirmStatus, value) = false) Then
					Me.OnConfirmStatusChanging(value)
					Me.SendPropertyChanging
					Me._ConfirmStatus = value
					Me.SendPropertyChanged("ConfirmStatus")
					Me.OnConfirmStatusChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ConfirmDuration", DbType:="BigInt")>  _
		Public Property ConfirmDuration() As System.Nullable(Of Long)
			Get
				Return Me._ConfirmDuration
			End Get
			Set
				If (Me._ConfirmDuration.Equals(value) = false) Then
					Me.OnConfirmDurationChanging(value)
					Me.SendPropertyChanging
					Me._ConfirmDuration = value
					Me.SendPropertyChanged("ConfirmDuration")
					Me.OnConfirmDurationChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ConfirmationDate", DbType:="DateTime")>  _
		Public Property ConfirmationDate() As System.Nullable(Of Date)
			Get
				Return Me._ConfirmationDate
			End Get
			Set
				If (Me._ConfirmationDate.Equals(value) = false) Then
					Me.OnConfirmationDateChanging(value)
					Me.SendPropertyChanging
					Me._ConfirmationDate = value
					Me.SendPropertyChanged("ConfirmationDate")
					Me.OnConfirmationDateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RetiredDate", DbType:="DateTime")>  _
		Public Property RetiredDate() As System.Nullable(Of Date)
			Get
				Return Me._RetiredDate
			End Get
			Set
				If (Me._RetiredDate.Equals(value) = false) Then
					Me.OnRetiredDateChanging(value)
					Me.SendPropertyChanging
					Me._RetiredDate = value
					Me.SendPropertyChanged("RetiredDate")
					Me.OnRetiredDateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Deleted", DbType:="TinyInt")>  _
		Public Property Deleted() As System.Nullable(Of Byte)
			Get
				Return Me._Deleted
			End Get
			Set
				If (Me._Deleted.Equals(value) = false) Then
					Me.OnDeletedChanging(value)
					Me.SendPropertyChanging
					Me._Deleted = value
					Me.SendPropertyChanged("Deleted")
					Me.OnDeletedChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Active", DbType:="TinyInt")>  _
		Public Property Active() As System.Nullable(Of Byte)
			Get
				Return Me._Active
			End Get
			Set
				If (Me._Active.Equals(value) = false) Then
					Me.OnActiveChanging(value)
					Me.SendPropertyChanging
					Me._Active = value
					Me.SendPropertyChanged("Active")
					Me.OnActiveChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Submitby", DbType:="VarChar(50)")>  _
		Public Property Submitby() As String
			Get
				Return Me._Submitby
			End Get
			Set
				If (String.Equals(Me._Submitby, value) = false) Then
					Me.OnSubmitbyChanging(value)
					Me.SendPropertyChanging
					Me._Submitby = value
					Me.SendPropertyChanged("Submitby")
					Me.OnSubmitbyChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubmitOn", DbType:="DateTime")>  _
		Public Property SubmitOn() As System.Nullable(Of Date)
			Get
				Return Me._SubmitOn
			End Get
			Set
				If (Me._SubmitOn.Equals(value) = false) Then
					Me.OnSubmitOnChanging(value)
					Me.SendPropertyChanging
					Me._SubmitOn = value
					Me.SendPropertyChanged("SubmitOn")
					Me.OnSubmitOnChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedBy", DbType:="VarChar(50)")>  _
		Public Property ModifiedBy() As String
			Get
				Return Me._ModifiedBy
			End Get
			Set
				If (String.Equals(Me._ModifiedBy, value) = false) Then
					Me.OnModifiedByChanging(value)
					Me.SendPropertyChanging
					Me._ModifiedBy = value
					Me.SendPropertyChanged("ModifiedBy")
					Me.OnModifiedByChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedOn", DbType:="DateTime")>  _
		Public Property ModifiedOn() As System.Nullable(Of Date)
			Get
				Return Me._ModifiedOn
			End Get
			Set
				If (Me._ModifiedOn.Equals(value) = false) Then
					Me.OnModifiedOnChanging(value)
					Me.SendPropertyChanging
					Me._ModifiedOn = value
					Me.SendPropertyChanged("ModifiedOn")
					Me.OnModifiedOnChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.assPurchase")>  _
	Partial Public Class assPurchase
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _Asset_Code As String
		
		Private _Asset As String
		
		Private _LocationID As String
		
		Private _Location As String
		
		Private _CategoryID As String
		
		Private _Category As String
		
		Private _Trans_Type As String
		
		Private _Purchase_Date As System.Nullable(Of Date)
		
		Private _Invoice_No As String
		
		Private _Quantity As System.Nullable(Of Decimal)
		
		Private _UnitPrice As System.Nullable(Of Decimal)
		
		Private _Purchase_Amt As System.Nullable(Of Decimal)
		
		Private _DisposedDate As System.Nullable(Of Date)
		
		Private _DisposalAmt As System.Nullable(Of Decimal)
		
		Private _CumDep As System.Nullable(Of Decimal)
		
		Private _NBV As System.Nullable(Of Decimal)
		
		Private _BankCode As String
		
		Private _ChequeDetail As String
		
		Private _Optiontype As String
		
		Private _Description As String
		
		Private _Remarks As String
		
		Private _Tag As String
		
		Private _LastDeprMonth As String
		
		Private _TransSTATUS As String
		
		Private _TransGUID As String
		
		Private _Deleted As System.Nullable(Of Byte)
		
		Private _Active As System.Nullable(Of Byte)
		
		Private _SubmittedBy As String
		
		Private _SubmittedOn As System.Nullable(Of Date)
		
		Private _ModifiedBy As String
		
		Private _ModifiedOn As System.Nullable(Of Date)
		
		Private _ApprovedBy As String
		
		Private _ApprovedOn As System.Nullable(Of Date)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnAsset_CodeChanging(value As String)
    End Sub
    Partial Private Sub OnAsset_CodeChanged()
    End Sub
    Partial Private Sub OnAssetChanging(value As String)
    End Sub
    Partial Private Sub OnAssetChanged()
    End Sub
    Partial Private Sub OnLocationIDChanging(value As String)
    End Sub
    Partial Private Sub OnLocationIDChanged()
    End Sub
    Partial Private Sub OnLocationChanging(value As String)
    End Sub
    Partial Private Sub OnLocationChanged()
    End Sub
    Partial Private Sub OnCategoryIDChanging(value As String)
    End Sub
    Partial Private Sub OnCategoryIDChanged()
    End Sub
    Partial Private Sub OnCategoryChanging(value As String)
    End Sub
    Partial Private Sub OnCategoryChanged()
    End Sub
    Partial Private Sub OnTrans_TypeChanging(value As String)
    End Sub
    Partial Private Sub OnTrans_TypeChanged()
    End Sub
    Partial Private Sub OnPurchase_DateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnPurchase_DateChanged()
    End Sub
    Partial Private Sub OnInvoice_NoChanging(value As String)
    End Sub
    Partial Private Sub OnInvoice_NoChanged()
    End Sub
    Partial Private Sub OnQuantityChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnQuantityChanged()
    End Sub
    Partial Private Sub OnUnitPriceChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnUnitPriceChanged()
    End Sub
    Partial Private Sub OnPurchase_AmtChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnPurchase_AmtChanged()
    End Sub
    Partial Private Sub OnDisposedDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDisposedDateChanged()
    End Sub
    Partial Private Sub OnDisposalAmtChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnDisposalAmtChanged()
    End Sub
    Partial Private Sub OnCumDepChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnCumDepChanged()
    End Sub
    Partial Private Sub OnNBVChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnNBVChanged()
    End Sub
    Partial Private Sub OnBankCodeChanging(value As String)
    End Sub
    Partial Private Sub OnBankCodeChanged()
    End Sub
    Partial Private Sub OnChequeDetailChanging(value As String)
    End Sub
    Partial Private Sub OnChequeDetailChanged()
    End Sub
    Partial Private Sub OnOptiontypeChanging(value As String)
    End Sub
    Partial Private Sub OnOptiontypeChanged()
    End Sub
    Partial Private Sub OnDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnDescriptionChanged()
    End Sub
    Partial Private Sub OnRemarksChanging(value As String)
    End Sub
    Partial Private Sub OnRemarksChanged()
    End Sub
    Partial Private Sub OnTagChanging(value As String)
    End Sub
    Partial Private Sub OnTagChanged()
    End Sub
    Partial Private Sub OnLastDeprMonthChanging(value As String)
    End Sub
    Partial Private Sub OnLastDeprMonthChanged()
    End Sub
    Partial Private Sub OnTransSTATUSChanging(value As String)
    End Sub
    Partial Private Sub OnTransSTATUSChanged()
    End Sub
    Partial Private Sub OnTransGUIDChanging(value As String)
    End Sub
    Partial Private Sub OnTransGUIDChanged()
    End Sub
    Partial Private Sub OnDeletedChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnDeletedChanged()
    End Sub
    Partial Private Sub OnActiveChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnActiveChanged()
    End Sub
    Partial Private Sub OnSubmittedByChanging(value As String)
    End Sub
    Partial Private Sub OnSubmittedByChanged()
    End Sub
    Partial Private Sub OnSubmittedOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSubmittedOnChanged()
    End Sub
    Partial Private Sub OnModifiedByChanging(value As String)
    End Sub
    Partial Private Sub OnModifiedByChanged()
    End Sub
    Partial Private Sub OnModifiedOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnModifiedOnChanged()
    End Sub
    Partial Private Sub OnApprovedByChanging(value As String)
    End Sub
    Partial Private Sub OnApprovedByChanged()
    End Sub
    Partial Private Sub OnApprovedOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnApprovedOnChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Asset_Code", DbType:="VarChar(32) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property Asset_Code() As String
			Get
				Return Me._Asset_Code
			End Get
			Set
				If (String.Equals(Me._Asset_Code, value) = false) Then
					Me.OnAsset_CodeChanging(value)
					Me.SendPropertyChanging
					Me._Asset_Code = value
					Me.SendPropertyChanged("Asset_Code")
					Me.OnAsset_CodeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Asset", DbType:="VarChar(1024)")>  _
		Public Property Asset() As String
			Get
				Return Me._Asset
			End Get
			Set
				If (String.Equals(Me._Asset, value) = false) Then
					Me.OnAssetChanging(value)
					Me.SendPropertyChanging
					Me._Asset = value
					Me.SendPropertyChanged("Asset")
					Me.OnAssetChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LocationID", DbType:="VarChar(128)")>  _
		Public Property LocationID() As String
			Get
				Return Me._LocationID
			End Get
			Set
				If (String.Equals(Me._LocationID, value) = false) Then
					Me.OnLocationIDChanging(value)
					Me.SendPropertyChanging
					Me._LocationID = value
					Me.SendPropertyChanged("LocationID")
					Me.OnLocationIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Location", DbType:="VarChar(128)")>  _
		Public Property Location() As String
			Get
				Return Me._Location
			End Get
			Set
				If (String.Equals(Me._Location, value) = false) Then
					Me.OnLocationChanging(value)
					Me.SendPropertyChanging
					Me._Location = value
					Me.SendPropertyChanged("Location")
					Me.OnLocationChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CategoryID", DbType:="VarChar(20)")>  _
		Public Property CategoryID() As String
			Get
				Return Me._CategoryID
			End Get
			Set
				If (String.Equals(Me._CategoryID, value) = false) Then
					Me.OnCategoryIDChanging(value)
					Me.SendPropertyChanging
					Me._CategoryID = value
					Me.SendPropertyChanged("CategoryID")
					Me.OnCategoryIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Category", DbType:="VarChar(32)")>  _
		Public Property Category() As String
			Get
				Return Me._Category
			End Get
			Set
				If (String.Equals(Me._Category, value) = false) Then
					Me.OnCategoryChanging(value)
					Me.SendPropertyChanging
					Me._Category = value
					Me.SendPropertyChanged("Category")
					Me.OnCategoryChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Trans_Type", DbType:="VarChar(128)")>  _
		Public Property Trans_Type() As String
			Get
				Return Me._Trans_Type
			End Get
			Set
				If (String.Equals(Me._Trans_Type, value) = false) Then
					Me.OnTrans_TypeChanging(value)
					Me.SendPropertyChanging
					Me._Trans_Type = value
					Me.SendPropertyChanged("Trans_Type")
					Me.OnTrans_TypeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Purchase_Date", DbType:="SmallDateTime")>  _
		Public Property Purchase_Date() As System.Nullable(Of Date)
			Get
				Return Me._Purchase_Date
			End Get
			Set
				If (Me._Purchase_Date.Equals(value) = false) Then
					Me.OnPurchase_DateChanging(value)
					Me.SendPropertyChanging
					Me._Purchase_Date = value
					Me.SendPropertyChanged("Purchase_Date")
					Me.OnPurchase_DateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Invoice_No", DbType:="VarChar(256)")>  _
		Public Property Invoice_No() As String
			Get
				Return Me._Invoice_No
			End Get
			Set
				If (String.Equals(Me._Invoice_No, value) = false) Then
					Me.OnInvoice_NoChanging(value)
					Me.SendPropertyChanging
					Me._Invoice_No = value
					Me.SendPropertyChanged("Invoice_No")
					Me.OnInvoice_NoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Quantity", DbType:="Money")>  _
		Public Property Quantity() As System.Nullable(Of Decimal)
			Get
				Return Me._Quantity
			End Get
			Set
				If (Me._Quantity.Equals(value) = false) Then
					Me.OnQuantityChanging(value)
					Me.SendPropertyChanging
					Me._Quantity = value
					Me.SendPropertyChanged("Quantity")
					Me.OnQuantityChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UnitPrice", DbType:="Money")>  _
		Public Property UnitPrice() As System.Nullable(Of Decimal)
			Get
				Return Me._UnitPrice
			End Get
			Set
				If (Me._UnitPrice.Equals(value) = false) Then
					Me.OnUnitPriceChanging(value)
					Me.SendPropertyChanging
					Me._UnitPrice = value
					Me.SendPropertyChanged("UnitPrice")
					Me.OnUnitPriceChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Purchase_Amt", DbType:="Money")>  _
		Public Property Purchase_Amt() As System.Nullable(Of Decimal)
			Get
				Return Me._Purchase_Amt
			End Get
			Set
				If (Me._Purchase_Amt.Equals(value) = false) Then
					Me.OnPurchase_AmtChanging(value)
					Me.SendPropertyChanging
					Me._Purchase_Amt = value
					Me.SendPropertyChanged("Purchase_Amt")
					Me.OnPurchase_AmtChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DisposedDate", DbType:="DateTime")>  _
		Public Property DisposedDate() As System.Nullable(Of Date)
			Get
				Return Me._DisposedDate
			End Get
			Set
				If (Me._DisposedDate.Equals(value) = false) Then
					Me.OnDisposedDateChanging(value)
					Me.SendPropertyChanging
					Me._DisposedDate = value
					Me.SendPropertyChanged("DisposedDate")
					Me.OnDisposedDateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DisposalAmt", DbType:="Money")>  _
		Public Property DisposalAmt() As System.Nullable(Of Decimal)
			Get
				Return Me._DisposalAmt
			End Get
			Set
				If (Me._DisposalAmt.Equals(value) = false) Then
					Me.OnDisposalAmtChanging(value)
					Me.SendPropertyChanging
					Me._DisposalAmt = value
					Me.SendPropertyChanged("DisposalAmt")
					Me.OnDisposalAmtChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CumDep", DbType:="Money")>  _
		Public Property CumDep() As System.Nullable(Of Decimal)
			Get
				Return Me._CumDep
			End Get
			Set
				If (Me._CumDep.Equals(value) = false) Then
					Me.OnCumDepChanging(value)
					Me.SendPropertyChanging
					Me._CumDep = value
					Me.SendPropertyChanged("CumDep")
					Me.OnCumDepChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NBV", DbType:="Money")>  _
		Public Property NBV() As System.Nullable(Of Decimal)
			Get
				Return Me._NBV
			End Get
			Set
				If (Me._NBV.Equals(value) = false) Then
					Me.OnNBVChanging(value)
					Me.SendPropertyChanging
					Me._NBV = value
					Me.SendPropertyChanged("NBV")
					Me.OnNBVChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BankCode", DbType:="VarChar(256)")>  _
		Public Property BankCode() As String
			Get
				Return Me._BankCode
			End Get
			Set
				If (String.Equals(Me._BankCode, value) = false) Then
					Me.OnBankCodeChanging(value)
					Me.SendPropertyChanging
					Me._BankCode = value
					Me.SendPropertyChanged("BankCode")
					Me.OnBankCodeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ChequeDetail", DbType:="VarChar(256)")>  _
		Public Property ChequeDetail() As String
			Get
				Return Me._ChequeDetail
			End Get
			Set
				If (String.Equals(Me._ChequeDetail, value) = false) Then
					Me.OnChequeDetailChanging(value)
					Me.SendPropertyChanging
					Me._ChequeDetail = value
					Me.SendPropertyChanged("ChequeDetail")
					Me.OnChequeDetailChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Optiontype", DbType:="VarChar(256)")>  _
		Public Property Optiontype() As String
			Get
				Return Me._Optiontype
			End Get
			Set
				If (String.Equals(Me._Optiontype, value) = false) Then
					Me.OnOptiontypeChanging(value)
					Me.SendPropertyChanging
					Me._Optiontype = value
					Me.SendPropertyChanged("Optiontype")
					Me.OnOptiontypeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="VarChar(1024)")>  _
		Public Property Description() As String
			Get
				Return Me._Description
			End Get
			Set
				If (String.Equals(Me._Description, value) = false) Then
					Me.OnDescriptionChanging(value)
					Me.SendPropertyChanging
					Me._Description = value
					Me.SendPropertyChanged("Description")
					Me.OnDescriptionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Remarks", DbType:="VarChar(1024)")>  _
		Public Property Remarks() As String
			Get
				Return Me._Remarks
			End Get
			Set
				If (String.Equals(Me._Remarks, value) = false) Then
					Me.OnRemarksChanging(value)
					Me.SendPropertyChanging
					Me._Remarks = value
					Me.SendPropertyChanged("Remarks")
					Me.OnRemarksChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tag", DbType:="VarChar(1024)")>  _
		Public Property Tag() As String
			Get
				Return Me._Tag
			End Get
			Set
				If (String.Equals(Me._Tag, value) = false) Then
					Me.OnTagChanging(value)
					Me.SendPropertyChanging
					Me._Tag = value
					Me.SendPropertyChanged("Tag")
					Me.OnTagChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastDeprMonth", DbType:="VarChar(50)")>  _
		Public Property LastDeprMonth() As String
			Get
				Return Me._LastDeprMonth
			End Get
			Set
				If (String.Equals(Me._LastDeprMonth, value) = false) Then
					Me.OnLastDeprMonthChanging(value)
					Me.SendPropertyChanging
					Me._LastDeprMonth = value
					Me.SendPropertyChanged("LastDeprMonth")
					Me.OnLastDeprMonthChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TransSTATUS", DbType:="VarChar(64)")>  _
		Public Property TransSTATUS() As String
			Get
				Return Me._TransSTATUS
			End Get
			Set
				If (String.Equals(Me._TransSTATUS, value) = false) Then
					Me.OnTransSTATUSChanging(value)
					Me.SendPropertyChanging
					Me._TransSTATUS = value
					Me.SendPropertyChanged("TransSTATUS")
					Me.OnTransSTATUSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TransGUID", DbType:="VarChar(64)")>  _
		Public Property TransGUID() As String
			Get
				Return Me._TransGUID
			End Get
			Set
				If (String.Equals(Me._TransGUID, value) = false) Then
					Me.OnTransGUIDChanging(value)
					Me.SendPropertyChanging
					Me._TransGUID = value
					Me.SendPropertyChanged("TransGUID")
					Me.OnTransGUIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Deleted", DbType:="TinyInt")>  _
		Public Property Deleted() As System.Nullable(Of Byte)
			Get
				Return Me._Deleted
			End Get
			Set
				If (Me._Deleted.Equals(value) = false) Then
					Me.OnDeletedChanging(value)
					Me.SendPropertyChanging
					Me._Deleted = value
					Me.SendPropertyChanged("Deleted")
					Me.OnDeletedChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Active", DbType:="TinyInt")>  _
		Public Property Active() As System.Nullable(Of Byte)
			Get
				Return Me._Active
			End Get
			Set
				If (Me._Active.Equals(value) = false) Then
					Me.OnActiveChanging(value)
					Me.SendPropertyChanging
					Me._Active = value
					Me.SendPropertyChanged("Active")
					Me.OnActiveChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubmittedBy", DbType:="VarChar(128)")>  _
		Public Property SubmittedBy() As String
			Get
				Return Me._SubmittedBy
			End Get
			Set
				If (String.Equals(Me._SubmittedBy, value) = false) Then
					Me.OnSubmittedByChanging(value)
					Me.SendPropertyChanging
					Me._SubmittedBy = value
					Me.SendPropertyChanged("SubmittedBy")
					Me.OnSubmittedByChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubmittedOn", DbType:="SmallDateTime")>  _
		Public Property SubmittedOn() As System.Nullable(Of Date)
			Get
				Return Me._SubmittedOn
			End Get
			Set
				If (Me._SubmittedOn.Equals(value) = false) Then
					Me.OnSubmittedOnChanging(value)
					Me.SendPropertyChanging
					Me._SubmittedOn = value
					Me.SendPropertyChanged("SubmittedOn")
					Me.OnSubmittedOnChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedBy", DbType:="VarChar(128)")>  _
		Public Property ModifiedBy() As String
			Get
				Return Me._ModifiedBy
			End Get
			Set
				If (String.Equals(Me._ModifiedBy, value) = false) Then
					Me.OnModifiedByChanging(value)
					Me.SendPropertyChanging
					Me._ModifiedBy = value
					Me.SendPropertyChanged("ModifiedBy")
					Me.OnModifiedByChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedOn", DbType:="SmallDateTime")>  _
		Public Property ModifiedOn() As System.Nullable(Of Date)
			Get
				Return Me._ModifiedOn
			End Get
			Set
				If (Me._ModifiedOn.Equals(value) = false) Then
					Me.OnModifiedOnChanging(value)
					Me.SendPropertyChanging
					Me._ModifiedOn = value
					Me.SendPropertyChanged("ModifiedOn")
					Me.OnModifiedOnChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApprovedBy", DbType:="VarChar(128)")>  _
		Public Property ApprovedBy() As String
			Get
				Return Me._ApprovedBy
			End Get
			Set
				If (String.Equals(Me._ApprovedBy, value) = false) Then
					Me.OnApprovedByChanging(value)
					Me.SendPropertyChanging
					Me._ApprovedBy = value
					Me.SendPropertyChanged("ApprovedBy")
					Me.OnApprovedByChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApprovedOn", DbType:="SmallDateTime")>  _
		Public Property ApprovedOn() As System.Nullable(Of Date)
			Get
				Return Me._ApprovedOn
			End Get
			Set
				If (Me._ApprovedOn.Equals(value) = false) Then
					Me.OnApprovedOnChanging(value)
					Me.SendPropertyChanging
					Me._ApprovedOn = value
					Me.SendPropertyChanged("ApprovedOn")
					Me.OnApprovedOnChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	Partial Public Class GetEmployeePreviousBillCummulativeResult
		
		Private _EmployeeID As String
		
		Private _MedicalCost As System.Nullable(Of Decimal)
		
		Public Sub New()
			MyBase.New
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EmployeeID", DbType:="VarChar(50)")>  _
		Public Property EmployeeID() As String
			Get
				Return Me._EmployeeID
			End Get
			Set
				If (String.Equals(Me._EmployeeID, value) = false) Then
					Me._EmployeeID = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MedicalCost", DbType:="Money")>  _
		Public Property MedicalCost() As System.Nullable(Of Decimal)
			Get
				Return Me._MedicalCost
			End Get
			Set
				If (Me._MedicalCost.Equals(value) = false) Then
					Me._MedicalCost = value
				End If
			End Set
		End Property
	End Class
	
	Partial Public Class HRGetEmployeeLastPromotionResult
		
		Private _PromotionID As Long
		
		Private _SheetID As System.Nullable(Of Integer)
		
		Private _EmployeeID As String
		
		Private _Grade As String
		
		Private _Step As String
		
		Private _ProDate As System.Nullable(Of Date)
		
		Private _BS As System.Nullable(Of Decimal)
		
		Private _HA As System.Nullable(Of Decimal)
		
		Private _TA As System.Nullable(Of Decimal)
		
		Private _YGPay As System.Nullable(Of Decimal)
		
		Private _YTax As System.Nullable(Of Decimal)
		
		Private _TransSTATUS As String
		
		Private _TransGUID As String
		
		Private _Remarks As String
		
		Private _Tag As String
		
		Private _Deleted As System.Nullable(Of Byte)
		
		Private _Active As System.Nullable(Of Byte)
		
		Private _Submitby As String
		
		Private _SubmitOn As System.Nullable(Of Date)
		
		Private _ModifiedBy As String
		
		Private _ModifiedOn As System.Nullable(Of Date)
		
		Private _PaySheet As String
		
		Public Sub New()
			MyBase.New
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PromotionID", DbType:="BigInt NOT NULL")>  _
		Public Property PromotionID() As Long
			Get
				Return Me._PromotionID
			End Get
			Set
				If ((Me._PromotionID = value)  _
							= false) Then
					Me._PromotionID = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SheetID", DbType:="Int")>  _
		Public Property SheetID() As System.Nullable(Of Integer)
			Get
				Return Me._SheetID
			End Get
			Set
				If (Me._SheetID.Equals(value) = false) Then
					Me._SheetID = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EmployeeID", DbType:="VarChar(32)")>  _
		Public Property EmployeeID() As String
			Get
				Return Me._EmployeeID
			End Get
			Set
				If (String.Equals(Me._EmployeeID, value) = false) Then
					Me._EmployeeID = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Grade", DbType:="VarChar(64)")>  _
		Public Property Grade() As String
			Get
				Return Me._Grade
			End Get
			Set
				If (String.Equals(Me._Grade, value) = false) Then
					Me._Grade = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="Step", Storage:="_Step", DbType:="VarChar(64)")>  _
		Public Property [Step]() As String
			Get
				Return Me._Step
			End Get
			Set
				If (String.Equals(Me._Step, value) = false) Then
					Me._Step = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProDate", DbType:="SmallDateTime")>  _
		Public Property ProDate() As System.Nullable(Of Date)
			Get
				Return Me._ProDate
			End Get
			Set
				If (Me._ProDate.Equals(value) = false) Then
					Me._ProDate = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BS", DbType:="Money")>  _
		Public Property BS() As System.Nullable(Of Decimal)
			Get
				Return Me._BS
			End Get
			Set
				If (Me._BS.Equals(value) = false) Then
					Me._BS = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HA", DbType:="Money")>  _
		Public Property HA() As System.Nullable(Of Decimal)
			Get
				Return Me._HA
			End Get
			Set
				If (Me._HA.Equals(value) = false) Then
					Me._HA = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TA", DbType:="Money")>  _
		Public Property TA() As System.Nullable(Of Decimal)
			Get
				Return Me._TA
			End Get
			Set
				If (Me._TA.Equals(value) = false) Then
					Me._TA = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_YGPay", DbType:="Money")>  _
		Public Property YGPay() As System.Nullable(Of Decimal)
			Get
				Return Me._YGPay
			End Get
			Set
				If (Me._YGPay.Equals(value) = false) Then
					Me._YGPay = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_YTax", DbType:="Money")>  _
		Public Property YTax() As System.Nullable(Of Decimal)
			Get
				Return Me._YTax
			End Get
			Set
				If (Me._YTax.Equals(value) = false) Then
					Me._YTax = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TransSTATUS", DbType:="VarChar(64)")>  _
		Public Property TransSTATUS() As String
			Get
				Return Me._TransSTATUS
			End Get
			Set
				If (String.Equals(Me._TransSTATUS, value) = false) Then
					Me._TransSTATUS = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TransGUID", DbType:="VarChar(64)")>  _
		Public Property TransGUID() As String
			Get
				Return Me._TransGUID
			End Get
			Set
				If (String.Equals(Me._TransGUID, value) = false) Then
					Me._TransGUID = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Remarks", DbType:="VarChar(256)")>  _
		Public Property Remarks() As String
			Get
				Return Me._Remarks
			End Get
			Set
				If (String.Equals(Me._Remarks, value) = false) Then
					Me._Remarks = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tag", DbType:="VarChar(255)")>  _
		Public Property Tag() As String
			Get
				Return Me._Tag
			End Get
			Set
				If (String.Equals(Me._Tag, value) = false) Then
					Me._Tag = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Deleted", DbType:="TinyInt")>  _
		Public Property Deleted() As System.Nullable(Of Byte)
			Get
				Return Me._Deleted
			End Get
			Set
				If (Me._Deleted.Equals(value) = false) Then
					Me._Deleted = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Active", DbType:="TinyInt")>  _
		Public Property Active() As System.Nullable(Of Byte)
			Get
				Return Me._Active
			End Get
			Set
				If (Me._Active.Equals(value) = false) Then
					Me._Active = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Submitby", DbType:="VarChar(50)")>  _
		Public Property Submitby() As String
			Get
				Return Me._Submitby
			End Get
			Set
				If (String.Equals(Me._Submitby, value) = false) Then
					Me._Submitby = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubmitOn", DbType:="DateTime")>  _
		Public Property SubmitOn() As System.Nullable(Of Date)
			Get
				Return Me._SubmitOn
			End Get
			Set
				If (Me._SubmitOn.Equals(value) = false) Then
					Me._SubmitOn = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedBy", DbType:="VarChar(50)")>  _
		Public Property ModifiedBy() As String
			Get
				Return Me._ModifiedBy
			End Get
			Set
				If (String.Equals(Me._ModifiedBy, value) = false) Then
					Me._ModifiedBy = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedOn", DbType:="DateTime")>  _
		Public Property ModifiedOn() As System.Nullable(Of Date)
			Get
				Return Me._ModifiedOn
			End Get
			Set
				If (Me._ModifiedOn.Equals(value) = false) Then
					Me._ModifiedOn = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PaySheet", DbType:="VarChar(50)")>  _
		Public Property PaySheet() As String
			Get
				Return Me._PaySheet
			End Get
			Set
				If (String.Equals(Me._PaySheet, value) = false) Then
					Me._PaySheet = value
				End If
			End Set
		End Property
	End Class
	
	Partial Public Class GetEmployeeIDSummaryResult
		
		Private _EmployeeID As String
		
		Private _ID As Integer
		
		Private _FinalGrossPay As System.Nullable(Of Decimal)
		
		Private _FinalDeductions As System.Nullable(Of Decimal)
		
		Private _FinalNetPay As System.Nullable(Of Decimal)
		
		Public Sub New()
			MyBase.New
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EmployeeID", DbType:="VarChar(50)")>  _
		Public Property EmployeeID() As String
			Get
				Return Me._EmployeeID
			End Get
			Set
				If (String.Equals(Me._EmployeeID, value) = false) Then
					Me._EmployeeID = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", DbType:="Int NOT NULL")>  _
		Public Property ID() As Integer
			Get
				Return Me._ID
			End Get
			Set
				If ((Me._ID = value)  _
							= false) Then
					Me._ID = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FinalGrossPay", DbType:="Money")>  _
		Public Property FinalGrossPay() As System.Nullable(Of Decimal)
			Get
				Return Me._FinalGrossPay
			End Get
			Set
				If (Me._FinalGrossPay.Equals(value) = false) Then
					Me._FinalGrossPay = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FinalDeductions", DbType:="Money")>  _
		Public Property FinalDeductions() As System.Nullable(Of Decimal)
			Get
				Return Me._FinalDeductions
			End Get
			Set
				If (Me._FinalDeductions.Equals(value) = false) Then
					Me._FinalDeductions = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FinalNetPay", DbType:="Money")>  _
		Public Property FinalNetPay() As System.Nullable(Of Decimal)
			Get
				Return Me._FinalNetPay
			End Get
			Set
				If (Me._FinalNetPay.Equals(value) = false) Then
					Me._FinalNetPay = value
				End If
			End Set
		End Property
	End Class
End Namespace
